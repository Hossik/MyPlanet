import React, { Component } from 'react';
import TweenOne from 'rc-tween-one';
import PathPlugin from 'rc-tween-one/lib/plugin/PathPlugin';
import { ExternalLink } from 'react-external-link';
import './rainbow.scss';


TweenOne.plugins.push(PathPlugin);

const duration = 7000;
const ease = 'easeInOutSine';

const p =
  'M123.5,89.5 C148,82.5 239.5,48.5 230,17.5 C220.5,-13.5 127,6 99.5,13.5 C72,21 -9.5,56.5 1.5,84.5 C12.5,112.5 99,96.5 123.5,89.5 Z';
const easePath =
  'M0,100 C7.33333333,89 14.3333333,81.6666667 21,78 C25.3601456,75.6019199 29.8706084,72.9026327 33,70 C37.0478723,66.2454406 39.3980801,62.0758689 42.5,57 C48,46.5 61.5,32.5 70,28 C77.5,23.5 81.5,20 86.5,16 C89.8333333,13.3333333 94.3333333,8 100,0'; 
const loop = {
  yoyo: true,
  repeat: -1,
  duration,
  ease,
  
};
const animate = {
  click: {
    ...loop,
    x: 20,
    duration: 3000,
    delay: 200,
  },
  redSquare: {
    ...loop,
    y: 20,
    duration: 3000,
    delay: 200,
  },
  facebook: {
    ...loop,
    y: 20,
    duration: 4000,
    delay: 200,
  },
  insta: {
    ...loop,
    y: -20,
    duration: 4000,
    delay: 200,
  },
  reddit:{
    ...loop,
    y: 20,
    duration: 4000,
    delay: 200,
  },
  git: {
    ...loop,
    x: -20,
    duration: 4000,
    delay: 200,
  },
  greenBall: {
    path: { x: p, y: p },
    duration: 10000,
    repeat: -1,
    ease: TweenOne.easing.path(easePath, { lengthPixel: 400 }),
  },
  linkedin: {
    ...loop,
    x: 15,
    duration: 4000,
    delay: 200,
  },
  track: {
    ...loop,
    rotate: 15,
  },
  mobfacebook: {
    ...loop,
    y: 15,
    duration: 6000,
    delay: 400,
  },
  mobinsta: {
    ...loop,
    y: -15,
    duration: 6000,
    delay: 400,
  },
  mobreddit:{
    ...loop,
    y: -15,
    duration: 6000,
    delay: 400,
  },
  mobgit: {
    ...loop,
    x: -15,
    duration: 6000,
    delay: 400,
  },
  moblinkedin: {
    ...loop,
    x: 15,
    duration: 6000,
    delay: 400,
  }
};

export class BannerImage extends Component  {
  constructor(props) {
    super(props);
  
    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);
    this.updateWindowOrientat = this.updateWindowOrientat.bind(this);

    this.state = {
      apearGit:false,
      apearlinked:false,
      apearface:false,
      apearinsta:false,
      pause: false,
      pauseface: false,
      pauselinked: false,
      pausegit:false,
      pausereddit:false,
      apearreddit:false,
      titlereddit:false,
      height: 512
    }
  }
  componentDidMount() {
    this.updateWindowDimensions();
    window.addEventListener("resize", this.updateWindowDimensions.bind(this));
    this.updateWindowOrientat();
    window.addEventListener("orientationchange", this.updateWindowOrientat.bind(this));
    
    this.intervalGit = setInterval(() => {this.setState({
      apearGit: true
    }); }, 9000);
    this.intervallinked = setInterval(() => {this.setState({
      apearlinked: true
    }); }, 8000);
    this.intervalface = setInterval(() => {this.setState({
      apearface: true
    }); }, 10000);
    this.intervalinsta = setInterval(() => {this.setState({
      apearinsta: true
    }); }, 11000);
    this.intervaltitleinsta = setInterval(() => {this.setState({
      titleinsta: true
    }); }, 12000);
    this.intervaltitlereddit = setInterval(() => {this.setState({
      titlereddit: true
    }); }, 12000);
    this.intervalreddit = setInterval(() => {this.setState({
      apearreddit: true
    }); }, 11000);
    this.intervalPlayer = setInterval(() => {this.setState({
      player: true
    }); }, 10000);
    this.intervalHelpPlayer = setInterval(() => {this.setState({
      helpplayer: true
    }); }, 12000);
    this.intervalplay = setInterval( this.play, 500);
    setInterval (this.remove);
    setInterval (this.removetitle, 6000);
    setInterval (this.removertitle, 17000);
  }
  remove = () => { 
    clearInterval(this.intervalID)
  }
  removetitle = () => { 
    clearInterval(this.intervalTITLE)
  }
  removertitle = () => { 
    clearInterval(this.intervalRTITLE)
  }
  removeplayer = () => {
    clearInterval(this.intervalPlayer)
  }


  componentWillUnmount() {
    window.removeEventListener("resize", this.updateWindowDimensions.bind(this));
    window.removeEventListener("resize", this.updateWindowOrientat.bind(this));
}

updateWindowDimensions() {
    this.setState({ width: window.innerWidth, height: window.innerHeight });
}
updateWindowOrientat() {
  this.setState({ orientation: window.orientation });
}

  onMouseOut = () => {
    this.setState(state => ({
      pause: !state.pause
    }))
    }
    onMouseOver = () => this.setState({pause : "true" });

    onMouseOutgit = () => {
      this.setState(state => ({
        pausegit: !state.pausegit
      }))
      }
      onMouseOvergit = () => this.setState({pausegit : "true" });
    
    onMouseOutface = () => {
      this.setState(state => ({
        pauseface: !state.pauseface
      }))
      }
      onMouseOverface = () => this.setState({pauseface : "true" });
      onMouseOutlinked = () => {
        this.setState(state => ({
          pauselinked: !state.pauselinked
        }))
        }
        onMouseOverlinked = () => this.setState({pauselinked : "true" });

        
        onMouseOutreddit = () => {
          this.setState(state => ({
            pausereddit: !state.pausereddit
          }))
          }
          onMouseOverreddit = () => this.setState({pausereddit : "true" });

  render (){
   
    console.log("width:", this.state.width)
    console.log("orientation", this.state.orientation)
  return (
  <div className= "dark-wrapper-design"> 
    <div className="container">
      <svg width="100vw" height="100vh" viewBox={(this.state.orientation !== 0 && this.state.orientation !== undefined)?"0 -100 582 700":(this.state.width<600  && this.state.orientation === 0 && this.state.orientation !== undefined)?"-80 -100 682 700":this.state.height<270?"0 -100 582 700" :this.state.height<325?"0 -70 582 700" : this.state.height<500?"0 -40 582 700":"0 0 582 500"}>
        <defs>
          <path
            d="M 151 55 C 129.6667 62.6667 116 74.3333 110 90 C 104 105.6667 103 118.5 133 111 L 225.5 96 C 219.8333 79 209.6667 67 195 60 C 180.3333 53 165.6667 51.3333 151 55 L 137 0 L 379 8 L 382 150 L 227 187.5 L 61.5 191 C 4.5 175 -12.6667 147.8333 10 109.5 C 32.6667 71.1667 75 34.6667 137 0 L 151 55 Z"
            id="mask"
          />
        </defs>
        <g stroke="none" strokeWidth="1" fill="none" fillRule="evenodd" transform="translate(0, 30)">  
        <g id="Group-13" transform="translate(0.000000, 41.000000)">
  
          {this.state.apearinsta ?  <TweenOne  paused={this.state.pause} onMouseLeave={this.onMouseOut} onMouseOver={this.onMouseOver} component="g" animation= {(this.state.width<600 && this.state.orientation === 0 &&  this.state.orientation !== undefined)? animate.mobinsta :( this.state.orientation !== 0 && this.state.orientation !== undefined)? animate.mobinsta: animate.insta}>
          <filter id="my-secondinsta">
            <feComponentTransfer>
              <feFuncR type="linear" slope="4" />
              <feFuncG type="linear" slope="4" />
              <feFuncB type="linear" slope="4" />
            </feComponentTransfer>
          </filter>
          <filter id="my-insta">
            <feComponentTransfer>
              <feFuncR type="linear" slope="4" />
              <feFuncG type="linear" slope="4" />
              <feFuncB type="linear" slope="4" />
            </feComponentTransfer>
            <feColorMatrix type="matrix" values="1 0 0 0 0 
                                                 0 1 0 0 0 
                                                 0 0 1 0 0 
                                                 0 0 0 100 0"
                                                 result="boostedInput"/>
                                    
            <feGaussianBlur stdDeviation="5"/>
            <feComposite operator="out" in2="boostedInput"/>
          </filter>
          <g transform={(this.state.width<600 && this.state.orientation === 0 && this.state.orientation !== undefined)? "translate(0, 400)":(this.state.orientation !== 0 && this.state.orientation !== undefined)?"translate(-150, 180)":"translate(0, 150)"}>

          <ExternalLink   href="https://www.instagram.com/hossikz/">
          {(this.state.width<600 && this.state.orientation === 0 && this.state.orientation !== undefined)?
          <image
          className="insta"
          filter={this.state.pause? "url(#my-insta)":"url(#my-secondinsta)"}
          alt="globe"
          id="id2"
          xlinkHref="https://raw.githubusercontent.com/Hossik/Profilio/master/public/instegram.png"
          x="6"
          y="2"
          width="226px"
          height="226px"
          />
          :
          (this.state.orientation !== 0 && this.state.orientation !== undefined)?
          <image
          className="insta"
          filter={this.state.pause? "url(#my-insta)":"url(#my-secondinsta)"}
          alt="globe"
          id="id2"
          xlinkHref="https://raw.githubusercontent.com/Hossik/Profilio/master/public/instegram.png"
          x="6"
          y="2"
          width="226px"
          height="226px"
          />
          :
          <image
          className="insta"
          filter={this.state.pause? "url(#my-insta)":"url(#my-secondinsta)"}
          alt="globe"
          id="id2"
          xlinkHref="https://raw.githubusercontent.com/Hossik/Profilio/master/public/instegram.png"
          x="6"
          y="2"
          width="126px"
          height="126px"
          />}
            </ExternalLink>
            {this.state.titleinsta ?
            (this.state.width<600 && this.state.orientation === 0 &&  this.state.orientation !== undefined)? <g></g>
            : 
            ( this.state.orientation !== 0 && this.state.orientation !== undefined)
            ?
            <g></g>
            :
            <g> 
            <defs>
            <marker  id="pointer" markerWidth="30" markerHeight="8" refX="5.5" refY="7.1" orient="-35" markerUnits="userSpaceOnUse">
              <polyline fill= "white"
            stroke= "white"
            vectorEffect= "non-scaling-stroke"
            strokeWidth= "2"  points="1 1, 9 5, 1 7" />
                </marker>
              </defs>
              <path transform="translate (-50, 55)" strokeDasharray= "5, 5"  fill= "none"
            stroke= "white"
            vectorEffect= "non-scaling-stroke"
            strokeWidth= "2" d="M 63 137 c 87.6 -46.9 120 -85 138 -63 C 225 107 164 131 111 108.9 C 71 85.2 92.2 30.7 109 34" 
                markerEnd="url(#pointer)"/>
               
                <path transform="translate (0, 185)"  fill= "red"
            stroke= "red"
            vectorEffect= "non-scaling-stroke"
            strokeWidth= "2" d="M 0.084 22.404 A 20.811 20.811 0 0 0 0 22.596 A 1.102 1.102 0 0 0 0.217 22.574 Q 0.868 22.444 1.54 21.532 Q 2.104 20.767 2.79 19.366 A 35.989 35.989 0 0 0 3.346 18.172 A 119.253 119.253 0 0 0 3.567 17.672 Q 4.527 15.488 5.88 12.194 A 409.313 409.313 0 0 1 6.896 9.744 Q 7.44 8.444 8.054 6.996 A 821.139 821.139 0 0 1 9.632 3.304 A 7.553 7.553 0 0 1 9.64 3.385 Q 9.651 3.508 9.659 3.646 A 13.205 13.205 0 0 1 9.674 3.948 A 12.811 12.811 0 0 1 9.675 3.985 Q 9.688 4.34 9.688 4.872 Q 9.688 5.572 9.661 6.442 A 81.591 81.591 0 0 1 9.618 7.546 Q 9.548 9.1 9.464 10.78 A 617.262 617.262 0 0 0 9.454 10.99 A 566.161 566.161 0 0 0 9.31 14.042 Q 9.266 15.031 9.25 15.85 A 46.202 46.202 0 0 0 9.24 16.772 Q 9.24 18.396 9.478 19.292 Q 9.629 19.859 9.987 20.067 A 0.948 0.948 0 0 0 10.472 20.188 A 1.127 1.127 0 0 0 10.533 20.187 Q 10.592 20.183 10.631 20.173 A 0.188 0.188 0 0 0 10.668 20.16 A 0.44 0.44 0 0 1 10.685 20.152 Q 10.73 20.132 10.819 20.101 A 5.575 5.575 0 0 1 10.892 20.076 A 24.176 24.176 0 0 1 10.926 19.972 Q 11.259 18.962 11.844 17.472 Q 12.46 15.904 13.258 14.07 Q 14.056 12.236 14.938 10.402 Q 15.82 8.568 16.702 6.986 Q 17.226 6.047 17.725 5.3 A 15.219 15.219 0 0 1 18.396 4.368 Q 17.304 8.484 16.45 12.306 A 37.794 37.794 0 0 0 15.866 15.557 A 29.591 29.591 0 0 0 15.596 19.46 A 15.267 15.267 0 0 0 15.596 19.561 Q 15.601 20.286 15.675 20.82 A 4.753 4.753 0 0 0 15.764 21.294 A 2.026 2.026 0 0 0 15.889 21.659 A 1.401 1.401 0 0 0 16.436 22.288 A 1.341 1.341 0 0 0 16.437 22.289 Q 16.941 22.596 17.892 22.596 Q 17.78 22.12 17.682 21.854 Q 17.584 21.588 17.528 21.252 Q 17.472 20.916 17.472 20.3 Q 17.472 19.45 17.562 18.347 A 43.213 43.213 0 0 1 17.696 16.982 A 69.42 69.42 0 0 1 17.886 15.464 A 84.974 84.974 0 0 1 18.298 12.768 Q 18.676 10.528 19.124 8.358 A 104.131 104.131 0 0 1 19.153 8.219 Q 19.586 6.133 20.02 4.48 A 41.841 41.841 0 0 1 20.19 3.835 Q 20.331 3.316 20.47 2.865 A 20.986 20.986 0 0 1 20.734 2.058 Q 20.997 1.313 21.172 0.843 A 23.955 23.955 0 0 1 21.28 0.56 A 3.773 3.773 0 0 0 21.104 0.496 Q 20.706 0.364 20.384 0.364 A 1.275 1.275 0 0 0 20.275 0.369 A 0.935 0.935 0 0 0 19.656 0.658 A 3.368 3.368 0 0 0 19.63 0.685 Q 19.447 0.882 19.218 1.188 A 12.577 12.577 0 0 0 18.984 1.512 Q 18.711 1.932 18.202 2.73 A 535.295 535.295 0 0 0 17.836 3.304 Q 17.346 4.074 16.779 5.019 A 116.033 116.033 0 0 0 16.072 6.216 A 73.826 73.826 0 0 0 15.458 7.289 A 86.502 86.502 0 0 0 14.098 9.814 Q 13.104 11.732 12.278 13.664 A 30.411 30.411 0 0 0 11.625 15.319 A 23.425 23.425 0 0 0 11.004 17.304 Q 11.06 15.736 11.2 13.832 Q 11.34 11.928 11.466 9.968 A 64.784 64.784 0 0 0 11.543 8.53 A 53.883 53.883 0 0 0 11.592 6.272 A 35.788 35.788 0 0 0 11.583 5.465 Q 11.555 4.2 11.433 3.284 A 9.008 9.008 0 0 0 11.27 2.38 A 7.378 7.378 0 0 0 11.228 2.212 Q 10.908 1.003 10.318 0.518 A 2.195 2.195 0 0 0 9.529 0.103 A 2.728 2.728 0 0 0 8.764 0 A 4.698 4.698 0 0 0 8.006 0.062 A 5.567 5.567 0 0 0 6.874 0.378 Q 5.908 0.756 5.11 1.428 A 6.775 6.775 0 0 0 5.008 1.515 A 5.988 5.988 0 0 0 3.808 2.94 Q 3.304 3.78 3.304 4.704 A 2.676 2.676 0 0 0 3.305 4.776 Q 3.316 5.195 3.458 5.698 A 2.833 2.833 0 0 0 3.571 6.023 A 2.264 2.264 0 0 0 3.934 6.622 A 1.034 1.034 0 0 0 4.38 6.934 A 1.21 1.21 0 0 0 4.788 7 Q 4.76 6.804 4.746 6.608 Q 4.732 6.412 4.732 6.132 A 7.045 7.045 0 0 1 4.75 5.629 A 7.746 7.746 0 0 1 5.11 3.808 Q 5.488 2.632 6.258 1.834 A 2.536 2.536 0 0 1 7.195 1.21 A 2.836 2.836 0 0 1 8.204 1.036 Q 8.604 1.036 8.816 1.133 A 0.457 0.457 0 0 1 8.974 1.246 A 0.72 0.72 0 0 1 9.119 1.505 A 0.863 0.863 0 0 1 9.156 1.764 A 1.98 1.98 0 0 1 9.148 1.938 A 2.241 2.241 0 0 1 9.058 2.394 Q 8.96 2.716 8.876 2.912 Q 7.168 6.72 5.642 10.122 Q 4.116 13.524 2.898 16.198 A 6213.825 6213.825 0 0 0 2.646 16.751 Q 1.6 19.048 0.924 20.538 A 690.182 690.182 0 0 0 0.829 20.747 Q 0.292 21.932 0.084 22.404 Z M 145.852 15.624 L 146.188 16.016 A 14.362 14.362 0 0 1 145.253 17.991 A 16.169 16.169 0 0 1 145.04 18.354 A 7.772 7.772 0 0 1 144.125 19.591 A 6.525 6.525 0 0 1 143.402 20.272 A 3.451 3.451 0 0 1 142.358 20.861 A 3.095 3.095 0 0 1 141.344 21.028 A 2.52 2.52 0 0 1 140.809 20.975 Q 140.475 20.902 140.229 20.73 A 1.356 1.356 0 0 1 139.916 20.426 A 2.26 2.26 0 0 1 139.484 19.297 A 2.914 2.914 0 0 1 139.468 18.984 Q 139.468 18.284 139.678 17.584 Q 139.888 16.884 140.098 16.212 Q 140.308 15.54 140.308 15.008 A 1.951 1.951 0 0 0 140.29 14.734 Q 140.246 14.422 140.09 14.257 A 0.551 0.551 0 0 0 140.056 14.224 A 0.918 0.918 0 0 0 139.807 14.063 A 0.784 0.784 0 0 0 139.496 14 Q 138.896 14 138.204 14.801 A 5.771 5.771 0 0 0 137.97 15.092 A 34.659 34.659 0 0 0 137.406 15.862 Q 136.733 16.805 135.828 18.172 A 9.524 9.524 0 0 0 135.172 19.316 A 8.596 8.596 0 0 0 135.072 19.53 Q 134.764 20.216 134.484 20.776 A 2.322 2.322 0 0 1 134.309 20.769 Q 134.224 20.762 134.128 20.75 A 5.295 5.295 0 0 1 133.924 20.72 A 2.51 2.51 0 0 1 133.568 20.635 A 2.015 2.015 0 0 1 133.322 20.538 A 0.753 0.753 0 0 1 133.209 20.473 Q 133.056 20.365 133.056 20.216 A 0.629 0.629 0 0 1 133.068 20.109 Q 133.101 19.924 133.229 19.546 A 14.878 14.878 0 0 1 133.322 19.278 A 249.971 249.971 0 0 0 133.533 18.686 Q 133.719 18.163 133.938 17.542 Q 134.288 16.548 134.554 15.526 A 10.078 10.078 0 0 0 134.713 14.815 Q 134.82 14.237 134.82 13.776 A 2.412 2.412 0 0 0 134.802 13.47 Q 134.782 13.313 134.739 13.183 A 1.128 1.128 0 0 0 134.666 13.006 A 0.52 0.52 0 0 0 134.291 12.728 A 0.85 0.85 0 0 0 134.12 12.712 A 1.327 1.327 0 0 0 133.672 12.798 Q 133.209 12.964 132.636 13.454 Q 131.768 14.196 130.844 15.4 Q 129.92 16.604 129.094 18.046 Q 128.268 19.488 127.764 20.916 A 1.93 1.93 0 0 1 127.559 20.904 Q 127.376 20.885 127.148 20.832 A 3.116 3.116 0 0 1 126.828 20.741 Q 126.67 20.686 126.536 20.617 A 1.92 1.92 0 0 1 126.518 20.608 A 1.123 1.123 0 0 1 126.416 20.548 Q 126.317 20.482 126.278 20.416 A 0.17 0.17 0 0 1 126.252 20.328 A 0.493 0.493 0 0 1 126.262 20.242 Q 126.307 20.005 126.546 19.334 A 56.692 56.692 0 0 0 126.778 18.667 Q 126.982 18.072 127.218 17.346 Q 127.596 16.184 127.89 14.98 A 11.811 11.811 0 0 0 128.08 14.048 Q 128.184 13.401 128.184 12.852 Q 128.351 12.657 128.712 12.462 A 3.633 3.633 0 0 1 128.716 12.46 A 1.593 1.593 0 0 1 129.338 12.27 A 1.544 1.544 0 0 1 129.472 12.264 A 1.239 1.239 0 0 1 129.684 12.281 Q 129.796 12.301 129.885 12.343 A 0.531 0.531 0 0 1 130.046 12.46 A 0.657 0.657 0 0 1 130.202 12.758 Q 130.226 12.858 130.228 12.976 A 1.223 1.223 0 0 1 130.228 12.992 Q 130.228 13.344 130.032 14.178 A 18.855 18.855 0 0 1 130.018 14.238 Q 129.808 15.12 129.5 16.184 A 23.098 23.098 0 0 1 130.343 14.932 A 27.212 27.212 0 0 1 130.774 14.35 Q 131.488 13.412 132.272 12.628 Q 133.056 11.844 133.854 11.354 A 3.694 3.694 0 0 1 134.495 11.037 Q 134.937 10.872 135.366 10.864 A 2.338 2.338 0 0 1 135.408 10.864 A 1.849 1.849 0 0 1 135.853 10.914 A 1.09 1.09 0 0 1 136.598 11.494 A 2.847 2.847 0 0 1 136.858 12.278 A 3.936 3.936 0 0 1 136.92 12.992 A 7.105 7.105 0 0 1 136.847 13.988 A 8.475 8.475 0 0 1 136.766 14.462 A 17.268 17.268 0 0 1 136.557 15.381 A 14.106 14.106 0 0 1 136.416 15.89 Q 136.224 16.534 136.059 16.923 A 4.686 4.686 0 0 1 136.052 16.94 Q 136.64 15.876 137.354 14.882 A 8.246 8.246 0 0 1 138.173 13.904 A 6.546 6.546 0 0 1 138.908 13.258 Q 139.748 12.628 140.7 12.628 Q 141.245 12.628 141.588 12.825 A 1.044 1.044 0 0 1 141.946 13.16 A 2.116 2.116 0 0 1 142.271 14.047 A 2.735 2.735 0 0 1 142.296 14.42 Q 142.296 15.125 142.06 15.962 A 7.969 7.969 0 0 1 142.044 16.016 A 51.851 51.851 0 0 1 141.543 17.645 A 47.686 47.686 0 0 1 141.526 17.696 Q 141.335 18.281 141.281 18.749 A 3.055 3.055 0 0 0 141.26 19.096 Q 141.26 19.46 141.442 19.754 A 0.577 0.577 0 0 0 141.762 20 Q 141.866 20.034 141.995 20.044 A 1.387 1.387 0 0 0 142.1 20.048 A 1.771 1.771 0 0 0 143.053 19.762 Q 143.302 19.607 143.538 19.366 A 3.415 3.415 0 0 0 143.57 19.334 A 7.927 7.927 0 0 0 144.311 18.433 A 10.332 10.332 0 0 0 144.844 17.598 Q 145.432 16.576 145.852 15.624 Z M 105.784 15.624 L 106.148 15.904 Q 105.728 17.164 104.804 18.2 A 12.403 12.403 0 0 1 103.155 19.749 A 11.259 11.259 0 0 1 102.83 19.992 A 17.05 17.05 0 0 1 102.007 20.551 Q 101.59 20.815 101.207 21.018 A 9.026 9.026 0 0 1 100.912 21.168 A 36.247 36.247 0 0 1 99.899 23.387 A 29.673 29.673 0 0 1 99.26 24.598 Q 98.57 25.833 97.836 26.671 A 7.638 7.638 0 0 1 97.454 27.076 A 3.744 3.744 0 0 1 96.771 27.616 A 2.51 2.51 0 0 1 95.452 28 Q 94.836 28 94.332 27.622 Q 93.889 27.29 93.835 26.579 A 2.7 2.7 0 0 1 93.828 26.376 Q 93.828 25.536 94.346 24.822 A 5.722 5.722 0 0 1 95.152 23.933 A 7.087 7.087 0 0 1 95.676 23.506 A 13.103 13.103 0 0 1 97.156 22.56 A 14.727 14.727 0 0 1 97.454 22.4 Q 98.42 21.896 99.288 21.448 A 25.91 25.91 0 0 0 99.762 20.163 A 30.876 30.876 0 0 0 100.03 19.334 Q 100.38 18.2 100.716 16.828 Q 99.652 18.368 98.49 19.39 Q 97.572 20.197 96.646 20.367 A 2.736 2.736 0 0 1 96.152 20.412 A 2.138 2.138 0 0 1 95.461 20.306 A 1.736 1.736 0 0 1 94.598 19.656 Q 94.052 18.9 94.052 17.696 Q 94.052 16.24 94.766 14.924 Q 95.48 13.608 96.628 12.6 A 9.928 9.928 0 0 1 98.429 11.332 A 8.91 8.91 0 0 1 99.064 11.018 A 7.322 7.322 0 0 1 100.149 10.628 Q 100.773 10.461 101.353 10.446 A 4.425 4.425 0 0 1 101.472 10.444 Q 102.162 10.444 102.518 10.636 A 0.883 0.883 0 0 1 102.634 10.71 A 1.057 1.057 0 0 1 102.826 10.895 A 0.701 0.701 0 0 1 102.984 11.34 A 0.728 0.728 0 0 1 102.968 11.499 Q 102.936 11.64 102.844 11.732 A 3.113 3.113 0 0 1 102.787 11.788 Q 102.708 11.863 102.664 11.891 A 0.182 0.182 0 0 1 102.648 11.9 Q 102.508 11.676 102.228 11.578 Q 101.948 11.48 101.528 11.48 A 3.789 3.789 0 0 0 99.8 11.905 A 4.706 4.706 0 0 0 99.414 12.124 A 7.009 7.009 0 0 0 97.657 13.713 A 7.887 7.887 0 0 0 97.608 13.776 Q 96.824 14.784 96.362 15.862 A 6.507 6.507 0 0 0 96.063 16.708 Q 95.938 17.164 95.909 17.583 A 3.633 3.633 0 0 0 95.9 17.836 A 2.722 2.722 0 0 0 95.925 18.216 Q 95.952 18.409 96.009 18.566 A 1.112 1.112 0 0 0 96.166 18.858 A 0.872 0.872 0 0 0 96.483 19.123 Q 96.66 19.208 96.88 19.208 Q 97.572 19.208 98.498 18.425 A 7.602 7.602 0 0 0 98.826 18.13 A 14.8 14.8 0 0 0 100.071 16.782 A 19.399 19.399 0 0 0 101.024 15.512 Q 101.102 15.146 101.169 14.853 A 41.783 41.783 0 0 1 101.178 14.812 Q 101.248 14.504 101.36 14.028 Q 101.421 13.743 101.607 13.392 A 4.676 4.676 0 0 1 101.766 13.118 A 1.055 1.055 0 0 1 102.539 12.618 A 1.633 1.633 0 0 1 102.788 12.6 Q 102.928 12.6 103.068 12.614 A 1.203 1.203 0 0 1 103.213 12.638 Q 103.291 12.656 103.376 12.684 Q 103.376 13.132 103.11 14.322 Q 102.906 15.233 102.571 16.374 A 50.896 50.896 0 0 1 102.354 17.094 Q 101.864 18.676 101.22 20.356 A 9.424 9.424 0 0 0 102.582 19.542 A 10.896 10.896 0 0 0 103.026 19.208 Q 103.908 18.508 104.636 17.598 Q 105.364 16.688 105.784 15.624 Z M 38.229 22.033 A 3.002 3.002 0 0 0 38.108 22.624 Q 39.116 22.428 40.138 22.33 Q 41.16 22.232 42.21 22.204 Q 43.26 22.176 44.338 22.162 Q 45.416 22.148 46.536 22.148 Q 47.124 22.148 48.006 21.952 Q 48.888 21.756 49.7 20.944 Q 49.001 20.929 48.207 20.863 A 34.402 34.402 0 0 1 46.732 20.706 A 51.478 51.478 0 0 0 45.521 20.566 A 42.234 42.234 0 0 0 43.624 20.412 Q 44.14 20.062 44.559 19.409 A 6.034 6.034 0 0 0 44.968 18.648 Q 45.301 17.917 45.594 16.988 A 23.438 23.438 0 0 0 45.976 15.624 Q 46.256 14.504 46.578 12.95 Q 46.9 11.396 47.236 9.674 A 1006.943 1006.943 0 0 0 47.32 9.245 A 911.286 911.286 0 0 0 47.88 6.342 A 362.705 362.705 0 0 0 47.965 5.896 Q 48.22 4.557 48.412 3.486 A 501.457 501.457 0 0 1 48.42 3.441 Q 48.638 2.229 48.748 1.652 Q 49.392 1.624 50.162 1.624 L 51.8 1.624 Q 52.133 1.624 52.529 1.57 A 8.495 8.495 0 0 0 53.102 1.47 Q 53.548 1.377 53.969 1.097 A 3.587 3.587 0 0 0 54.516 0.644 Q 53.872 0.532 52.668 0.406 Q 51.464 0.28 50.022 0.168 Q 48.58 0.056 47.18 0.056 A 25.657 25.657 0 0 0 46.288 0.071 Q 44.897 0.119 43.937 0.326 A 5.621 5.621 0 0 0 43.008 0.602 A 4.287 4.287 0 0 0 42.795 0.695 Q 42.428 0.868 42.16 1.086 A 1.855 1.855 0 0 0 41.468 2.212 Q 42.504 2.016 43.386 1.904 A 23.537 23.537 0 0 1 44.096 1.825 A 29.101 29.101 0 0 1 45.29 1.736 Q 45.929 1.701 46.737 1.677 A 98.166 98.166 0 0 1 47.768 1.652 A 14.046 14.046 0 0 0 47.684 1.902 Q 47.437 2.667 47.138 3.85 A 92.661 92.661 0 0 0 47.127 3.894 Q 46.954 4.579 46.772 5.348 A 150.982 150.982 0 0 0 46.396 6.972 Q 46.004 8.708 45.556 10.598 Q 45.108 12.488 44.646 14.308 A 66.456 66.456 0 0 1 44.294 15.64 A 55.308 55.308 0 0 1 43.68 17.71 Q 43.176 19.292 42.672 20.384 A 18.163 18.163 0 0 0 41.779 20.405 A 14.618 14.618 0 0 0 40.488 20.524 A 5.336 5.336 0 0 0 40.302 20.553 Q 39.421 20.707 38.85 21.126 Q 38.417 21.444 38.229 22.033 Z M 32.424 15.624 L 32.788 15.904 A 6.709 6.709 0 0 1 31.917 17.719 A 6.164 6.164 0 0 1 31.514 18.242 Q 30.66 19.236 29.596 19.95 A 16.026 16.026 0 0 1 28.212 20.785 A 13.459 13.459 0 0 1 27.496 21.14 Q 26.768 22.932 25.914 24.5 A 14.887 14.887 0 0 1 25.206 25.675 Q 24.679 26.461 24.122 27.034 A 4.106 4.106 0 0 1 23.532 27.544 Q 22.878 28 22.204 28 A 2.194 2.194 0 0 1 21.451 27.874 A 2 2 0 0 1 20.972 27.622 A 1.225 1.225 0 0 1 20.452 26.725 A 1.796 1.796 0 0 1 20.44 26.516 A 3.054 3.054 0 0 1 20.604 25.503 A 2.772 2.772 0 0 1 20.888 24.92 A 4.816 4.816 0 0 1 21.606 24.052 A 6.033 6.033 0 0 1 22.092 23.632 Q 22.848 23.044 23.828 22.512 A 67.617 67.617 0 0 1 25.607 21.581 A 74.458 74.458 0 0 1 25.872 21.448 Q 26.264 20.412 26.67 19.138 A 34.347 34.347 0 0 0 27.113 17.621 A 44.176 44.176 0 0 0 27.44 16.324 A 15.933 15.933 0 0 1 26.392 17.834 A 12.636 12.636 0 0 1 25.522 18.83 Q 24.68 19.695 23.753 19.847 A 2.467 2.467 0 0 1 23.352 19.88 A 2.464 2.464 0 0 1 22.399 19.685 A 2.865 2.865 0 0 1 22.302 19.642 A 2.026 2.026 0 0 1 21.48 18.947 A 2.421 2.421 0 0 1 21.448 18.9 A 1.901 1.901 0 0 1 21.186 18.286 Q 21.126 18.037 21.115 17.748 A 3.491 3.491 0 0 1 21.112 17.612 A 5.664 5.664 0 0 1 21.159 16.906 Q 21.204 16.552 21.291 16.158 A 10.84 10.84 0 0 1 21.378 15.792 Q 21.644 14.756 22.036 13.776 A 12.535 12.535 0 0 1 22.334 13.088 Q 22.499 12.738 22.669 12.444 A 6.379 6.379 0 0 1 22.848 12.152 A 3.543 3.543 0 0 1 23.02 11.909 Q 23.31 11.538 23.54 11.51 A 0.306 0.306 0 0 1 23.576 11.508 Q 23.688 11.508 23.982 11.592 Q 24.276 11.676 24.542 11.83 A 1.002 1.002 0 0 1 24.651 11.902 Q 24.765 11.99 24.796 12.082 A 0.217 0.217 0 0 1 24.808 12.152 Q 24.556 12.516 24.248 13.188 Q 23.94 13.86 23.646 14.686 Q 23.352 15.512 23.156 16.296 A 7.966 7.966 0 0 0 23.037 16.85 Q 22.99 17.117 22.972 17.352 A 3.702 3.702 0 0 0 22.96 17.64 A 1.847 1.847 0 0 0 22.989 17.977 Q 23.024 18.168 23.103 18.321 A 1.01 1.01 0 0 0 23.184 18.452 Q 23.408 18.76 23.968 18.76 Q 24.35 18.76 24.797 18.493 A 3.439 3.439 0 0 0 25.158 18.242 Q 25.795 17.74 26.433 16.963 A 11.688 11.688 0 0 0 26.474 16.912 Q 27.132 16.1 27.692 15.176 Q 27.776 14.868 27.846 14.546 Q 27.916 14.224 27.972 13.888 Q 28.033 13.603 28.219 13.252 A 4.676 4.676 0 0 1 28.378 12.978 A 1.055 1.055 0 0 1 29.151 12.478 A 1.633 1.633 0 0 1 29.4 12.46 Q 29.54 12.46 29.68 12.474 A 1.203 1.203 0 0 1 29.825 12.498 Q 29.903 12.516 29.988 12.544 Q 29.988 12.912 29.809 13.798 A 27.141 27.141 0 0 1 29.722 14.21 Q 29.456 15.428 28.966 17.052 A 42.235 42.235 0 0 1 28.05 19.747 A 47.543 47.543 0 0 1 27.804 20.384 A 7.147 7.147 0 0 0 29.267 19.609 A 9.684 9.684 0 0 0 30.38 18.718 A 7.435 7.435 0 0 0 31.647 17.167 A 10.119 10.119 0 0 0 32.424 15.624 Z M 94.948 15.624 L 95.228 15.904 A 10.44 10.44 0 0 1 94.261 17.811 A 9.113 9.113 0 0 1 93.716 18.564 Q 92.792 19.712 91.742 20.356 Q 90.692 21 89.684 21 A 2.754 2.754 0 0 1 89.103 20.943 Q 88.499 20.812 88.158 20.384 Q 87.668 19.768 87.668 19.04 A 2.409 2.409 0 0 1 87.675 18.867 Q 87.682 18.77 87.696 18.662 A 52.798 52.798 0 0 0 87.745 18.284 A 58.005 58.005 0 0 0 87.752 18.228 Q 86.963 19.293 86.264 20.008 A 8.659 8.659 0 0 1 85.554 20.664 A 4.112 4.112 0 0 1 84.803 21.159 Q 84.191 21.466 83.564 21.476 A 2.639 2.639 0 0 1 83.524 21.476 Q 82.656 21.476 82.054 20.902 Q 81.554 20.425 81.469 19.533 A 4.036 4.036 0 0 1 81.452 19.152 A 5.222 5.222 0 0 1 81.578 18.038 Q 81.69 17.527 81.9 16.982 A 10.583 10.583 0 0 1 82.756 15.264 A 12.425 12.425 0 0 1 83.132 14.686 Q 83.916 13.552 84.91 12.614 A 9.394 9.394 0 0 1 86.33 11.503 A 8.173 8.173 0 0 1 87.01 11.116 A 5.341 5.341 0 0 1 88.181 10.679 A 4.405 4.405 0 0 1 89.208 10.556 A 3.423 3.423 0 0 1 90.061 10.657 A 2.577 2.577 0 0 1 91.028 11.13 Q 91.756 11.704 91.756 12.656 Q 91.756 13.356 91.378 13.608 A 1.395 1.395 0 0 1 90.956 13.793 Q 90.773 13.841 90.558 13.855 A 2.77 2.77 0 0 1 90.384 13.86 A 5.131 5.131 0 0 0 90.443 13.595 A 6.459 6.459 0 0 0 90.482 13.37 Q 90.524 13.104 90.524 12.88 A 2.253 2.253 0 0 0 90.459 12.325 A 1.768 1.768 0 0 0 90.216 11.774 Q 89.908 11.312 89.152 11.312 Q 88.389 11.312 87.599 11.83 A 4.318 4.318 0 0 0 87.556 11.858 A 6.633 6.633 0 0 0 86.672 12.576 A 8.859 8.859 0 0 0 85.988 13.314 Q 85.232 14.224 84.644 15.288 A 12.689 12.689 0 0 0 83.968 16.705 A 10.78 10.78 0 0 0 83.72 17.388 A 7.917 7.917 0 0 0 83.502 18.193 Q 83.384 18.754 83.384 19.236 A 2.335 2.335 0 0 0 83.413 19.621 Q 83.532 20.328 84.14 20.328 Q 84.784 20.328 85.54 19.726 Q 86.296 19.124 87.094 18.186 Q 87.892 17.248 88.62 16.24 Q 89.348 15.232 89.908 14.392 A 2.726 2.726 0 0 1 89.944 14.339 Q 90.011 14.244 90.038 14.228 A 0.02 0.02 0 0 1 90.048 14.224 A 1.958 1.958 0 0 1 90.163 14.247 Q 90.299 14.278 90.482 14.336 A 1.81 1.81 0 0 1 90.757 14.447 A 1.452 1.452 0 0 1 90.944 14.56 Q 91.14 14.7 91.14 14.924 A 0.703 0.703 0 0 1 91.118 15.09 Q 91.077 15.256 90.962 15.475 A 3.463 3.463 0 0 1 90.888 15.61 A 40.853 40.853 0 0 0 90.639 16.045 Q 90.492 16.307 90.328 16.604 Q 90.02 17.164 89.768 17.738 A 3.276 3.276 0 0 0 89.596 18.227 Q 89.521 18.513 89.516 18.781 A 2.03 2.03 0 0 0 89.516 18.816 Q 89.516 19.236 89.74 19.642 Q 89.936 19.998 90.347 20.042 A 1.131 1.131 0 0 0 90.468 20.048 A 1.438 1.438 0 0 0 90.959 19.951 Q 91.409 19.786 91.979 19.343 A 8.835 8.835 0 0 0 92.456 18.942 A 8.773 8.773 0 0 0 93.365 17.981 Q 94.151 17.024 94.948 15.624 Z M 127.792 15.624 L 128.072 15.904 A 10.44 10.44 0 0 1 127.105 17.811 A 9.113 9.113 0 0 1 126.56 18.564 Q 125.636 19.712 124.586 20.356 Q 123.536 21 122.528 21 A 2.754 2.754 0 0 1 121.947 20.943 Q 121.343 20.812 121.002 20.384 Q 120.512 19.768 120.512 19.04 A 2.409 2.409 0 0 1 120.519 18.867 Q 120.526 18.77 120.54 18.662 A 52.798 52.798 0 0 0 120.589 18.284 A 58.005 58.005 0 0 0 120.596 18.228 Q 119.807 19.293 119.108 20.008 A 8.659 8.659 0 0 1 118.398 20.664 A 4.112 4.112 0 0 1 117.647 21.159 Q 117.035 21.466 116.408 21.476 A 2.639 2.639 0 0 1 116.368 21.476 Q 115.5 21.476 114.898 20.902 Q 114.398 20.425 114.313 19.533 A 4.036 4.036 0 0 1 114.296 19.152 A 5.222 5.222 0 0 1 114.422 18.038 Q 114.534 17.527 114.744 16.982 A 10.583 10.583 0 0 1 115.6 15.264 A 12.425 12.425 0 0 1 115.976 14.686 Q 116.76 13.552 117.754 12.614 A 9.394 9.394 0 0 1 119.174 11.503 A 8.173 8.173 0 0 1 119.854 11.116 A 5.341 5.341 0 0 1 121.025 10.679 A 4.405 4.405 0 0 1 122.052 10.556 A 3.423 3.423 0 0 1 122.905 10.657 A 2.577 2.577 0 0 1 123.872 11.13 Q 124.6 11.704 124.6 12.656 Q 124.6 13.356 124.222 13.608 A 1.395 1.395 0 0 1 123.8 13.793 Q 123.617 13.841 123.402 13.855 A 2.77 2.77 0 0 1 123.228 13.86 A 5.131 5.131 0 0 0 123.287 13.595 A 6.459 6.459 0 0 0 123.326 13.37 Q 123.368 13.104 123.368 12.88 A 2.253 2.253 0 0 0 123.303 12.325 A 1.768 1.768 0 0 0 123.06 11.774 Q 122.752 11.312 121.996 11.312 Q 121.233 11.312 120.443 11.83 A 4.318 4.318 0 0 0 120.4 11.858 A 6.633 6.633 0 0 0 119.516 12.576 A 8.859 8.859 0 0 0 118.832 13.314 Q 118.076 14.224 117.488 15.288 A 12.689 12.689 0 0 0 116.812 16.705 A 10.78 10.78 0 0 0 116.564 17.388 A 7.917 7.917 0 0 0 116.346 18.193 Q 116.228 18.754 116.228 19.236 A 2.335 2.335 0 0 0 116.257 19.621 Q 116.376 20.328 116.984 20.328 Q 117.628 20.328 118.384 19.726 Q 119.14 19.124 119.938 18.186 Q 120.736 17.248 121.464 16.24 Q 122.192 15.232 122.752 14.392 A 2.726 2.726 0 0 1 122.788 14.339 Q 122.855 14.244 122.882 14.228 A 0.02 0.02 0 0 1 122.892 14.224 A 1.958 1.958 0 0 1 123.007 14.247 Q 123.143 14.278 123.326 14.336 A 1.81 1.81 0 0 1 123.601 14.447 A 1.452 1.452 0 0 1 123.788 14.56 Q 123.984 14.7 123.984 14.924 A 0.703 0.703 0 0 1 123.962 15.09 Q 123.921 15.256 123.806 15.475 A 3.463 3.463 0 0 1 123.732 15.61 A 40.853 40.853 0 0 0 123.483 16.045 Q 123.336 16.307 123.172 16.604 Q 122.864 17.164 122.612 17.738 A 3.276 3.276 0 0 0 122.44 18.227 Q 122.365 18.513 122.36 18.781 A 2.03 2.03 0 0 0 122.36 18.816 Q 122.36 19.236 122.584 19.642 Q 122.78 19.998 123.191 20.042 A 1.131 1.131 0 0 0 123.312 20.048 A 1.438 1.438 0 0 0 123.803 19.951 Q 124.253 19.786 124.823 19.343 A 8.835 8.835 0 0 0 125.3 18.942 A 8.773 8.773 0 0 0 126.209 17.981 Q 126.995 17.024 127.792 15.624 Z M 74.704 11.704 L 74.704 11.2 A 11.947 11.947 0 0 0 74.884 11.221 Q 75.044 11.239 75.236 11.256 Q 75.544 11.284 75.936 11.312 Q 76.524 9.8 77.196 8.386 Q 77.868 6.972 78.526 5.866 Q 79.023 5.03 79.489 4.45 A 7.071 7.071 0 0 1 79.786 4.102 A 4.005 4.005 0 0 1 80.058 3.83 Q 80.486 3.444 80.808 3.444 A 0.609 0.609 0 0 1 81.197 3.584 A 0.771 0.771 0 0 1 81.214 3.598 Q 81.396 3.752 81.396 4.06 Q 81.396 4.502 80.89 5.461 A 12.306 12.306 0 0 1 80.808 5.614 Q 80.22 6.692 79.352 8.176 A 37.7 37.7 0 0 0 78.185 10.336 A 44.359 44.359 0 0 0 77.672 11.396 L 78.19 11.396 L 78.708 11.396 Q 79.632 11.396 80.654 11.368 Q 81.676 11.34 82.712 11.228 L 82.712 11.732 A 84.701 84.701 0 0 1 81.339 11.871 Q 80.693 11.931 80.117 11.973 A 49.665 49.665 0 0 1 79.954 11.984 A 39.183 39.183 0 0 1 78.939 12.042 Q 78.474 12.061 78.057 12.066 A 22.874 22.874 0 0 1 77.784 12.068 L 77.574 12.068 L 77.364 12.068 Q 76.72 13.552 76.272 15.12 A 11.568 11.568 0 0 0 75.863 17.284 A 10.116 10.116 0 0 0 75.824 18.172 Q 75.824 19.184 76.081 19.711 A 1.334 1.334 0 0 0 76.188 19.894 A 1.15 1.15 0 0 0 76.824 20.338 Q 77.074 20.412 77.392 20.412 A 3.541 3.541 0 0 0 79.012 20.005 Q 79.519 19.747 80.018 19.327 A 6.96 6.96 0 0 0 80.248 19.124 A 9.37 9.37 0 0 0 81.525 17.66 Q 82.163 16.765 82.712 15.624 L 83.076 15.904 Q 82.404 17.472 81.382 18.732 A 9.178 9.178 0 0 1 80.112 20.026 A 7.622 7.622 0 0 1 79.128 20.72 Q 77.896 21.448 76.58 21.448 Q 75.376 21.448 74.732 20.748 Q 74.088 20.048 74.088 18.676 A 8.449 8.449 0 0 1 74.15 17.694 Q 74.258 16.781 74.55 15.638 Q 75.012 13.832 75.712 11.928 Q 75.432 11.872 75.18 11.83 Q 74.928 11.788 74.704 11.704 Z M 65.072 15.624 L 65.38 15.988 A 15.685 15.685 0 0 1 64.674 17.434 A 12.585 12.585 0 0 1 64.064 18.424 A 7.689 7.689 0 0 1 63.326 19.35 A 5.734 5.734 0 0 1 62.468 20.104 Q 61.6 20.72 60.536 20.72 A 3.031 3.031 0 0 1 59.978 20.672 Q 59.405 20.565 59.066 20.216 A 1.713 1.713 0 0 1 58.588 19.166 A 2.314 2.314 0 0 1 58.576 18.928 A 3.685 3.685 0 0 1 58.664 18.142 A 4.603 4.603 0 0 1 58.786 17.696 Q 58.996 17.052 59.192 16.366 A 5.088 5.088 0 0 0 59.367 15.463 A 4.388 4.388 0 0 0 59.388 15.036 Q 59.388 14.252 59.066 13.958 A 1.116 1.116 0 0 0 58.37 13.668 A 1.464 1.464 0 0 0 58.268 13.664 Q 57.4 13.664 56.504 14.378 A 8.893 8.893 0 0 0 55.568 15.247 A 11.9 11.9 0 0 0 54.768 16.198 Q 53.928 17.304 53.2 18.48 A 323.435 323.435 0 0 0 52.595 19.461 Q 52.227 20.06 51.912 20.58 Q 51.464 20.58 51.058 20.426 A 1.521 1.521 0 0 1 50.707 20.241 A 1.232 1.232 0 0 1 50.428 19.964 Q 50.428 19.824 50.722 19.096 A 44.766 44.766 0 0 0 50.956 18.503 Q 51.163 17.969 51.408 17.304 Q 51.8 16.24 52.108 15.12 A 9.448 9.448 0 0 0 52.319 14.178 Q 52.404 13.669 52.414 13.207 A 5.67 5.67 0 0 0 52.416 13.076 Q 52.583 12.881 52.944 12.686 A 3.633 3.633 0 0 1 52.948 12.684 A 1.593 1.593 0 0 1 53.57 12.494 A 1.544 1.544 0 0 1 53.704 12.488 A 1.134 1.134 0 0 1 53.999 12.523 Q 54.381 12.626 54.447 13.035 A 1.151 1.151 0 0 1 54.46 13.216 A 2.54 2.54 0 0 1 54.444 13.478 Q 54.398 13.917 54.216 14.679 A 21.992 21.992 0 0 1 54.208 14.714 A 22.994 22.994 0 0 1 53.838 16.065 A 27.372 27.372 0 0 1 53.564 16.912 A 25.82 25.82 0 0 1 55.026 14.914 A 28.655 28.655 0 0 1 55.258 14.63 A 11.276 11.276 0 0 1 56.48 13.36 A 9.442 9.442 0 0 1 57.26 12.74 A 4.556 4.556 0 0 1 58.122 12.251 A 3.229 3.229 0 0 1 59.388 11.984 A 2.381 2.381 0 0 1 60.012 12.061 A 1.577 1.577 0 0 1 60.97 12.768 Q 61.46 13.552 61.46 14.504 A 4.726 4.726 0 0 1 61.328 15.638 A 4.177 4.177 0 0 1 61.18 16.114 A 35.358 35.358 0 0 1 60.679 17.37 A 32.268 32.268 0 0 1 60.606 17.542 Q 60.312 18.228 60.312 18.928 A 2.313 2.313 0 0 0 60.327 19.2 Q 60.363 19.506 60.488 19.681 A 0.579 0.579 0 0 0 60.55 19.754 A 0.804 0.804 0 0 0 61.095 19.991 A 1.07 1.07 0 0 0 61.152 19.992 Q 61.746 19.992 62.34 19.518 A 3.463 3.463 0 0 0 62.552 19.334 Q 63.252 18.676 63.91 17.668 Q 64.568 16.66 65.072 15.624 Z M 105.56 17.08 L 105.308 16.604 Q 105.608 16.047 106.048 15.095 A 67.847 67.847 0 0 0 106.33 14.476 Q 106.96 13.076 107.576 11.284 A 0.916 0.916 0 0 1 107.296 10.624 A 1.09 1.09 0 0 1 107.296 10.612 A 2.422 2.422 0 0 1 107.372 9.992 A 1.799 1.799 0 0 1 107.772 9.24 A 4.746 4.746 0 0 1 107.955 9.046 Q 108.223 8.778 108.391 8.723 A 0.259 0.259 0 0 1 108.472 8.708 Q 108.78 8.708 108.822 8.974 Q 108.856 9.192 108.863 9.326 A 1.178 1.178 0 0 1 108.864 9.38 A 0.452 0.452 0 0 1 108.857 9.454 Q 108.83 9.609 108.71 9.926 A 9.945 9.945 0 0 0 108.658 10.067 Q 108.561 10.334 108.556 10.409 A 0.115 0.115 0 0 0 108.556 10.416 A 0.726 0.726 0 0 0 108.697 10.84 Q 108.804 10.992 108.99 11.13 A 91.568 91.568 0 0 0 109.394 11.428 Q 109.6 11.579 109.829 11.746 A 153.213 153.213 0 0 0 109.984 11.858 Q 110.544 12.264 110.978 12.838 Q 111.407 13.405 111.412 14.286 A 3.679 3.679 0 0 1 111.412 14.308 A 4.358 4.358 0 0 1 111.215 15.584 A 5.25 5.25 0 0 1 111.062 16.016 Q 110.712 16.884 110.362 17.668 A 5.056 5.056 0 0 0 110.163 18.184 Q 110.078 18.448 110.041 18.686 A 2.298 2.298 0 0 0 110.012 19.04 A 1.563 1.563 0 0 0 110.028 19.271 Q 110.075 19.586 110.264 19.712 A 1.002 1.002 0 0 0 110.734 19.875 A 1.26 1.26 0 0 0 110.852 19.88 A 2.393 2.393 0 0 0 111.643 19.74 A 3.357 3.357 0 0 0 112.238 19.46 A 7.127 7.127 0 0 0 113.2 18.777 A 8.539 8.539 0 0 0 113.624 18.396 Q 114.296 17.752 114.828 17.038 A 8.051 8.051 0 0 0 115.214 16.474 Q 115.462 16.074 115.612 15.708 L 115.976 15.988 A 9.93 9.93 0 0 1 115.084 17.549 A 12.066 12.066 0 0 1 114.52 18.298 A 9.05 9.05 0 0 1 113.033 19.758 A 8.105 8.105 0 0 1 112.462 20.16 A 4.721 4.721 0 0 1 111.274 20.717 A 3.965 3.965 0 0 1 110.124 20.888 A 2.908 2.908 0 0 1 109.517 20.829 Q 109.122 20.744 108.822 20.54 A 1.701 1.701 0 0 1 108.626 20.384 Q 108.08 19.88 108.08 19.068 A 4.052 4.052 0 0 1 108.218 18.041 A 5.365 5.365 0 0 1 108.472 17.304 Q 108.864 16.38 109.242 15.47 Q 109.542 14.747 109.604 14.138 A 3.039 3.039 0 0 0 109.62 13.832 A 2.454 2.454 0 0 0 109.571 13.323 Q 109.505 13.015 109.353 12.784 A 1.295 1.295 0 0 0 109.102 12.502 Q 108.584 12.068 108.052 11.704 A 50.56 50.56 0 0 1 106.969 14.278 A 44.997 44.997 0 0 1 106.708 14.84 Q 106.008 16.324 105.56 17.08 Z M 68.544 11.34 L 68.544 11.004 Q 68.544 10.145 68.785 9.7 A 1.086 1.086 0 0 1 68.894 9.534 A 1.612 1.612 0 0 1 69.094 9.324 Q 69.218 9.217 69.347 9.162 A 0.719 0.719 0 0 1 69.636 9.1 Q 69.786 9.1 69.885 9.15 A 0.332 0.332 0 0 1 69.972 9.212 A 0.413 0.413 0 0 1 70.045 9.308 A 0.325 0.325 0 0 1 70.084 9.464 A 0.712 0.712 0 0 1 70.079 9.545 Q 70.068 9.636 70.036 9.771 A 4.432 4.432 0 0 1 70 9.912 Q 69.939 10.136 69.922 10.448 A 4.653 4.653 0 0 0 69.916 10.696 A 5.431 5.431 0 0 0 70.019 11.721 A 7.464 7.464 0 0 0 70.28 12.698 Q 70.644 13.776 71.008 14.966 Q 71.372 16.156 71.372 17.444 Q 71.372 17.808 71.33 18.158 A 4.765 4.765 0 0 1 71.248 18.64 A 4.112 4.112 0 0 1 71.204 18.816 Q 72.184 18.648 73.052 17.934 A 4.651 4.651 0 0 0 73.669 17.311 Q 73.94 16.984 74.206 16.569 A 11.491 11.491 0 0 0 74.732 15.652 L 74.984 15.932 A 5.907 5.907 0 0 1 74.464 17.061 A 4.209 4.209 0 0 1 73.388 18.27 Q 72.324 19.068 71.064 19.264 Q 70.616 20.468 69.65 21.028 A 4.187 4.187 0 0 1 67.722 21.582 A 5.028 5.028 0 0 1 67.48 21.588 Q 66.491 21.588 65.811 21.264 A 2.476 2.476 0 0 1 65.394 21.014 A 3.277 3.277 0 0 1 64.584 20.158 A 3.047 3.047 0 0 1 64.302 19.6 Q 63.98 18.76 63.98 17.92 Q 63.98 17.08 64.204 16.632 Q 64.406 16.228 64.688 16.006 A 1.308 1.308 0 0 1 64.75 15.96 Q 65.072 15.736 65.366 15.624 Q 65.603 15.534 65.722 15.443 A 0.493 0.493 0 0 0 65.772 15.4 Q 66.612 14.476 67.312 13.468 Q 68.012 12.46 68.544 11.34 Z M 69.44 18.788 A 5.446 5.446 0 0 0 69.513 18.315 A 6.145 6.145 0 0 0 69.524 18.2 A 6.094 6.094 0 0 0 69.541 17.953 Q 69.548 17.817 69.55 17.663 A 11.454 11.454 0 0 0 69.552 17.472 Q 69.552 16.156 69.23 14.854 Q 68.908 13.552 68.684 12.404 Q 68.04 13.468 67.326 14.434 A 18.498 18.498 0 0 1 66.8 15.113 Q 66.505 15.477 66.222 15.78 A 10.169 10.169 0 0 1 65.968 16.044 A 4.717 4.717 0 0 0 66.63 17.069 A 6.23 6.23 0 0 0 67.27 17.724 A 4.519 4.519 0 0 0 68.896 18.641 A 5.604 5.604 0 0 0 69.44 18.788 Z M 22.064 27.104 A 0.561 0.561 0 0 0 22.299 27.04 Q 22.645 26.875 23.213 26.284 A 11.894 11.894 0 0 0 23.478 25.998 A 6.232 6.232 0 0 0 24.047 25.244 Q 24.606 24.389 25.203 23.042 A 30.523 30.523 0 0 0 25.592 22.12 A 45.176 45.176 0 0 0 24.223 22.885 A 37.437 37.437 0 0 0 23.464 23.338 A 7.761 7.761 0 0 0 22.656 23.904 Q 22.259 24.224 21.957 24.569 A 4.672 4.672 0 0 0 21.896 24.64 Q 21.308 25.34 21.308 26.264 Q 21.308 26.422 21.392 26.623 A 1.885 1.885 0 0 0 21.476 26.796 A 0.564 0.564 0 0 0 21.887 27.088 A 0.94 0.94 0 0 0 22.064 27.104 Z M 96.761 26.147 A 9.443 9.443 0 0 0 96.894 25.998 Q 97.86 24.892 98.98 22.204 A 26.498 26.498 0 0 0 97.402 23.058 A 22.96 22.96 0 0 0 96.894 23.366 A 9.023 9.023 0 0 0 96.065 23.946 Q 95.666 24.262 95.353 24.596 A 5.497 5.497 0 0 0 95.312 24.64 A 2.485 2.485 0 0 0 94.894 25.249 A 2.01 2.01 0 0 0 94.696 26.124 Q 94.696 26.572 94.892 26.838 A 0.769 0.769 0 0 0 95.03 26.984 A 0.528 0.528 0 0 0 95.368 27.104 Q 95.889 27.104 96.761 26.147 Z M 67.536 20.608 Q 67.872 20.608 68.432 20.384 A 1.127 1.127 0 0 0 68.867 20.062 Q 69.12 19.768 69.295 19.252 A 4.078 4.078 0 0 0 69.3 19.236 Q 68.124 19.012 67.214 18.312 Q 66.517 17.776 66.091 17.24 A 3.955 3.955 0 0 1 65.856 16.912 Q 65.253 16.94 65.24 17.853 A 2.854 2.854 0 0 0 65.24 17.892 Q 65.24 18.9 65.842 19.754 Q 66.444 20.608 67.536 20.608 Z" 
                />
         
            </g> : <div></div>}
            </g>
            
              </TweenOne> : <div></div>}

              { this.state.apearface ? <ExternalLink   href="https://www.facebook.com/Hossikz"><TweenOne  paused={this.state.pauseface} onMouseLeave={this.onMouseOutface} onMouseOver={this.onMouseOverface} component="g" animation={(this.state.orientation !== undefined && this.state.width<600 && this.state.orientation === 0)?animate.mobfacebook:( this.state.orientation !== 0 && this.state.orientation !== undefined)?animate.mobfacebook: animate.facebook  } >
              <filter id="my-facebook">
                <feComponentTransfer>
                  <feFuncR type="linear" slope="4" />
                  <feFuncG type="linear" slope="4" />
                  <feFuncB type="linear" slope="4" />
                </feComponentTransfer>
                <feColorMatrix type="matrix" values="1 0 0 0 0 
                                       0 1 0 0 0 
                                       0 0 1 0 0 
                                       0 0 0 100 0"
                                       result="boostedInput"/>
                                       
                <feGaussianBlur stdDeviation="5"/>
                <feComposite operator="out" in2="boostedInput"/>
              </filter>
              <filter id="my-facebooksecond">
                <feComponentTransfer>
                  <feFuncR type="linear" slope="2" />
                  <feFuncG type="linear" slope="2" />
                  <feFuncB type="linear" slope="2" />
                </feComponentTransfer>
              
              </filter>
              
              <g transform={(this.state.width<600 && this.state.orientation === 0 && this.state.orientation !== undefined)?"translate(340.000000, 340)":( this.state.orientation !== 0 && this.state.orientation !== undefined)?"translate(170.000000, 190)":"translate(250.000000, 200)"} >
              <rect
                fill="red"
                fillOpacity="0"
                stroke="none"
                x="-15"
                y="-5"
                width="104.4"
                height="104.4"
                rx="105.6"
                /> 
          {(this.state.orientation !== undefined && this.state.width<600 && this.state.orientation === 0)?
          
          <image
            alt="globe"
            id="id2"
            xlinkHref="https://raw.githubusercontent.com/Hossik/MyPlanet/master/public/assets/facebook.jpg"
            x="6"
            y="2"
            width="226px"
            height="226px"
          />
          :
          ( this.state.orientation !== 0 && this.state.orientation !== undefined)?
          <image
            alt="globe"
            id="id2"
            xlinkHref="https://raw.githubusercontent.com/Hossik/MyPlanet/master/public/assets/facebook.jpg"
            x="6"
            y="2"
            width="226px"
            height="226px"
          />
          :
          <g  transform="translate(100.105708, 73.561453) rotate(-16.000000) translate(-100.105708, -73.561453) ">
          <image
           filter={this.state.pauseface ? "url(#my-facebook)" : "url(#my-facebooksecond)"}
            alt="globe"
            id="id2"
            xlinkHref="https://raw.githubusercontent.com/Hossik/MyPlanet/master/public/assets/facebook.jpg"
            x="6"
            y="2"
            width="126px"
            height="126px"
          />
          <text transform="translate(-20,0)" className={this.state.width>425?"facetext" :"facetextmobile"}>Click to facebook </text><text transform="translate(40,30)" className={this.state.width>425?"facetext" :"facetextmobile"}> &#x2926;</text>
          </g>
          }
        </g>  
          </TweenOne></ExternalLink>: <div></div> }
           
        { this.state.apearreddit ? <ExternalLink   href="https://www.reddit.com/user/HossikZ"><TweenOne onMouseLeave={this.onMouseOutreddit} onMouseOver={this.onMouseOverreddit} paused={this.state.pausereddit}  component="g" animation={(this.state.width<600 && this.state.orientation === 0 && this.state.orientation !== undefined)?animate.mobreddit:( this.state.orientation !== 0 && this.state.orientation !== undefined)?animate.mobreddit: animate.reddit } >
          
        {(this.state.orientation !== undefined && this.state.width<600 && this.state.orientation === 0)
        ?
        <g transform="translate(0, 100)">
          <image
          alt="reddit"
          id="idred"
          xlinkHref="https://raw.githubusercontent.com/Hossik/MyPlanet/master/public/assets/reddit-logo.png"
          x="6"
          y="2"
          width="226px"
          height="226px"
         />
        </g>
        :
        ( this.state.orientation !== 0 && this.state.orientation !== undefined)
        ?
        <g transform="translate(460, 190)">
          <image
          alt="reddit"
          id="idred"
          xlinkHref="https://raw.githubusercontent.com/Hossik/MyPlanet/master/public/assets/reddit-logo.png"
          x="6"
          y="2"
          width="226px"
          height="226px"
         />
        </g>
        :
        <g transform="translate(440, 150)">
        <rect
          fill="red"
          fillOpacity="0"
            stroke="none"
            x="-15"
            y="-5"
            width="104.4"
            height="104.4"
            rx="105.6"
          /> 
    <image
    filter={this.state.pausereddit?"url(#my-git)":" "}
          alt="reddit"
          id="idred"
          xlinkHref="https://raw.githubusercontent.com/Hossik/MyPlanet/master/public/assets/reddit-logo.png"
          x="6"
          y="2"
          width="126px"
          height="126px"
         />
    <g transform="translate(10,155)"><text  className={this.state.width>425?"reddittex reddit reddittexone" : "reddittex reddit"}>Go  </text></g><g transform="translate(50,155)"><text style={{fill: "#FF4500"}}className={this.state.width>425?"reddittex reddit reddittextwo" : "reddittex reddit"}> reddit
    </text>
    </g>
      </g>}
       
       </TweenOne></ExternalLink>: <div></div> }
          </g>
     
  {this.state.apearlinked ? <TweenOne paused={this.state.pauselinked} onMouseLeave={this.onMouseOutlinked} onMouseOver={this.onMouseOverlinked} component="g" animation={(this.state.orientation !== undefined && this.state.width<600 && this.state.orientation === 0)?animate.moblinkedin:( this.state.orientation !== 0 && this.state.orientation !== undefined)?animate.moblinkedin : animate.linkedin  } >
  <filter id="my-filter">
    <feComponentTransfer>
      <feFuncR type="linear" slope="2" />
      <feFuncG type="linear" slope="2" />
      <feFuncB type="linear" slope="2" />
    </feComponentTransfer>
    <feColorMatrix type="matrix" values="1 0 0 0 0 
                                        0 1 0 0 0 
                                        0 0 1 0 0 
                                        0 0 0 100 0"
                                        result="boostedInput"/>
                                       
    <feGaussianBlur stdDeviation="5"/>
    <feComposite operator="out" in2="boostedInput"/>
  </filter>
  <filter id="my-secondfilter">
    <feComponentTransfer>
      <feFuncR type="linear" slope="2" />
      <feFuncG type="linear" slope="2" />
      <feFuncB type="linear" slope="2" />
    </feComponentTransfer>
  </filter>
  <ExternalLink   href="https://www.linkedin.com/in/hossik">
  {(this.state.orientation !== undefined && this.state.width<600 && this.state.orientation === 0)?
  <g transform= "translate(320, 100)">
    <image
      alt="linkedin"
      id="linkedin"
      xlinkHref="https://raw.githubusercontent.com/Hossik/MyPlanet/master/public/assets/linkedin.png"
      x="6"
      y="2"
      width="226px"
      height="226px"
      />
  </g>
  :( this.state.orientation !== 0 && this.state.orientation !== undefined)?
  <g transform= "translate(490, -40)">
    <image
      alt="linkedin"
      id="linkedin"
      xlinkHref="https://raw.githubusercontent.com/Hossik/MyPlanet/master/public/assets/linkedin.png"
      x="6"
      y="2"
      width="220px"
      height="220px"
      />
  </g>
  :
  <g transform= "translate(360, 80)">
  <rect
  fill="red"
  fillOpacity="0"
    stroke="#0e76a8"
    strokeWidth="3.6"
    filter={this.state.pauselinked ? "url(#my-filter)" : "url(#my-secondfilter)"}
    x="-15"
    y="-5"
    width="104.4"
    height="104.4"
    rx="105.6"
  /> 
		<image
    filter={this.state.pauselinked ? "url(#my-filter)" : "url(#my-secondfilter)"}
      alt="linkedin"
      id="linkedin"
      xlinkHref="https://raw.githubusercontent.com/Hossik/MyPlanet/master/public/assets/linkedin.png"
      x="-15"
      y="-5"
      width="106px"
      height="106px"
    
      />
      <g transform="translate(0, -50) rotate(16.000000) " className="rain" >
  <path id="MyPath" fill="none" 
        d="M 7 67 Q 22 21 65 21 Q 102 21 119 69" />
        {this.state.width>425? <g className="c-rainbow crain" style={{textDecoration: "none"}}>
        <text className="c-rainbow__layer c-rainbow__layer--white"><textPath href="#MyPath"> Inter Linkedin </textPath></text>
        <text className="c-rainbow__layer c-rainbow__layer--orange"><textPath href="#MyPath">Inter Linkedin</textPath></text>
        <text className="c-rainbow__layer c-rainbow__layer--red"><textPath href="#MyPath">Inter Linkedin</textPath></text>
        <text className="c-rainbow__layer c-rainbow__layer--violet"><textPath href="#MyPath">Inter Linkedin</textPath></text>
        <text className="c-rainbow__layer c-rainbow__layer--blue"><textPath href="#MyPath">Inter Linkedin</textPath></text>
        <text className="c-rainbow__layer c-rainbow__layer--green"><textPath href="#MyPath">Inter Linkedin</textPath></text>
        <text className="c-rainbow__layer c-rainbow__layer--yellow"><textPath href="#MyPath">Inter Linkedin</textPath></text>
        </g> : <g className="c-rainbow crain" style={{textDecoration: "none"}}>
        <text className="linkedmobile"><textPath href="#MyPath"> Inter Linkedin </textPath></text> </g>}
        </g> 
	</g>} </ExternalLink>
  
  </TweenOne> : <div></div>}

  {this.state.apearGit ? <TweenOne paused={this.state.pausegit} onMouseLeave={this.onMouseOutgit} onMouseOver={this.onMouseOvergit} component="g" animation={(this.state.orientation !== undefined && this.state.width<600 && this.state.orientation === 0)?animate.mobgit:( this.state.orientation !== 0 && this.state.orientation !== undefined)?animate.mobgit: animate.git } className="stop" >
          <filter id="my-git">
            <feComponentTransfer>
              <feFuncR type="linear" slope="4" />
              <feFuncG type="linear" slope="4" />
              <feFuncB type="linear" slope="4" />
            </feComponentTransfer>
            <feGaussianBlur stdDeviation="3"/>
          </filter>
          <g transform ={(this.state.orientation !== undefined && this.state.width<600 && this.state.orientation === 0)?"translate(100, -190)":( this.state.orientation !== 0 && this.state.orientation !== undefined)?"translate(-180, -100)" :"translate(100, 5)"}  >  
          <ExternalLink   href="https://github.com/Hossik">
          
          <image
          filter={this.state.pausegit?"url(#my-git)":" "}
            alt="globe"
            id="id2"
            xlinkHref="https://raw.githubusercontent.com/Hossik/Profilio/master/public/assets/GitHub-Mark-Light-120px-plus.png"
            x="46"
            y="62"
            width={(this.state.orientation !== undefined && this.state.width<600 && this.state.orientation === 0)?"250":( this.state.orientation !== 0 && this.state.orientation !== undefined)?"220":"126px"}
            height={(this.state.orientation !== undefined && this.state.width<600 && this.state.orientation === 0)?"250":( this.state.orientation !== 0 && this.state.orientation !== undefined)?"220":"126px"}
          />
          </ExternalLink>
          {(this.state.orientation !== undefined && this.state.width<600 && this.state.orientation === 0)?
          <g></g>
          :
          ( this.state.orientation !== 0 && this.state.orientation !== undefined)?
          <g></g>
          :
          <g>
            <text className={this.state.width>425?"neons" : "neonsmobile"}  x="-80" y="90">
            {`-Here ,\n
          `}
          </text>
          <br/>
          <text className={this.state.width>425?"neons" : "neonsmobile"}  x="-80" y="115">
            {`
          is my \n
        `}
          </text>
          <br/>
          <text className={this.state.width>425?"neons" : "neonsmobile"}  x="-80" y="145">
            
          codes ------
        
          </text>
          </g>}
        </g> 
      </TweenOne> : <div></div>}
      </g>
    </svg>
    </div>
  </div>
  );}
}


export default BannerImage








