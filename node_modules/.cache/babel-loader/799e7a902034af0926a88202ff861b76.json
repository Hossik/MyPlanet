{"ast":null,"code":"\"use strict\";\n\nvar TextEncoder = require(\"text-encoding\").TextEncoder;\n\nvar configureLogError = require(\"./core/log_error\");\n\nvar sinonEvent = require(\"./event\");\n\nvar extend = require(\"./core/extend\");\n\nfunction getWorkingXHR(globalScope) {\n  var supportsXHR = typeof globalScope.XMLHttpRequest !== \"undefined\";\n\n  if (supportsXHR) {\n    return globalScope.XMLHttpRequest;\n  }\n\n  var supportsActiveX = typeof globalScope.ActiveXObject !== \"undefined\";\n\n  if (supportsActiveX) {\n    return function () {\n      return new globalScope.ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n    };\n  }\n\n  return false;\n}\n\nvar supportsProgress = typeof ProgressEvent !== \"undefined\";\nvar supportsCustomEvent = typeof CustomEvent !== \"undefined\";\nvar supportsFormData = typeof FormData !== \"undefined\";\nvar supportsArrayBuffer = typeof ArrayBuffer !== \"undefined\";\n\nvar supportsBlob = require(\"../blob\").isSupported;\n\nvar isReactNative = global.navigator && global.navigator.product === \"ReactNative\";\nvar sinonXhr = {\n  XMLHttpRequest: global.XMLHttpRequest\n};\nsinonXhr.GlobalXMLHttpRequest = global.XMLHttpRequest;\nsinonXhr.GlobalActiveXObject = global.ActiveXObject;\nsinonXhr.supportsActiveX = typeof sinonXhr.GlobalActiveXObject !== \"undefined\";\nsinonXhr.supportsXHR = typeof sinonXhr.GlobalXMLHttpRequest !== \"undefined\";\nsinonXhr.workingXHR = getWorkingXHR(global);\nsinonXhr.supportsCORS = isReactNative || sinonXhr.supportsXHR && \"withCredentials\" in new sinonXhr.GlobalXMLHttpRequest();\nvar unsafeHeaders = {\n  \"Accept-Charset\": true,\n  \"Accept-Encoding\": true,\n  \"Connection\": true,\n  \"Content-Length\": true,\n  \"Cookie\": true,\n  \"Cookie2\": true,\n  \"Content-Transfer-Encoding\": true,\n  \"Date\": true,\n  \"Expect\": true,\n  \"Host\": true,\n  \"Keep-Alive\": true,\n  \"Referer\": true,\n  \"TE\": true,\n  \"Trailer\": true,\n  \"Transfer-Encoding\": true,\n  \"Upgrade\": true,\n  \"User-Agent\": true,\n  \"Via\": true\n};\n\nfunction EventTargetHandler() {\n  var self = this;\n  var events = [\"loadstart\", \"progress\", \"abort\", \"error\", \"load\", \"timeout\", \"loadend\"];\n\n  function addEventListener(eventName) {\n    self.addEventListener(eventName, function (event) {\n      var listener = self[\"on\" + eventName];\n\n      if (listener && typeof listener === \"function\") {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  events.forEach(addEventListener);\n}\n\nEventTargetHandler.prototype = sinonEvent.EventTarget; // Note that for FakeXMLHttpRequest to work pre ES5\n// we lose some of the alignment with the spec.\n// To ensure as close a match as possible,\n// set responseType before calling open, send or respond;\n\nfunction FakeXMLHttpRequest(config) {\n  EventTargetHandler.call(this);\n  this.readyState = FakeXMLHttpRequest.UNSENT;\n  this.requestHeaders = {};\n  this.requestBody = null;\n  this.status = 0;\n  this.statusText = \"\";\n  this.upload = new EventTargetHandler();\n  this.responseType = \"\";\n  this.response = \"\";\n  this.logError = configureLogError(config);\n\n  if (sinonXhr.supportsCORS) {\n    this.withCredentials = false;\n  }\n\n  if (typeof FakeXMLHttpRequest.onCreate === \"function\") {\n    FakeXMLHttpRequest.onCreate(this);\n  }\n}\n\nfunction verifyState(xhr) {\n  if (xhr.readyState !== FakeXMLHttpRequest.OPENED) {\n    throw new Error(\"INVALID_STATE_ERR\");\n  }\n\n  if (xhr.sendFlag) {\n    throw new Error(\"INVALID_STATE_ERR\");\n  }\n}\n\nfunction getHeader(headers, header) {\n  var foundHeader = Object.keys(headers).filter(function (h) {\n    return h.toLowerCase() === header.toLowerCase();\n  });\n  return foundHeader[0] || null;\n}\n\nfunction excludeSetCookie2Header(header) {\n  return !/^Set-Cookie2?$/i.test(header);\n} // largest arity in XHR is 5 - XHR#open\n\n\nvar apply = function (obj, method, args) {\n  switch (args.length) {\n    case 0:\n      return obj[method]();\n\n    case 1:\n      return obj[method](args[0]);\n\n    case 2:\n      return obj[method](args[0], args[1]);\n\n    case 3:\n      return obj[method](args[0], args[1], args[2]);\n\n    case 4:\n      return obj[method](args[0], args[1], args[2], args[3]);\n\n    case 5:\n      return obj[method](args[0], args[1], args[2], args[3], args[4]);\n\n    default:\n      throw new Error(\"Unhandled case\");\n  }\n};\n\nFakeXMLHttpRequest.filters = [];\n\nFakeXMLHttpRequest.addFilter = function addFilter(fn) {\n  this.filters.push(fn);\n};\n\nFakeXMLHttpRequest.defake = function defake(fakeXhr, xhrArgs) {\n  var xhr = new sinonXhr.workingXHR(); // eslint-disable-line new-cap\n\n  [\"open\", \"setRequestHeader\", \"send\", \"abort\", \"getResponseHeader\", \"getAllResponseHeaders\", \"addEventListener\", \"overrideMimeType\", \"removeEventListener\"].forEach(function (method) {\n    fakeXhr[method] = function () {\n      return apply(xhr, method, arguments);\n    };\n  });\n\n  var copyAttrs = function (args) {\n    args.forEach(function (attr) {\n      fakeXhr[attr] = xhr[attr];\n    });\n  };\n\n  var stateChange = function stateChange() {\n    fakeXhr.readyState = xhr.readyState;\n\n    if (xhr.readyState >= FakeXMLHttpRequest.HEADERS_RECEIVED) {\n      copyAttrs([\"status\", \"statusText\"]);\n    }\n\n    if (xhr.readyState >= FakeXMLHttpRequest.LOADING) {\n      copyAttrs([\"responseText\", \"response\"]);\n    }\n\n    if (xhr.readyState === FakeXMLHttpRequest.DONE) {\n      copyAttrs([\"responseXML\"]);\n    }\n\n    if (fakeXhr.onreadystatechange) {\n      fakeXhr.onreadystatechange.call(fakeXhr, {\n        target: fakeXhr\n      });\n    }\n  };\n\n  if (xhr.addEventListener) {\n    Object.keys(fakeXhr.eventListeners).forEach(function (event) {\n      /*eslint-disable no-loop-func*/\n      fakeXhr.eventListeners[event].forEach(function (handler) {\n        xhr.addEventListener(event, handler);\n      });\n      /*eslint-enable no-loop-func*/\n    });\n    xhr.addEventListener(\"readystatechange\", stateChange);\n  } else {\n    xhr.onreadystatechange = stateChange;\n  }\n\n  apply(xhr, \"open\", xhrArgs);\n};\n\nFakeXMLHttpRequest.useFilters = false;\n\nfunction verifyRequestOpened(xhr) {\n  if (xhr.readyState !== FakeXMLHttpRequest.OPENED) {\n    throw new Error(\"INVALID_STATE_ERR - \" + xhr.readyState);\n  }\n}\n\nfunction verifyRequestSent(xhr) {\n  if (xhr.readyState === FakeXMLHttpRequest.DONE) {\n    throw new Error(\"Request done\");\n  }\n}\n\nfunction verifyHeadersReceived(xhr) {\n  if (xhr.async && xhr.readyState !== FakeXMLHttpRequest.HEADERS_RECEIVED) {\n    throw new Error(\"No headers received\");\n  }\n}\n\nfunction verifyResponseBodyType(body) {\n  if (typeof body !== \"string\") {\n    var error = new Error(\"Attempted to respond to fake XMLHttpRequest with \" + body + \", which is not a string.\");\n    error.name = \"InvalidBodyException\";\n    throw error;\n  }\n}\n\nfunction convertToArrayBuffer(body, encoding) {\n  return new TextEncoder(encoding || \"utf-8\").encode(body).buffer;\n}\n\nfunction isXmlContentType(contentType) {\n  return !contentType || /(text\\/xml)|(application\\/xml)|(\\+xml)/.test(contentType);\n}\n\nfunction convertResponseBody(responseType, contentType, body) {\n  if (responseType === \"\" || responseType === \"text\") {\n    return body;\n  } else if (supportsArrayBuffer && responseType === \"arraybuffer\") {\n    return convertToArrayBuffer(body);\n  } else if (responseType === \"json\") {\n    try {\n      return JSON.parse(body);\n    } catch (e) {\n      // Return parsing failure as null\n      return null;\n    }\n  } else if (supportsBlob && responseType === \"blob\") {\n    var blobOptions = {};\n\n    if (contentType) {\n      blobOptions.type = contentType;\n    }\n\n    return new Blob([convertToArrayBuffer(body)], blobOptions);\n  } else if (responseType === \"document\") {\n    if (isXmlContentType(contentType)) {\n      return FakeXMLHttpRequest.parseXML(body);\n    }\n\n    return null;\n  }\n\n  throw new Error(\"Invalid responseType \" + responseType);\n}\n\nfunction clearResponse(xhr) {\n  if (xhr.responseType === \"\" || xhr.responseType === \"text\") {\n    xhr.response = xhr.responseText = \"\";\n  } else {\n    xhr.response = xhr.responseText = null;\n  }\n\n  xhr.responseXML = null;\n}\n\nFakeXMLHttpRequest.parseXML = function parseXML(text) {\n  // Treat empty string as parsing failure\n  if (text !== \"\") {\n    try {\n      if (typeof DOMParser !== \"undefined\") {\n        var parser = new DOMParser();\n        return parser.parseFromString(text, \"text/xml\");\n      }\n\n      var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      xmlDoc.async = \"false\";\n      xmlDoc.loadXML(text);\n      return xmlDoc;\n    } catch (e) {// Unable to parse XML - no biggie\n    }\n  }\n\n  return null;\n};\n\nFakeXMLHttpRequest.statusCodes = {\n  100: \"Continue\",\n  101: \"Switching Protocols\",\n  200: \"OK\",\n  201: \"Created\",\n  202: \"Accepted\",\n  203: \"Non-Authoritative Information\",\n  204: \"No Content\",\n  205: \"Reset Content\",\n  206: \"Partial Content\",\n  207: \"Multi-Status\",\n  300: \"Multiple Choice\",\n  301: \"Moved Permanently\",\n  302: \"Found\",\n  303: \"See Other\",\n  304: \"Not Modified\",\n  305: \"Use Proxy\",\n  307: \"Temporary Redirect\",\n  400: \"Bad Request\",\n  401: \"Unauthorized\",\n  402: \"Payment Required\",\n  403: \"Forbidden\",\n  404: \"Not Found\",\n  405: \"Method Not Allowed\",\n  406: \"Not Acceptable\",\n  407: \"Proxy Authentication Required\",\n  408: \"Request Timeout\",\n  409: \"Conflict\",\n  410: \"Gone\",\n  411: \"Length Required\",\n  412: \"Precondition Failed\",\n  413: \"Request Entity Too Large\",\n  414: \"Request-URI Too Long\",\n  415: \"Unsupported Media Type\",\n  416: \"Requested Range Not Satisfiable\",\n  417: \"Expectation Failed\",\n  422: \"Unprocessable Entity\",\n  500: \"Internal Server Error\",\n  501: \"Not Implemented\",\n  502: \"Bad Gateway\",\n  503: \"Service Unavailable\",\n  504: \"Gateway Timeout\",\n  505: \"HTTP Version Not Supported\"\n};\nextend(FakeXMLHttpRequest.prototype, sinonEvent.EventTarget, {\n  async: true,\n  open: function open(method, url, async, username, password) {\n    this.method = method;\n    this.url = url;\n    this.async = typeof async === \"boolean\" ? async : true;\n    this.username = username;\n    this.password = password;\n    clearResponse(this);\n    this.requestHeaders = {};\n    this.sendFlag = false;\n\n    if (FakeXMLHttpRequest.useFilters === true) {\n      var xhrArgs = arguments;\n      var defake = FakeXMLHttpRequest.filters.some(function (filter) {\n        return filter.apply(this, xhrArgs);\n      });\n\n      if (defake) {\n        FakeXMLHttpRequest.defake(this, arguments);\n        return;\n      }\n    }\n\n    this.readyStateChange(FakeXMLHttpRequest.OPENED);\n  },\n  readyStateChange: function readyStateChange(state) {\n    this.readyState = state;\n    var readyStateChangeEvent = new sinonEvent.Event(\"readystatechange\", false, false, this);\n    var event, progress;\n\n    if (typeof this.onreadystatechange === \"function\") {\n      try {\n        this.onreadystatechange(readyStateChangeEvent);\n      } catch (e) {\n        this.logError(\"Fake XHR onreadystatechange handler\", e);\n      }\n    }\n\n    if (this.readyState === FakeXMLHttpRequest.DONE) {\n      if (this.aborted || this.status === 0) {\n        progress = {\n          loaded: 0,\n          total: 0\n        };\n        event = this.aborted ? \"abort\" : \"error\";\n      } else {\n        progress = {\n          loaded: 100,\n          total: 100\n        };\n        event = \"load\";\n      }\n\n      if (supportsProgress) {\n        this.upload.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progress, this));\n        this.upload.dispatchEvent(new sinonEvent.ProgressEvent(event, progress, this));\n        this.upload.dispatchEvent(new sinonEvent.ProgressEvent(\"loadend\", progress, this));\n      }\n\n      this.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progress, this));\n      this.dispatchEvent(new sinonEvent.ProgressEvent(event, progress, this));\n      this.dispatchEvent(new sinonEvent.ProgressEvent(\"loadend\", progress, this));\n    }\n\n    this.dispatchEvent(readyStateChangeEvent);\n  },\n  setRequestHeader: function setRequestHeader(header, value) {\n    verifyState(this);\n    var checkUnsafeHeaders = true;\n\n    if (typeof this.unsafeHeadersEnabled === \"function\") {\n      checkUnsafeHeaders = this.unsafeHeadersEnabled();\n    }\n\n    if (checkUnsafeHeaders && (unsafeHeaders[header] || /^(Sec-|Proxy-)/.test(header))) {\n      throw new Error(\"Refused to set unsafe header \\\"\" + header + \"\\\"\");\n    }\n\n    if (this.requestHeaders[header]) {\n      this.requestHeaders[header] += \",\" + value;\n    } else {\n      this.requestHeaders[header] = value;\n    }\n  },\n  setStatus: function setStatus(status) {\n    var sanitizedStatus = typeof status === \"number\" ? status : 200;\n    verifyRequestOpened(this);\n    this.status = sanitizedStatus;\n    this.statusText = FakeXMLHttpRequest.statusCodes[sanitizedStatus];\n  },\n  // Helps testing\n  setResponseHeaders: function setResponseHeaders(headers) {\n    verifyRequestOpened(this);\n    var responseHeaders = this.responseHeaders = {};\n    Object.keys(headers).forEach(function (header) {\n      responseHeaders[header] = headers[header];\n    });\n\n    if (this.async) {\n      this.readyStateChange(FakeXMLHttpRequest.HEADERS_RECEIVED);\n    } else {\n      this.readyState = FakeXMLHttpRequest.HEADERS_RECEIVED;\n    }\n  },\n  // Currently treats ALL data as a DOMString (i.e. no Document)\n  send: function send(data) {\n    verifyState(this);\n\n    if (!/^(head)$/i.test(this.method)) {\n      var contentType = getHeader(this.requestHeaders, \"Content-Type\");\n\n      if (this.requestHeaders[contentType]) {\n        var value = this.requestHeaders[contentType].split(\";\");\n        this.requestHeaders[contentType] = value[0] + \";charset=utf-8\";\n      } else if (supportsFormData && !(data instanceof FormData)) {\n        this.requestHeaders[\"Content-Type\"] = \"text/plain;charset=utf-8\";\n      }\n\n      this.requestBody = data;\n    }\n\n    this.errorFlag = false;\n    this.sendFlag = this.async;\n    clearResponse(this);\n    this.readyStateChange(FakeXMLHttpRequest.OPENED);\n\n    if (typeof this.onSend === \"function\") {\n      this.onSend(this);\n    }\n\n    this.dispatchEvent(new sinonEvent.Event(\"loadstart\", false, false, this));\n  },\n  abort: function abort() {\n    this.aborted = true;\n    clearResponse(this);\n    this.errorFlag = true;\n    this.requestHeaders = {};\n    this.responseHeaders = {};\n\n    if (this.readyState !== FakeXMLHttpRequest.UNSENT && this.sendFlag && this.readyState !== FakeXMLHttpRequest.DONE) {\n      this.readyStateChange(FakeXMLHttpRequest.DONE);\n      this.sendFlag = false;\n    }\n\n    this.readyState = FakeXMLHttpRequest.UNSENT;\n  },\n  error: function () {\n    clearResponse(this);\n    this.errorFlag = true;\n    this.requestHeaders = {};\n    this.responseHeaders = {};\n    this.readyStateChange(FakeXMLHttpRequest.DONE);\n  },\n  getResponseHeader: function getResponseHeader(header) {\n    if (this.readyState < FakeXMLHttpRequest.HEADERS_RECEIVED) {\n      return null;\n    }\n\n    if (/^Set-Cookie2?$/i.test(header)) {\n      return null;\n    }\n\n    header = getHeader(this.responseHeaders, header);\n    return this.responseHeaders[header] || null;\n  },\n  getAllResponseHeaders: function getAllResponseHeaders() {\n    if (this.readyState < FakeXMLHttpRequest.HEADERS_RECEIVED) {\n      return \"\";\n    }\n\n    var responseHeaders = this.responseHeaders;\n    var headers = Object.keys(responseHeaders).filter(excludeSetCookie2Header).reduce(function (prev, header) {\n      var value = responseHeaders[header];\n      return prev + (header + \": \" + value + \"\\r\\n\");\n    }, \"\");\n    return headers;\n  },\n  setResponseBody: function setResponseBody(body) {\n    verifyRequestSent(this);\n    verifyHeadersReceived(this);\n    verifyResponseBodyType(body);\n    var contentType = this.overriddenMimeType || this.getResponseHeader(\"Content-Type\");\n    var isTextResponse = this.responseType === \"\" || this.responseType === \"text\";\n    clearResponse(this);\n\n    if (this.async) {\n      var chunkSize = this.chunkSize || 10;\n      var index = 0;\n\n      do {\n        this.readyStateChange(FakeXMLHttpRequest.LOADING);\n\n        if (isTextResponse) {\n          this.responseText = this.response += body.substring(index, index + chunkSize);\n        }\n\n        index += chunkSize;\n      } while (index < body.length);\n    }\n\n    this.response = convertResponseBody(this.responseType, contentType, body);\n\n    if (isTextResponse) {\n      this.responseText = this.response;\n    }\n\n    if (this.responseType === \"document\") {\n      this.responseXML = this.response;\n    } else if (this.responseType === \"\" && isXmlContentType(contentType)) {\n      this.responseXML = FakeXMLHttpRequest.parseXML(this.responseText);\n    }\n\n    this.readyStateChange(FakeXMLHttpRequest.DONE);\n  },\n  respond: function respond(status, headers, body) {\n    this.setStatus(status);\n    this.setResponseHeaders(headers || {});\n    this.setResponseBody(body || \"\");\n  },\n  uploadProgress: function uploadProgress(progressEventRaw) {\n    if (supportsProgress) {\n      this.upload.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progressEventRaw));\n    }\n  },\n  downloadProgress: function downloadProgress(progressEventRaw) {\n    if (supportsProgress) {\n      this.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progressEventRaw));\n    }\n  },\n  uploadError: function uploadError(error) {\n    if (supportsCustomEvent) {\n      this.upload.dispatchEvent(new sinonEvent.CustomEvent(\"error\", {\n        detail: error\n      }));\n    }\n  },\n  overrideMimeType: function overrideMimeType(type) {\n    if (this.readyState >= FakeXMLHttpRequest.LOADING) {\n      throw new Error(\"INVALID_STATE_ERR\");\n    }\n\n    this.overriddenMimeType = type;\n  }\n});\nvar states = {\n  UNSENT: 0,\n  OPENED: 1,\n  HEADERS_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4\n};\nextend(FakeXMLHttpRequest, states);\nextend(FakeXMLHttpRequest.prototype, states);\n\nfunction useFakeXMLHttpRequest() {\n  FakeXMLHttpRequest.restore = function restore(keepOnCreate) {\n    if (sinonXhr.supportsXHR) {\n      global.XMLHttpRequest = sinonXhr.GlobalXMLHttpRequest;\n    }\n\n    if (sinonXhr.supportsActiveX) {\n      global.ActiveXObject = sinonXhr.GlobalActiveXObject;\n    }\n\n    delete FakeXMLHttpRequest.restore;\n\n    if (keepOnCreate !== true) {\n      delete FakeXMLHttpRequest.onCreate;\n    }\n  };\n\n  if (sinonXhr.supportsXHR) {\n    global.XMLHttpRequest = FakeXMLHttpRequest;\n  }\n\n  if (sinonXhr.supportsActiveX) {\n    global.ActiveXObject = function ActiveXObject(objId) {\n      if (objId === \"Microsoft.XMLHTTP\" || /^Msxml2\\.XMLHTTP/i.test(objId)) {\n        return new FakeXMLHttpRequest();\n      }\n\n      return new sinonXhr.GlobalActiveXObject(objId);\n    };\n  }\n\n  return FakeXMLHttpRequest;\n}\n\nmodule.exports = {\n  xhr: sinonXhr,\n  FakeXMLHttpRequest: FakeXMLHttpRequest,\n  useFakeXMLHttpRequest: useFakeXMLHttpRequest\n};","map":{"version":3,"sources":["/home/hoss/my App/my-app/node_modules/sinon/lib/sinon/util/fake_xml_http_request.js"],"names":["TextEncoder","require","configureLogError","sinonEvent","extend","getWorkingXHR","globalScope","supportsXHR","XMLHttpRequest","supportsActiveX","ActiveXObject","supportsProgress","ProgressEvent","supportsCustomEvent","CustomEvent","supportsFormData","FormData","supportsArrayBuffer","ArrayBuffer","supportsBlob","isSupported","isReactNative","global","navigator","product","sinonXhr","GlobalXMLHttpRequest","GlobalActiveXObject","workingXHR","supportsCORS","unsafeHeaders","EventTargetHandler","self","events","addEventListener","eventName","event","listener","call","forEach","prototype","EventTarget","FakeXMLHttpRequest","config","readyState","UNSENT","requestHeaders","requestBody","status","statusText","upload","responseType","response","logError","withCredentials","onCreate","verifyState","xhr","OPENED","Error","sendFlag","getHeader","headers","header","foundHeader","Object","keys","filter","h","toLowerCase","excludeSetCookie2Header","test","apply","obj","method","args","length","filters","addFilter","fn","push","defake","fakeXhr","xhrArgs","arguments","copyAttrs","attr","stateChange","HEADERS_RECEIVED","LOADING","DONE","onreadystatechange","target","eventListeners","handler","useFilters","verifyRequestOpened","verifyRequestSent","verifyHeadersReceived","async","verifyResponseBodyType","body","error","name","convertToArrayBuffer","encoding","encode","buffer","isXmlContentType","contentType","convertResponseBody","JSON","parse","e","blobOptions","type","Blob","parseXML","clearResponse","responseText","responseXML","text","DOMParser","parser","parseFromString","xmlDoc","window","loadXML","statusCodes","open","url","username","password","some","readyStateChange","state","readyStateChangeEvent","Event","progress","aborted","loaded","total","dispatchEvent","setRequestHeader","value","checkUnsafeHeaders","unsafeHeadersEnabled","setStatus","sanitizedStatus","setResponseHeaders","responseHeaders","send","data","split","errorFlag","onSend","abort","getResponseHeader","getAllResponseHeaders","reduce","prev","setResponseBody","overriddenMimeType","isTextResponse","chunkSize","index","substring","respond","uploadProgress","progressEventRaw","downloadProgress","uploadError","detail","overrideMimeType","states","useFakeXMLHttpRequest","restore","keepOnCreate","objId","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar TextEncoder = require(\"text-encoding\").TextEncoder;\n\nvar configureLogError = require(\"./core/log_error\");\nvar sinonEvent = require(\"./event\");\nvar extend = require(\"./core/extend\");\n\nfunction getWorkingXHR(globalScope) {\n    var supportsXHR = typeof globalScope.XMLHttpRequest !== \"undefined\";\n    if (supportsXHR) {\n        return globalScope.XMLHttpRequest;\n    }\n\n    var supportsActiveX = typeof globalScope.ActiveXObject !== \"undefined\";\n    if (supportsActiveX) {\n        return function () {\n            return new globalScope.ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        };\n    }\n\n    return false;\n}\n\nvar supportsProgress = typeof ProgressEvent !== \"undefined\";\nvar supportsCustomEvent = typeof CustomEvent !== \"undefined\";\nvar supportsFormData = typeof FormData !== \"undefined\";\nvar supportsArrayBuffer = typeof ArrayBuffer !== \"undefined\";\nvar supportsBlob = require(\"../blob\").isSupported;\nvar isReactNative = global.navigator && global.navigator.product === \"ReactNative\";\nvar sinonXhr = { XMLHttpRequest: global.XMLHttpRequest };\nsinonXhr.GlobalXMLHttpRequest = global.XMLHttpRequest;\nsinonXhr.GlobalActiveXObject = global.ActiveXObject;\nsinonXhr.supportsActiveX = typeof sinonXhr.GlobalActiveXObject !== \"undefined\";\nsinonXhr.supportsXHR = typeof sinonXhr.GlobalXMLHttpRequest !== \"undefined\";\nsinonXhr.workingXHR = getWorkingXHR(global);\nsinonXhr.supportsCORS = isReactNative ||\n    (sinonXhr.supportsXHR && \"withCredentials\" in (new sinonXhr.GlobalXMLHttpRequest()));\n\nvar unsafeHeaders = {\n    \"Accept-Charset\": true,\n    \"Accept-Encoding\": true,\n    \"Connection\": true,\n    \"Content-Length\": true,\n    \"Cookie\": true,\n    \"Cookie2\": true,\n    \"Content-Transfer-Encoding\": true,\n    \"Date\": true,\n    \"Expect\": true,\n    \"Host\": true,\n    \"Keep-Alive\": true,\n    \"Referer\": true,\n    \"TE\": true,\n    \"Trailer\": true,\n    \"Transfer-Encoding\": true,\n    \"Upgrade\": true,\n    \"User-Agent\": true,\n    \"Via\": true\n};\n\n\nfunction EventTargetHandler() {\n    var self = this;\n    var events = [\"loadstart\", \"progress\", \"abort\", \"error\", \"load\", \"timeout\", \"loadend\"];\n\n    function addEventListener(eventName) {\n        self.addEventListener(eventName, function (event) {\n            var listener = self[\"on\" + eventName];\n\n            if (listener && typeof listener === \"function\") {\n                listener.call(this, event);\n            }\n        });\n    }\n\n    events.forEach(addEventListener);\n}\n\nEventTargetHandler.prototype = sinonEvent.EventTarget;\n\n// Note that for FakeXMLHttpRequest to work pre ES5\n// we lose some of the alignment with the spec.\n// To ensure as close a match as possible,\n// set responseType before calling open, send or respond;\nfunction FakeXMLHttpRequest(config) {\n    EventTargetHandler.call(this);\n    this.readyState = FakeXMLHttpRequest.UNSENT;\n    this.requestHeaders = {};\n    this.requestBody = null;\n    this.status = 0;\n    this.statusText = \"\";\n    this.upload = new EventTargetHandler();\n    this.responseType = \"\";\n    this.response = \"\";\n    this.logError = configureLogError(config);\n    if (sinonXhr.supportsCORS) {\n        this.withCredentials = false;\n    }\n\n    if (typeof FakeXMLHttpRequest.onCreate === \"function\") {\n        FakeXMLHttpRequest.onCreate(this);\n    }\n}\n\nfunction verifyState(xhr) {\n    if (xhr.readyState !== FakeXMLHttpRequest.OPENED) {\n        throw new Error(\"INVALID_STATE_ERR\");\n    }\n\n    if (xhr.sendFlag) {\n        throw new Error(\"INVALID_STATE_ERR\");\n    }\n}\n\nfunction getHeader(headers, header) {\n    var foundHeader = Object.keys(headers).filter(function (h) {\n        return h.toLowerCase() === header.toLowerCase();\n    });\n\n    return foundHeader[0] || null;\n}\n\nfunction excludeSetCookie2Header(header) {\n    return !/^Set-Cookie2?$/i.test(header);\n}\n\n// largest arity in XHR is 5 - XHR#open\nvar apply = function (obj, method, args) {\n    switch (args.length) {\n        case 0: return obj[method]();\n        case 1: return obj[method](args[0]);\n        case 2: return obj[method](args[0], args[1]);\n        case 3: return obj[method](args[0], args[1], args[2]);\n        case 4: return obj[method](args[0], args[1], args[2], args[3]);\n        case 5: return obj[method](args[0], args[1], args[2], args[3], args[4]);\n        default: throw new Error(\"Unhandled case\");\n    }\n};\n\nFakeXMLHttpRequest.filters = [];\nFakeXMLHttpRequest.addFilter = function addFilter(fn) {\n    this.filters.push(fn);\n};\nFakeXMLHttpRequest.defake = function defake(fakeXhr, xhrArgs) {\n    var xhr = new sinonXhr.workingXHR(); // eslint-disable-line new-cap\n\n    [\n        \"open\",\n        \"setRequestHeader\",\n        \"send\",\n        \"abort\",\n        \"getResponseHeader\",\n        \"getAllResponseHeaders\",\n        \"addEventListener\",\n        \"overrideMimeType\",\n        \"removeEventListener\"\n    ].forEach(function (method) {\n        fakeXhr[method] = function () {\n            return apply(xhr, method, arguments);\n        };\n    });\n\n    var copyAttrs = function (args) {\n        args.forEach(function (attr) {\n            fakeXhr[attr] = xhr[attr];\n        });\n    };\n\n    var stateChange = function stateChange() {\n        fakeXhr.readyState = xhr.readyState;\n        if (xhr.readyState >= FakeXMLHttpRequest.HEADERS_RECEIVED) {\n            copyAttrs([\"status\", \"statusText\"]);\n        }\n        if (xhr.readyState >= FakeXMLHttpRequest.LOADING) {\n            copyAttrs([\"responseText\", \"response\"]);\n        }\n        if (xhr.readyState === FakeXMLHttpRequest.DONE) {\n            copyAttrs([\"responseXML\"]);\n        }\n        if (fakeXhr.onreadystatechange) {\n            fakeXhr.onreadystatechange.call(fakeXhr, { target: fakeXhr });\n        }\n    };\n\n    if (xhr.addEventListener) {\n        Object.keys(fakeXhr.eventListeners).forEach(function (event) {\n            /*eslint-disable no-loop-func*/\n            fakeXhr.eventListeners[event].forEach(function (handler) {\n                xhr.addEventListener(event, handler);\n            });\n            /*eslint-enable no-loop-func*/\n        });\n\n        xhr.addEventListener(\"readystatechange\", stateChange);\n    } else {\n        xhr.onreadystatechange = stateChange;\n    }\n    apply(xhr, \"open\", xhrArgs);\n};\nFakeXMLHttpRequest.useFilters = false;\n\nfunction verifyRequestOpened(xhr) {\n    if (xhr.readyState !== FakeXMLHttpRequest.OPENED) {\n        throw new Error(\"INVALID_STATE_ERR - \" + xhr.readyState);\n    }\n}\n\nfunction verifyRequestSent(xhr) {\n    if (xhr.readyState === FakeXMLHttpRequest.DONE) {\n        throw new Error(\"Request done\");\n    }\n}\n\nfunction verifyHeadersReceived(xhr) {\n    if (xhr.async && xhr.readyState !== FakeXMLHttpRequest.HEADERS_RECEIVED) {\n        throw new Error(\"No headers received\");\n    }\n}\n\nfunction verifyResponseBodyType(body) {\n    if (typeof body !== \"string\") {\n        var error = new Error(\"Attempted to respond to fake XMLHttpRequest with \" +\n                             body + \", which is not a string.\");\n        error.name = \"InvalidBodyException\";\n        throw error;\n    }\n}\n\nfunction convertToArrayBuffer(body, encoding) {\n    return new TextEncoder(encoding || \"utf-8\").encode(body).buffer;\n}\n\nfunction isXmlContentType(contentType) {\n    return !contentType || /(text\\/xml)|(application\\/xml)|(\\+xml)/.test(contentType);\n}\n\nfunction convertResponseBody(responseType, contentType, body) {\n    if (responseType === \"\" || responseType === \"text\") {\n        return body;\n    } else if (supportsArrayBuffer && responseType === \"arraybuffer\") {\n        return convertToArrayBuffer(body);\n    } else if (responseType === \"json\") {\n        try {\n            return JSON.parse(body);\n        } catch (e) {\n            // Return parsing failure as null\n            return null;\n        }\n    } else if (supportsBlob && responseType === \"blob\") {\n        var blobOptions = {};\n        if (contentType) {\n            blobOptions.type = contentType;\n        }\n        return new Blob([convertToArrayBuffer(body)], blobOptions);\n    } else if (responseType === \"document\") {\n        if (isXmlContentType(contentType)) {\n            return FakeXMLHttpRequest.parseXML(body);\n        }\n        return null;\n    }\n    throw new Error(\"Invalid responseType \" + responseType);\n}\n\nfunction clearResponse(xhr) {\n    if (xhr.responseType === \"\" || xhr.responseType === \"text\") {\n        xhr.response = xhr.responseText = \"\";\n    } else {\n        xhr.response = xhr.responseText = null;\n    }\n    xhr.responseXML = null;\n}\n\nFakeXMLHttpRequest.parseXML = function parseXML(text) {\n    // Treat empty string as parsing failure\n    if (text !== \"\") {\n        try {\n            if (typeof DOMParser !== \"undefined\") {\n                var parser = new DOMParser();\n                return parser.parseFromString(text, \"text/xml\");\n            }\n            var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n            xmlDoc.async = \"false\";\n            xmlDoc.loadXML(text);\n            return xmlDoc;\n        } catch (e) {\n            // Unable to parse XML - no biggie\n        }\n    }\n\n    return null;\n};\n\nFakeXMLHttpRequest.statusCodes = {\n    100: \"Continue\",\n    101: \"Switching Protocols\",\n    200: \"OK\",\n    201: \"Created\",\n    202: \"Accepted\",\n    203: \"Non-Authoritative Information\",\n    204: \"No Content\",\n    205: \"Reset Content\",\n    206: \"Partial Content\",\n    207: \"Multi-Status\",\n    300: \"Multiple Choice\",\n    301: \"Moved Permanently\",\n    302: \"Found\",\n    303: \"See Other\",\n    304: \"Not Modified\",\n    305: \"Use Proxy\",\n    307: \"Temporary Redirect\",\n    400: \"Bad Request\",\n    401: \"Unauthorized\",\n    402: \"Payment Required\",\n    403: \"Forbidden\",\n    404: \"Not Found\",\n    405: \"Method Not Allowed\",\n    406: \"Not Acceptable\",\n    407: \"Proxy Authentication Required\",\n    408: \"Request Timeout\",\n    409: \"Conflict\",\n    410: \"Gone\",\n    411: \"Length Required\",\n    412: \"Precondition Failed\",\n    413: \"Request Entity Too Large\",\n    414: \"Request-URI Too Long\",\n    415: \"Unsupported Media Type\",\n    416: \"Requested Range Not Satisfiable\",\n    417: \"Expectation Failed\",\n    422: \"Unprocessable Entity\",\n    500: \"Internal Server Error\",\n    501: \"Not Implemented\",\n    502: \"Bad Gateway\",\n    503: \"Service Unavailable\",\n    504: \"Gateway Timeout\",\n    505: \"HTTP Version Not Supported\"\n};\n\nextend(FakeXMLHttpRequest.prototype, sinonEvent.EventTarget, {\n    async: true,\n\n    open: function open(method, url, async, username, password) {\n        this.method = method;\n        this.url = url;\n        this.async = typeof async === \"boolean\" ? async : true;\n        this.username = username;\n        this.password = password;\n        clearResponse(this);\n        this.requestHeaders = {};\n        this.sendFlag = false;\n\n        if (FakeXMLHttpRequest.useFilters === true) {\n            var xhrArgs = arguments;\n            var defake = FakeXMLHttpRequest.filters.some(function (filter) {\n                return filter.apply(this, xhrArgs);\n            });\n            if (defake) {\n                FakeXMLHttpRequest.defake(this, arguments);\n                return;\n            }\n        }\n        this.readyStateChange(FakeXMLHttpRequest.OPENED);\n    },\n\n    readyStateChange: function readyStateChange(state) {\n        this.readyState = state;\n\n        var readyStateChangeEvent = new sinonEvent.Event(\"readystatechange\", false, false, this);\n        var event, progress;\n\n        if (typeof this.onreadystatechange === \"function\") {\n            try {\n                this.onreadystatechange(readyStateChangeEvent);\n            } catch (e) {\n                this.logError(\"Fake XHR onreadystatechange handler\", e);\n            }\n        }\n\n        if (this.readyState === FakeXMLHttpRequest.DONE) {\n            if (this.aborted || this.status === 0) {\n                progress = {loaded: 0, total: 0};\n                event = this.aborted ? \"abort\" : \"error\";\n            } else {\n                progress = {loaded: 100, total: 100};\n                event = \"load\";\n            }\n\n            if (supportsProgress) {\n                this.upload.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progress, this));\n                this.upload.dispatchEvent(new sinonEvent.ProgressEvent(event, progress, this));\n                this.upload.dispatchEvent(new sinonEvent.ProgressEvent(\"loadend\", progress, this));\n            }\n\n            this.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progress, this));\n            this.dispatchEvent(new sinonEvent.ProgressEvent(event, progress, this));\n            this.dispatchEvent(new sinonEvent.ProgressEvent(\"loadend\", progress, this));\n        }\n\n        this.dispatchEvent(readyStateChangeEvent);\n    },\n\n    setRequestHeader: function setRequestHeader(header, value) {\n        verifyState(this);\n\n        var checkUnsafeHeaders = true;\n        if (typeof this.unsafeHeadersEnabled === \"function\") {\n            checkUnsafeHeaders = this.unsafeHeadersEnabled();\n        }\n\n        if (checkUnsafeHeaders && (unsafeHeaders[header] || /^(Sec-|Proxy-)/.test(header))) {\n            throw new Error(\"Refused to set unsafe header \\\"\" + header + \"\\\"\");\n        }\n\n        if (this.requestHeaders[header]) {\n            this.requestHeaders[header] += \",\" + value;\n        } else {\n            this.requestHeaders[header] = value;\n        }\n    },\n\n    setStatus: function setStatus(status) {\n        var sanitizedStatus = typeof status === \"number\" ? status : 200;\n\n        verifyRequestOpened(this);\n        this.status = sanitizedStatus;\n        this.statusText = FakeXMLHttpRequest.statusCodes[sanitizedStatus];\n    },\n\n    // Helps testing\n    setResponseHeaders: function setResponseHeaders(headers) {\n        verifyRequestOpened(this);\n\n        var responseHeaders = this.responseHeaders = {};\n\n        Object.keys(headers).forEach(function (header) {\n            responseHeaders[header] = headers[header];\n        });\n\n        if (this.async) {\n            this.readyStateChange(FakeXMLHttpRequest.HEADERS_RECEIVED);\n        } else {\n            this.readyState = FakeXMLHttpRequest.HEADERS_RECEIVED;\n        }\n    },\n\n    // Currently treats ALL data as a DOMString (i.e. no Document)\n    send: function send(data) {\n        verifyState(this);\n\n        if (!/^(head)$/i.test(this.method)) {\n            var contentType = getHeader(this.requestHeaders, \"Content-Type\");\n            if (this.requestHeaders[contentType]) {\n                var value = this.requestHeaders[contentType].split(\";\");\n                this.requestHeaders[contentType] = value[0] + \";charset=utf-8\";\n            } else if (supportsFormData && !(data instanceof FormData)) {\n                this.requestHeaders[\"Content-Type\"] = \"text/plain;charset=utf-8\";\n            }\n\n            this.requestBody = data;\n        }\n\n        this.errorFlag = false;\n        this.sendFlag = this.async;\n        clearResponse(this);\n        this.readyStateChange(FakeXMLHttpRequest.OPENED);\n\n        if (typeof this.onSend === \"function\") {\n            this.onSend(this);\n        }\n\n        this.dispatchEvent(new sinonEvent.Event(\"loadstart\", false, false, this));\n    },\n\n    abort: function abort() {\n        this.aborted = true;\n        clearResponse(this);\n        this.errorFlag = true;\n        this.requestHeaders = {};\n        this.responseHeaders = {};\n\n        if (this.readyState !== FakeXMLHttpRequest.UNSENT && this.sendFlag\n            && this.readyState !== FakeXMLHttpRequest.DONE) {\n            this.readyStateChange(FakeXMLHttpRequest.DONE);\n            this.sendFlag = false;\n        }\n\n        this.readyState = FakeXMLHttpRequest.UNSENT;\n    },\n\n    error: function () {\n        clearResponse(this);\n        this.errorFlag = true;\n        this.requestHeaders = {};\n        this.responseHeaders = {};\n\n        this.readyStateChange(FakeXMLHttpRequest.DONE);\n    },\n\n    getResponseHeader: function getResponseHeader(header) {\n        if (this.readyState < FakeXMLHttpRequest.HEADERS_RECEIVED) {\n            return null;\n        }\n\n        if (/^Set-Cookie2?$/i.test(header)) {\n            return null;\n        }\n\n        header = getHeader(this.responseHeaders, header);\n\n        return this.responseHeaders[header] || null;\n    },\n\n    getAllResponseHeaders: function getAllResponseHeaders() {\n        if (this.readyState < FakeXMLHttpRequest.HEADERS_RECEIVED) {\n            return \"\";\n        }\n\n        var responseHeaders = this.responseHeaders;\n        var headers = Object.keys(responseHeaders)\n            .filter(excludeSetCookie2Header)\n            .reduce(function (prev, header) {\n                var value = responseHeaders[header];\n\n                return prev + (header + \": \" + value + \"\\r\\n\");\n            }, \"\");\n\n        return headers;\n    },\n\n    setResponseBody: function setResponseBody(body) {\n        verifyRequestSent(this);\n        verifyHeadersReceived(this);\n        verifyResponseBodyType(body);\n        var contentType = this.overriddenMimeType || this.getResponseHeader(\"Content-Type\");\n\n        var isTextResponse = this.responseType === \"\" || this.responseType === \"text\";\n        clearResponse(this);\n        if (this.async) {\n            var chunkSize = this.chunkSize || 10;\n            var index = 0;\n\n            do {\n                this.readyStateChange(FakeXMLHttpRequest.LOADING);\n\n                if (isTextResponse) {\n                    this.responseText = this.response += body.substring(index, index + chunkSize);\n                }\n                index += chunkSize;\n            } while (index < body.length);\n        }\n\n        this.response = convertResponseBody(this.responseType, contentType, body);\n        if (isTextResponse) {\n            this.responseText = this.response;\n        }\n\n        if (this.responseType === \"document\") {\n            this.responseXML = this.response;\n        } else if (this.responseType === \"\" && isXmlContentType(contentType)) {\n            this.responseXML = FakeXMLHttpRequest.parseXML(this.responseText);\n        }\n        this.readyStateChange(FakeXMLHttpRequest.DONE);\n    },\n\n    respond: function respond(status, headers, body) {\n        this.setStatus(status);\n        this.setResponseHeaders(headers || {});\n        this.setResponseBody(body || \"\");\n    },\n\n    uploadProgress: function uploadProgress(progressEventRaw) {\n        if (supportsProgress) {\n            this.upload.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progressEventRaw));\n        }\n    },\n\n    downloadProgress: function downloadProgress(progressEventRaw) {\n        if (supportsProgress) {\n            this.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progressEventRaw));\n        }\n    },\n\n    uploadError: function uploadError(error) {\n        if (supportsCustomEvent) {\n            this.upload.dispatchEvent(new sinonEvent.CustomEvent(\"error\", {detail: error}));\n        }\n    },\n\n    overrideMimeType: function overrideMimeType(type) {\n        if (this.readyState >= FakeXMLHttpRequest.LOADING) {\n            throw new Error(\"INVALID_STATE_ERR\");\n        }\n        this.overriddenMimeType = type;\n    }\n});\n\nvar states = {\n    UNSENT: 0,\n    OPENED: 1,\n    HEADERS_RECEIVED: 2,\n    LOADING: 3,\n    DONE: 4\n};\n\nextend(FakeXMLHttpRequest, states);\nextend(FakeXMLHttpRequest.prototype, states);\n\nfunction useFakeXMLHttpRequest() {\n    FakeXMLHttpRequest.restore = function restore(keepOnCreate) {\n        if (sinonXhr.supportsXHR) {\n            global.XMLHttpRequest = sinonXhr.GlobalXMLHttpRequest;\n        }\n\n        if (sinonXhr.supportsActiveX) {\n            global.ActiveXObject = sinonXhr.GlobalActiveXObject;\n        }\n\n        delete FakeXMLHttpRequest.restore;\n\n        if (keepOnCreate !== true) {\n            delete FakeXMLHttpRequest.onCreate;\n        }\n    };\n    if (sinonXhr.supportsXHR) {\n        global.XMLHttpRequest = FakeXMLHttpRequest;\n    }\n\n    if (sinonXhr.supportsActiveX) {\n        global.ActiveXObject = function ActiveXObject(objId) {\n            if (objId === \"Microsoft.XMLHTTP\" || /^Msxml2\\.XMLHTTP/i.test(objId)) {\n\n                return new FakeXMLHttpRequest();\n            }\n\n            return new sinonXhr.GlobalActiveXObject(objId);\n        };\n    }\n\n    return FakeXMLHttpRequest;\n}\n\nmodule.exports = {\n    xhr: sinonXhr,\n    FakeXMLHttpRequest: FakeXMLHttpRequest,\n    useFakeXMLHttpRequest: useFakeXMLHttpRequest\n};\n"]},"metadata":{},"sourceType":"script"}