{"ast":null,"code":"var _jsxFileName = \"/home/hoss/my App/my-app/src/components/Cover/Cover.js\";\nimport { StyledCover } from './Cover.styled';\nimport React, { Component } from 'react';\nimport InnerCover from './InnerCover';\nexport class Cover extends Component {\n  constructor(props) {\n    super(props);\n\n    this.remove = () => {\n      clearInterval(this.intervalID);\n    };\n\n    this.removetitle = () => {\n      clearInterval(this.intervalTITLE);\n    };\n\n    this.removertitle = () => {\n      clearInterval(this.intervalRTITLE);\n    };\n\n    this.removeplayer = () => {\n      clearInterval(this.intervalPlayer);\n    };\n\n    this.play = () => {\n      this.setState({\n        play: !this.state.play,\n        ready: false\n      });\n    };\n\n    this.muted = () => {\n      this.setState(state => ({\n        muted: !state.muted\n      }));\n    };\n\n    this.handleDuration = duration => {\n      this.setState({\n        duration\n      });\n    };\n\n    this.ready = () => {\n      this.setState({\n        ready: true\n      });\n    };\n\n    this.pause = () => {\n      this.setState(state => ({\n        pause: !state.pause\n      }));\n    };\n\n    this.shoot = () => {\n      console.log(\"shoot\");\n    };\n\n    this.play = this.play.bind(this);\n    this.state = {\n      play: false,\n      textIndex: 0,\n      titletime: false,\n      player: false,\n      helpplayer: false,\n      muted: false\n    };\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => {\n      this.setState({\n        textIndex: this.state.textIndex + 1\n      });\n    }, 9900);\n    this.intervalTITLE = setInterval(() => {\n      this.setState({\n        titletime: true\n      });\n    }, 2000);\n    this.intervalRTITLE = setInterval(() => {\n      this.setState({\n        titletime: false\n      });\n    }, 8000);\n    this.intervalPlayer = setInterval(() => {\n      this.setState({\n        player: true\n      });\n    }, 10000);\n    this.intervalHelpPlayer = setInterval(() => {\n      this.setState({\n        helpplayer: true\n      });\n    }, 12000);\n    setInterval(this.remove);\n    setInterval(this.removetitle, 6000);\n    setInterval(this.removertitle, 17000);\n  }\n\n  switchImage() {\n    if (this.state.currentImage < this.state.images.length - 1) {\n      this.setState({\n        currentImage: this.state.currentImage + 1,\n        ready: false,\n        pause: true\n      });\n    } else {\n      this.setState({\n        currentImage: 0,\n        ready: false,\n        pause: true\n      });\n    }\n\n    return this.currentImage;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(StyledCover, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InnerCover, {\n      textIndex: this.state.textIndex,\n      titletime: this.state.titletime,\n      helpplayer: this.state.helpplayer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InnerCover, {\n      currentImage: this.state.currentImage,\n      playing: this.play,\n      play: this.state.play,\n      back: this.state.back,\n      textIndex: this.state.textIndex,\n      titletime: this.state.titletime,\n      player: this.state.player,\n      helpplayer: this.state.helpplayer,\n      duration: this.state.duration,\n      ready: this.state.ready,\n      muted: this.state.muted,\n      pause: this.state.pause,\n      images: this.state.images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    })));\n  }\n\n}\nexport default Cover;","map":{"version":3,"sources":["/home/hoss/my App/my-app/src/components/Cover/Cover.js"],"names":["StyledCover","React","Component","InnerCover","Cover","constructor","props","remove","clearInterval","intervalID","removetitle","intervalTITLE","removertitle","intervalRTITLE","removeplayer","intervalPlayer","play","setState","state","ready","muted","handleDuration","duration","pause","shoot","console","log","bind","textIndex","titletime","player","helpplayer","componentDidMount","setInterval","intervalHelpPlayer","switchImage","currentImage","images","length","render","back"],"mappings":"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","sourcesContent":["import { StyledCover } from './Cover.styled';\nimport React, { Component } from 'react';\n\nimport InnerCover from './InnerCover'\n\nexport class Cover extends Component {\n  \n    constructor(props) {\n        super(props);\n  \n        this.play = this.play.bind(this);\n        \n        this.state = {\n         \n          play:false,\n          \n          textIndex: 0,\n          titletime :false,\n          player : false,\n          helpplayer:false,\n         \n          muted:false,\n          \n        };\n      }\n      remove = () => { \n        clearInterval(this.intervalID)\n      }\n      removetitle = () => { \n        clearInterval(this.intervalTITLE)\n      }\n      removertitle = () => { \n        clearInterval(this.intervalRTITLE)\n      }\n      removeplayer = () => {\n        clearInterval(this.intervalPlayer)\n      }\n       \n    componentDidMount() {\n    \n        this.intervalID = setInterval(() => {\n        this.setState({\n            textIndex: this.state.textIndex + 1,\n        });\n        }, 9900);\n        this.intervalTITLE = setInterval(() => {this.setState({\n          titletime: true\n        }); }, 2000);\n        this.intervalRTITLE = setInterval(() => {this.setState({\n          titletime: false\n        }); }, 8000);\n        this.intervalPlayer = setInterval(() => {this.setState({\n          player: true\n        }); }, 10000);\n        this.intervalHelpPlayer = setInterval(() => {this.setState({\n          helpplayer: true\n        }); }, 12000);\n        \n        setInterval (this.remove);\n        setInterval (this.removetitle, 6000);\n        setInterval (this.removertitle, 17000);\n\n    }\n\n\n\n\n  switchImage() {\n        \n    if (this.state.currentImage < this.state.images.length - 1 ) {\n      this.setState({\n        currentImage: this.state.currentImage + 1,\n        ready:false,\n        pause:true\n            })\n    } else {\n      this.setState({\n        currentImage: 0,\n        ready:false,\n        pause:true\n      });\n    }\n    return this.currentImage;\n  }\n    \n   \n    play = () => {\n  this.setState({\n    play: !this.state.play,\n    ready: false\n  })\n  }\n\n  muted = () => {\n    this.setState(state => ({\n      muted: !state.muted\n    }))\n    }\n\n  handleDuration = (duration) => {\n    \n    this.setState({ duration })\n  }\n      \nready = () => {\n  this.setState ({\n    ready:true\n  })\n}\npause = () => {\n  this.setState(state => ({\n    pause: !state.pause\n  }))\n  }\n  shoot = ( ) => {\n    console.log(\"shoot\")\n  }\n    render() {\n        return (\n          \n        <StyledCover >\n        \n     \n      \n      <InnerCover\n          textIndex= {this.state.textIndex}\n          titletime ={this.state.titletime}\n    \n          helpplayer={this.state.helpplayer}\n\n          />\n         \n      \n      <React.Fragment>\n       \n      \n      \n      <InnerCover \n      \n      currentImage={this.state.currentImage}\n      playing={this.play}\n          play={this.state.play}\n          back={this.state.back}\n          textIndex= {this.state.textIndex}\n          titletime ={this.state.titletime}\n          player = {this.state.player}\n          helpplayer={this.state.helpplayer}\n          duration= {this.state.duration}\n          ready= {this.state.ready}\n          muted={this.state.muted}\n          pause={this.state.pause}\n          images={this.state.images}\n          />\n          \n          </React.Fragment>\n        \n        </StyledCover>\n        )\n  \n        \n    }\n}\n\nexport default Cover\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}