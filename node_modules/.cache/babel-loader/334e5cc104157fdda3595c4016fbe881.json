{"ast":null,"code":"var Readable = require('stream').Readable;\n\nvar Writable = require('stream').Writable;\n\nvar Duplex = require('stream').Duplex;\n\nvar hashish = require('hashish');\n/**\n * Proxy some events from underlying readable and writable streams.\n */\n\n\nvar SOURCE_EVENTS = ['error', 'close'];\nvar DEST_EVENTS = ['drain', 'close'];\n/**\n * Creates property to use with `Object.create()`\n *\n * @param {Object} value\n * @return {Object}\n */\n\nfunction prop(value) {\n  return {\n    writable: true,\n    enumerable: true,\n    configurable: true,\n    value: value\n  };\n}\n/**\n * @constructor\n * @param {Object} options\n *   {Object} superCtor\n *   {Boolean} readable\n *   {Boolean} writable\n * @return {Duplex}\n */\n\n\nvar Streamify = module.exports = function Streamify(options) {\n  options = options || {};\n  options.readable = typeof options.readable !== 'undefined' ? options.readable : true;\n  options.writable = typeof options.writable !== 'undefined' ? options.writable : true;\n  var superCtor = getConstructor(options); // Add `Streamify.prototype` methods.\n\n  var properties = hashish.map(Streamify.prototype, prop);\n  var o = Object.create(superCtor.prototype, properties);\n  superCtor.call(o);\n  o.readable = options.readable;\n  o.writable = options.writable;\n  o.__options = options;\n\n  o._onevent = function onevent() {};\n\n  o._destWritten = [];\n\n  if (options.writable) {\n    o.once('finish', function () {\n      if (o._dest) {\n        o._dest.stream.end();\n      }\n    });\n  }\n\n  return o;\n};\n/**\n * Required implementation by streaming API.\n *\n * @param {Number} size\n */\n\n\nStreamify.prototype._read = function (size) {\n  if (this._source) {\n    var self = this;\n\n    var onreadable = this._source.onreadable = function onreadable() {\n      if (!self._source) {\n        return;\n      }\n\n      var data = self._source.stream.read(size);\n\n      if (data) {\n        self.push(data);\n      } else {\n        self._source.stream.once('readable', onreadable);\n      }\n    };\n\n    onreadable();\n  } else {\n    this._sourceRead = size;\n  }\n};\n/**\n * Required implementation by streaming API.\n *\n * @param {Buffer|String} chunk\n * @param {!String} encoding\n * @param {Function(!Error)} callback\n */\n\n\nStreamify.prototype._write = function (chunk, encoding, callback) {\n  if (this._dest) {\n    this._dest.stream.write(chunk, encoding, callback);\n  } else {\n    this._destWritten.push(arguments);\n  }\n};\n/**\n * Add a stream to be the readable stream source.\n *\n * @param {Readable|Stream} stream\n */\n\n\nStreamify.prototype.addSource = function (stream) {\n  if (this._source) {\n    throw Error('A source stream has already been added.');\n  }\n\n  stream = getReadable(stream);\n  this._source = {\n    stream: stream,\n    listeners: {},\n    onend: onend\n  };\n  var self = this;\n  SOURCE_EVENTS.forEach(function (event) {\n    var onevent = self._source.listeners[event] = function onevent() {\n      var args = Array.prototype.slice.call(arguments);\n      self.emit.apply(self, [event].concat(args));\n    };\n\n    stream.on(event, onevent);\n  }); // Listen for `end` event to signal for end of data.\n\n  function onend() {\n    self.push(null);\n  }\n\n  stream.on('end', onend); // Check if `Readable#_read()` has already been called.\n\n  this._read(this._sourceRead);\n};\n/**\n * Remove a stream from being the source.\n */\n\n\nStreamify.prototype.removeSource = function () {\n  if (!this._source) {\n    throw Error('A source stream has not been added.');\n  }\n\n  var source = this._source;\n  SOURCE_EVENTS.forEach(function (event) {\n    source.stream.removeListener(event, source.listeners[event]);\n  });\n  source.stream.removeListener('readable', source.onreadable);\n  source.stream.removeListener('end', source.onend);\n  delete this._source;\n};\n/**\n * Add a stream to be the writable stream destination.\n *\n * @param {Writable|Stream} stream\n */\n\n\nStreamify.prototype.addDest = function (stream) {\n  if (this._dest) {\n    throw Error('A destination stream has already been added.');\n  }\n\n  this._dest = {\n    stream: stream,\n    listeners: {}\n  };\n  var self = this;\n  DEST_EVENTS.forEach(function (event) {\n    var onevent = self._dest.listeners[event] = function onevent() {\n      var args = Array.prototype.slice.call(arguments);\n      self.emit.apply(self, [event].concat(args));\n    };\n\n    stream.on(event, onevent);\n  });\n\n  if (this._destWritten.length) {\n    this._destWritten.forEach(function (args) {\n      stream.write.apply(stream, args);\n    });\n  }\n};\n/**\n * Remove a stream from being the destination.\n */\n\n\nStreamify.prototype.removeDest = function () {\n  if (!this._dest) {\n    throw Error('A destination stream has not been added.');\n  }\n\n  var dest = this._dest;\n  DEST_EVENTS.forEach(function (event) {\n    dest.stream.removeListener(event, dest.listeners[event]);\n  });\n  delete this._dest;\n  this._destWritten = [];\n};\n/**\n * Begins fueling data from actual stream into Streamify instance.\n *\n * @param {Readable|Writable|Duplex|Stream} stream\n */\n\n\nStreamify.prototype.resolve = function (stream) {\n  if (this.__options.readable && stream.readable) {\n    this.addSource(stream);\n  }\n\n  if (this.__options.writable && stream.writable) {\n    this.addDest(stream);\n  }\n};\n/**\n * Removes a stream from this, possibly because another is replacing it.\n */\n\n\nStreamify.prototype.unresolve = function () {\n  if (this._source) {\n    this.removeSource();\n  }\n\n  if (this._dest) {\n    this.removeDest();\n  }\n};\n/**\n * Returns a readable new stream API stream if the stream is using the\n * old API. Otherwise it returns the same stream.\n *\n * @param {Readable|Stream} stream\n * @return {Readable}\n */\n\n\nfunction getReadable(stream) {\n  if (isOldStyleStream(stream)) {\n    var readable = new Readable();\n    readable.wrap(stream);\n    return readable;\n  } else {\n    return stream;\n  }\n}\n/**\n * Returns true if a stream is an old style API stream.\n *\n * @param {Readable|Stream} stream\n * @return {Boolean}\n */\n\n\nfunction isOldStyleStream(stream) {\n  return typeof stream.read !== 'function' || typeof stream._read !== 'function' || typeof stream.push !== 'function' || typeof stream.unshift !== 'function' || typeof stream.wrap !== 'function';\n}\n\nfunction getConstructor(options) {\n  var superCtor = Duplex;\n\n  if (options.readable && !options.writable) {\n    superCtor = Readable;\n  }\n\n  if (options.writable && !options.readable) {\n    superCtor = Writable;\n  }\n\n  return superCtor;\n}","map":{"version":3,"sources":["/home/hoss/my App/my-app/node_modules/streamify/lib/index.js"],"names":["Readable","require","Writable","Duplex","hashish","SOURCE_EVENTS","DEST_EVENTS","prop","value","writable","enumerable","configurable","Streamify","module","exports","options","readable","superCtor","getConstructor","properties","map","prototype","o","Object","create","call","__options","_onevent","onevent","_destWritten","once","_dest","stream","end","_read","size","_source","self","onreadable","data","read","push","_sourceRead","_write","chunk","encoding","callback","write","arguments","addSource","Error","getReadable","listeners","onend","forEach","event","args","Array","slice","emit","apply","concat","on","removeSource","source","removeListener","addDest","length","removeDest","dest","resolve","unresolve","isOldStyleStream","wrap","unshift"],"mappings":"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","sourcesContent":["var Readable = require('stream').Readable;\nvar Writable = require('stream').Writable;\nvar Duplex  = require('stream').Duplex;\nvar hashish = require('hashish');\n\n\n/**\n * Proxy some events from underlying readable and writable streams.\n */\nvar SOURCE_EVENTS = ['error', 'close'];\nvar DEST_EVENTS = ['drain', 'close'];\n\n\n/**\n * Creates property to use with `Object.create()`\n *\n * @param {Object} value\n * @return {Object}\n */\nfunction prop(value) {\n  return {\n    writable: true,\n    enumerable: true,\n    configurable: true,\n    value: value\n  };\n}\n\n\n/**\n * @constructor\n * @param {Object} options\n *   {Object} superCtor\n *   {Boolean} readable\n *   {Boolean} writable\n * @return {Duplex}\n */\nvar Streamify = module.exports = function Streamify(options) {\n  options = options || {};\n  options.readable = typeof options.readable !== 'undefined' ?\n    options.readable : true;\n  options.writable = typeof options.writable !== 'undefined' ?\n    options.writable : true;\n\n  var superCtor = getConstructor(options);\n\n  // Add `Streamify.prototype` methods.\n  var properties = hashish.map(Streamify.prototype, prop);\n\n  var o = Object.create(superCtor.prototype, properties);\n  superCtor.call(o);\n  o.readable = options.readable;\n  o.writable = options.writable;\n  o.__options = options;\n  o._onevent = function onevent() {\n  };\n  o._destWritten = [];\n\n  if (options.writable) {\n    o.once('finish', function() {\n      if (o._dest) {\n        o._dest.stream.end();\n      }\n    });\n  }\n  return o;\n};\n\n\n/**\n * Required implementation by streaming API.\n *\n * @param {Number} size\n */\nStreamify.prototype._read = function(size) {\n  if (this._source) {\n    var self = this;\n    var onreadable = this._source.onreadable = function onreadable() {\n      if (!self._source) { return; }\n      var data = self._source.stream.read(size);\n      if (data) {\n        self.push(data);\n      } else {\n        self._source.stream.once('readable', onreadable);\n      }\n    };\n    onreadable();\n\n  } else {\n    this._sourceRead = size;\n  }\n};\n\n\n/**\n * Required implementation by streaming API.\n *\n * @param {Buffer|String} chunk\n * @param {!String} encoding\n * @param {Function(!Error)} callback\n */\nStreamify.prototype._write = function(chunk, encoding, callback) {\n  if (this._dest) {\n    this._dest.stream.write(chunk, encoding, callback);\n  } else {\n    this._destWritten.push(arguments);\n  }\n};\n\n\n/**\n * Add a stream to be the readable stream source.\n *\n * @param {Readable|Stream} stream\n */\nStreamify.prototype.addSource = function(stream) {\n  if (this._source) {\n    throw Error('A source stream has already been added.');\n  }\n  stream = getReadable(stream);\n\n  this._source = { stream: stream, listeners: {}, onend: onend };\n  var self = this;\n\n  SOURCE_EVENTS.forEach(function(event) {\n    var onevent = self._source.listeners[event] = function onevent() {\n      var args = Array.prototype.slice.call(arguments);\n      self.emit.apply(self, [event].concat(args));\n    };\n    stream.on(event, onevent);\n  });\n\n  // Listen for `end` event to signal for end of data.\n  function onend() {\n    self.push(null);\n  }\n  stream.on('end', onend);\n\n  // Check if `Readable#_read()` has already been called.\n  this._read(this._sourceRead);\n};\n\n\n/**\n * Remove a stream from being the source.\n */\nStreamify.prototype.removeSource = function() {\n  if (!this._source) {\n    throw Error('A source stream has not been added.');\n  }\n\n  var source = this._source;\n  SOURCE_EVENTS.forEach(function(event) {\n    source.stream.removeListener(event, source.listeners[event]);\n  });\n  source.stream.removeListener('readable', source.onreadable);\n  source.stream.removeListener('end', source.onend);\n\n  delete this._source;\n};\n\n\n/**\n * Add a stream to be the writable stream destination.\n *\n * @param {Writable|Stream} stream\n */\nStreamify.prototype.addDest = function(stream) {\n  if (this._dest) {\n    throw Error('A destination stream has already been added.');\n  }\n\n  this._dest = { stream: stream, listeners: {} };\n  var self = this;\n\n  DEST_EVENTS.forEach(function(event) {\n    var onevent = self._dest.listeners[event] = function onevent() {\n      var args = Array.prototype.slice.call(arguments);\n      self.emit.apply(self, [event].concat(args));\n    };\n    stream.on(event, onevent);\n  });\n\n  if (this._destWritten.length) {\n    this._destWritten.forEach(function(args) {\n      stream.write.apply(stream, args);\n    });\n  }\n};\n\n\n/**\n * Remove a stream from being the destination.\n */\nStreamify.prototype.removeDest = function() {\n  if (!this._dest) {\n    throw Error('A destination stream has not been added.');\n  }\n\n  var dest = this._dest;\n  DEST_EVENTS.forEach(function(event) {\n    dest.stream.removeListener(event, dest.listeners[event]);\n  });\n\n  delete this._dest;\n  this._destWritten = [];\n};\n\n\n/**\n * Begins fueling data from actual stream into Streamify instance.\n *\n * @param {Readable|Writable|Duplex|Stream} stream\n */\nStreamify.prototype.resolve = function(stream) {\n  if (this.__options.readable && stream.readable) {\n    this.addSource(stream);\n  }\n\n  if (this.__options.writable && stream.writable) {\n    this.addDest(stream);\n  }\n};\n\n\n/**\n * Removes a stream from this, possibly because another is replacing it.\n */\nStreamify.prototype.unresolve = function() {\n  if (this._source) {\n    this.removeSource();\n  }\n\n  if (this._dest) {\n    this.removeDest();\n  }\n};\n\n\n/**\n * Returns a readable new stream API stream if the stream is using the\n * old API. Otherwise it returns the same stream.\n *\n * @param {Readable|Stream} stream\n * @return {Readable}\n */\nfunction getReadable(stream) {\n  if (isOldStyleStream(stream)) {\n    var readable = new Readable();\n    readable.wrap(stream);\n    return readable;\n  } else {\n    return stream;\n  }\n}\n\n\n/**\n * Returns true if a stream is an old style API stream.\n *\n * @param {Readable|Stream} stream\n * @return {Boolean}\n */\nfunction isOldStyleStream(stream) {\n  return typeof stream.read !== 'function' ||\n    typeof stream._read !== 'function' ||\n    typeof stream.push !== 'function' ||\n    typeof stream.unshift !== 'function' ||\n    typeof stream.wrap !== 'function';\n}\n\n\nfunction getConstructor (options) {\n  var superCtor = Duplex;\n  if (options.readable && !options.writable) {\n    superCtor = Readable;\n  }\n\n  if (options.writable && !options.readable) {\n    superCtor = Writable;\n  }\n\n  return superCtor;\n}"]},"metadata":{},"sourceType":"script"}