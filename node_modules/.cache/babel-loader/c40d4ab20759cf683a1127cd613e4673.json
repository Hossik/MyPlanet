{"ast":null,"code":"\"use strict\"; // cache a reference to setTimeout, so that our reference won't be stubbed out\n// when using fake timers and errors will still get logged\n// https://github.com/cjohansen/Sinon.JS/issues/381\n\nvar realSetTimeout = setTimeout;\n\nfunction configure(config) {\n  config = config || {}; // Function which prints errors.\n\n  if (!config.hasOwnProperty(\"logger\")) {\n    config.logger = function () {};\n  } // When set to true, any errors logged will be thrown immediately;\n  // If set to false, the errors will be thrown in separate execution frame.\n\n\n  if (!config.hasOwnProperty(\"useImmediateExceptions\")) {\n    config.useImmediateExceptions = true;\n  } // wrap realSetTimeout with something we can stub in tests\n\n\n  if (!config.hasOwnProperty(\"setTimeout\")) {\n    config.setTimeout = realSetTimeout;\n  }\n\n  return function logError(label, e) {\n    var msg = label + \" threw exception: \";\n    var err = {\n      name: e.name || label,\n      message: e.message || e.toString(),\n      stack: e.stack\n    };\n\n    function throwLoggedError() {\n      err.message = msg + err.message;\n      throw err;\n    }\n\n    config.logger(msg + \"[\" + err.name + \"] \" + err.message);\n\n    if (err.stack) {\n      config.logger(err.stack);\n    }\n\n    if (config.useImmediateExceptions) {\n      throwLoggedError();\n    } else {\n      config.setTimeout(throwLoggedError, 0);\n    }\n  };\n}\n\nmodule.exports = configure;","map":{"version":3,"sources":["/home/hoss/my App/my-app/node_modules/sinon/lib/sinon/util/core/log_error.js"],"names":["realSetTimeout","setTimeout","configure","config","hasOwnProperty","logger","useImmediateExceptions","logError","label","e","msg","err","name","message","toString","stack","throwLoggedError","module","exports"],"mappings":"AAAA,a,CAEA;AACA;AACA;;AACA,IAAIA,cAAc,GAAGC,UAArB;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AACvBA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB,CADuB,CAEvB;;AACA,MAAI,CAACA,MAAM,CAACC,cAAP,CAAsB,QAAtB,CAAL,EAAsC;AAClCD,IAAAA,MAAM,CAACE,MAAP,GAAgB,YAAY,CAAG,CAA/B;AACH,GALsB,CAMvB;AACA;;;AACA,MAAI,CAACF,MAAM,CAACC,cAAP,CAAsB,wBAAtB,CAAL,EAAsD;AAClDD,IAAAA,MAAM,CAACG,sBAAP,GAAgC,IAAhC;AACH,GAVsB,CAWvB;;;AACA,MAAI,CAACH,MAAM,CAACC,cAAP,CAAsB,YAAtB,CAAL,EAA0C;AACtCD,IAAAA,MAAM,CAACF,UAAP,GAAoBD,cAApB;AACH;;AAED,SAAO,SAASO,QAAT,CAAkBC,KAAlB,EAAyBC,CAAzB,EAA4B;AAC/B,QAAIC,GAAG,GAAGF,KAAK,GAAG,oBAAlB;AACA,QAAIG,GAAG,GAAG;AAAEC,MAAAA,IAAI,EAAEH,CAAC,CAACG,IAAF,IAAUJ,KAAlB;AAAyBK,MAAAA,OAAO,EAAEJ,CAAC,CAACI,OAAF,IAAaJ,CAAC,CAACK,QAAF,EAA/C;AAA6DC,MAAAA,KAAK,EAAEN,CAAC,CAACM;AAAtE,KAAV;;AAEA,aAASC,gBAAT,GAA4B;AACxBL,MAAAA,GAAG,CAACE,OAAJ,GAAcH,GAAG,GAAGC,GAAG,CAACE,OAAxB;AACA,YAAMF,GAAN;AACH;;AAEDR,IAAAA,MAAM,CAACE,MAAP,CAAcK,GAAG,GAAG,GAAN,GAAYC,GAAG,CAACC,IAAhB,GAAuB,IAAvB,GAA8BD,GAAG,CAACE,OAAhD;;AAEA,QAAIF,GAAG,CAACI,KAAR,EAAe;AACXZ,MAAAA,MAAM,CAACE,MAAP,CAAcM,GAAG,CAACI,KAAlB;AACH;;AAED,QAAIZ,MAAM,CAACG,sBAAX,EAAmC;AAC/BU,MAAAA,gBAAgB;AACnB,KAFD,MAEO;AACHb,MAAAA,MAAM,CAACF,UAAP,CAAkBe,gBAAlB,EAAoC,CAApC;AACH;AACJ,GApBD;AAqBH;;AAEDC,MAAM,CAACC,OAAP,GAAiBhB,SAAjB","sourcesContent":["\"use strict\";\n\n// cache a reference to setTimeout, so that our reference won't be stubbed out\n// when using fake timers and errors will still get logged\n// https://github.com/cjohansen/Sinon.JS/issues/381\nvar realSetTimeout = setTimeout;\n\nfunction configure(config) {\n    config = config || {};\n    // Function which prints errors.\n    if (!config.hasOwnProperty(\"logger\")) {\n        config.logger = function () { };\n    }\n    // When set to true, any errors logged will be thrown immediately;\n    // If set to false, the errors will be thrown in separate execution frame.\n    if (!config.hasOwnProperty(\"useImmediateExceptions\")) {\n        config.useImmediateExceptions = true;\n    }\n    // wrap realSetTimeout with something we can stub in tests\n    if (!config.hasOwnProperty(\"setTimeout\")) {\n        config.setTimeout = realSetTimeout;\n    }\n\n    return function logError(label, e) {\n        var msg = label + \" threw exception: \";\n        var err = { name: e.name || label, message: e.message || e.toString(), stack: e.stack };\n\n        function throwLoggedError() {\n            err.message = msg + err.message;\n            throw err;\n        }\n\n        config.logger(msg + \"[\" + err.name + \"] \" + err.message);\n\n        if (err.stack) {\n            config.logger(err.stack);\n        }\n\n        if (config.useImmediateExceptions) {\n            throwLoggedError();\n        } else {\n            config.setTimeout(throwLoggedError, 0);\n        }\n    };\n}\n\nmodule.exports = configure;\n"]},"metadata":{},"sourceType":"script"}