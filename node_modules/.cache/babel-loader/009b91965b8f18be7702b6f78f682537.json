{"ast":null,"code":"'use strict';\n\nconst execFile = require('child_process').execFile;\n\nconst streamify = require('streamify');\n\nconst request = require('request');\n\nconst hms = require('hh-mm-ss');\n\nconst path = require('path');\n\nconst http = require('http');\n\nconst url = require('url');\n\nconst fs = require('fs');\n\nconst util = require('./util');\n\nconst TEN_MEGABYTES = 1000 * 1000 * 10;\nconst execFileOpts = {\n  maxBuffer: TEN_MEGABYTES\n};\nconst detailsPath = path.join(__dirname, '..', 'bin/details');\n\nconst ytdlBinary = (() => {\n  if (fs.existsSync(detailsPath)) {\n    const details = JSON.parse(fs.readFileSync(detailsPath));\n    return details.path ? details.path : path.resolve(__dirname, '..', 'bin', details.exec);\n  }\n\n  if (!fs.existsSync(ytdlBinary)) {\n    console.error('ERROR: unable to locate youtube-dl details in ' + path.dirname(ytdlBinary));\n    process.exit(1);\n  }\n})();\n\nconst isWin = process.platform === 'win32' || process.env.NODE_PLATFORM === 'windows' ? true : false;\nconst isDebug = /^\\[debug\\] /;\nconst isWarning = /^WARNING: /;\nconst isYouTubeRegex = /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)\\//;\nconst isNoSubsRegex = /WARNING: video doesn't have subtitles|no closed captions found/;\nconst videoNotAvailable = new RegExp('This video is not available|' + 'This video has been removed by the user|' + 'Please sign in to view this video|' + 'This video is no longer available|' + 'The uploader has not made this video available|' + 'This video contains content from');\nconst subsRegex = /--write-sub|--write-srt|--srt-lang|--all-subs/;\n\nfunction youtubeDl(args, options, callback) {\n  let passOver = false;\n  execFile(ytdlBinary, args, { ...execFileOpts,\n    ...options\n  }, function done(err, stdout, stderr) {\n    if (err) {\n      if (videoNotAvailable.test(err.message)) passOver = true;\n      if (!passOver) return callback(err);\n    }\n\n    if (stderr && !passOver) {\n      // Try once to download video if no subtitles available\n      if (!options.nosubs && isNoSubsRegex.test(stderr)) {\n        let i;\n        let cleanupOpt = args2;\n\n        for (i = cleanupOpt.length - 1; i >= 0; i--) {\n          if (subsRegex.test(cleanupOpt[i])) {\n            cleanupOpt.splice(i, 1);\n          }\n        }\n\n        options.nosubs = true;\n        return call(video, args1, cleanupOpt, options, callback);\n      }\n\n      if (isDebug.test(stderr) && args.indexOf('--verbose') > -1) {\n        console.log('\\n' + stderr);\n      } else if (isWarning.test(stderr)) {\n        console.warn(stderr);\n      } else {\n        return callback(new Error(stderr.slice(7)));\n      }\n    }\n\n    if (passOver && stdout === '' && urls.length > 1) {\n      urls.shift();\n      return call(urls, args1, args2, options, callback);\n    }\n\n    return callback(null, stdout.trim().split(/\\r?\\n/));\n  });\n}\n/**\n * Processes data\n *\n * @param {Object} data\n * @param {Object} options\n * @param {Object} stream\n */\n\n\nfunction processData(data, options, stream) {\n  const item = !data.length ? data : data.shift(); // fix for pause/resume downloads\n\n  const headers = {\n    'Host': url.parse(item.url).hostname\n  };\n  if (options && options.start > 0) headers.Range = 'bytes=' + options.start + '-';\n  const req = request({\n    url: item.url,\n    headers: headers\n  });\n  req.on('response', function response(res) {\n    const size = parseInt(res.headers['content-length'], 10);\n    if (size) item.size = size;\n\n    if (options && options.start > 0 && res.statusCode === 416) {\n      // the file that is being resumed is complete.\n      return stream.emit('complete', item);\n    }\n\n    if (res.statusCode !== 200 && res.statusCode !== 206) {\n      return stream.emit('error', new Error('status code ' + res.statusCode));\n    }\n\n    stream.emit('info', item);\n    stream.on('end', function end() {\n      if (data.length) stream.emit('next', data);\n    });\n  });\n  return stream.resolve(req);\n}\n/**\n * Downloads a video.\n *\n * @param {String} videoUrl\n * @param {!Array.<String>} args\n * @param {!Object} options\n */\n\n\nconst ytdl = module.exports = function (videoUrl, args, options) {\n  const stream = streamify({\n    superCtor: http.ClientResponse,\n    readable: true,\n    writable: false\n  });\n\n  if (typeof videoUrl !== 'string') {\n    processData(videoUrl, options, stream);\n    return stream;\n  }\n\n  ytdl.getInfo(videoUrl, args, options, function getInfo(err, data) {\n    return err ? stream.emit('error', err) : processData(data, options, stream);\n  });\n  return stream;\n};\n/**\n * Calls youtube-dl with some arguments and the `callback`\n * gets called with the output.\n *\n * @param {String|Array.<String>}\n * @param {Array.<String>} args\n * @param {Array.<String>} args2\n * @param {Object} options\n * @param {Function(!Error, String)} callback\n */\n\n\nfunction call(urls, args1, args2, options = {}, callback) {\n  let args = args1;\n  if (args2) args = args.concat(args2); // set encoding on windows to support unicode titles\n\n  if (isWin) {\n    // check if encoding is already set\n    let hasEncoding = false;\n\n    for (let i = 0; i < args.length; i++) {\n      if (args[i] === '--encoding') {\n        hasEncoding = true;\n        break;\n      }\n    }\n\n    if (!hasEncoding) {\n      args.push('--encoding');\n      args.push('utf8');\n    }\n  }\n\n  if (urls !== null) {\n    if (typeof urls === 'string') {\n      urls = [urls];\n    }\n\n    for (let i = 0; i < urls.length; i++) {\n      const video = urls[i];\n\n      if (isYouTubeRegex.test(video)) {\n        // Get possible IDs.\n        const details = url.parse(video, true);\n        let id = details.query.v || '';\n\n        if (id) {\n          args.push('http://www.youtube.com/watch?v=' + id);\n        } else {\n          // Get possible IDs for youtu.be from urladdr.\n          id = details.pathname.slice(1).replace(/^v\\//, '');\n\n          if (id) {\n            args.push(video);\n            args.unshift('-i');\n          }\n        }\n      } else {\n        if (i === 0) args.push('--');\n        args.push(video);\n      }\n    }\n  }\n\n  return youtubeDl(args, options, callback);\n}\n/**\n * Calls youtube-dl with some arguments and the `callback`\n * gets called with the output.\n *\n * @param {String} url\n * @param {Array.<String>} args\n * @param {Object} options\n * @param {Function(!Error, String)} callback\n */\n\n\nytdl.exec = function exec(url, args, options, callback) {\n  return call(url, [], args, options, callback);\n};\n/**\n * @param {Object} data\n * @returns {Object}\n */\n\n\nfunction parseInfo(data) {\n  const info = JSON.parse(data); // Add and process some entries to keep backwards compatibility\n\n  Object.defineProperty(info, 'filename', {\n    get: function get() {\n      console.warn('`info.filename` is deprecated, use `info._filename`');\n      return info._filename;\n    }\n  });\n  Object.defineProperty(info, 'itag', {\n    get: function get() {\n      console.warn('`info.itag` is deprecated, use `info.format_id`');\n      return info.format_id;\n    }\n  });\n  Object.defineProperty(info, 'resolution', {\n    get: function get() {\n      console.warn('`info.resolution` is deprecated, use `info.format`');\n      return info.format.split(' - ')[1];\n    }\n  });\n  info._duration_raw = info.duration;\n  info._duration_hms = info.duration ? hms.fromS(info.duration, 'hh:mm:ss') : info.duration;\n  info.duration = info.duration ? util.formatDuration(info.duration) : info.duration;\n  return info;\n}\n/**\n * Set path from youtube-dl.\n *\n * @param {String} path\n */\n\n\nytdl.setYtdlBinary = function setYtdlBinary(path) {\n  ytdlBinary = path;\n};\n/**\n * Get path from youtube-dl.\n *\n * @param {String} path\n */\n\n\nytdl.getYtdlBinary = function getYtdlBinary() {\n  return ytdlBinary;\n};\n/**\n * Gets info from a video.\n *\n * @param {String} url\n * @param {Array.<String>} args\n * @param {Object} options\n * @param {Function(!Error, Object)} callback\n */\n\n\nytdl.getInfo = function getInfo(url, args, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if (typeof args === 'function') {\n    callback = args;\n    options = {};\n    args = [];\n  }\n\n  const defaultArgs = ['--dump-json'];\n\n  if (!args || args.indexOf('-f') < 0 && args.indexOf('--format') < 0 && args.every(function (a) {\n    return a.indexOf('--format=') !== 0;\n  })) {\n    defaultArgs.push('-f');\n    defaultArgs.push('best');\n  }\n\n  call(url, defaultArgs, args, options, function done(err, data) {\n    if (err) return callback(err);\n    let info;\n\n    try {\n      info = data.map(parseInfo);\n    } catch (err) {\n      return callback(err);\n    }\n\n    return callback(null, info.length === 1 ? info[0] : info);\n  });\n};\n/**\n * @param {String} url\n * @param {Object} options\n *   {Boolean} auto\n *   {Boolean} all\n *   {String} lang\n *   {String} cwd\n * @param {Function(!Error, Object)} callback\n */\n\n\nytdl.getSubs = function getSubs(url, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  const args = ['--skip-download'];\n  args.push('--write' + (options.auto ? '-auto' : '') + '-sub');\n\n  if (options.all) {\n    args.push('--all-subs');\n  }\n\n  if (options.lang) {\n    args.push('--sub-lang=' + options.lang);\n  }\n\n  if (!options.warrning) {\n    args.push('--no-warnings');\n  }\n\n  call(url, args, [], {\n    cwd: options.cwd\n  }, function (err, data) {\n    if (err) return callback(err);\n    const files = [];\n\n    for (let i = 0, len = data.length; i < len; i++) {\n      const line = data[i];\n\n      if (line.indexOf('[info] Writing video subtitles to: ') === 0) {\n        files.push(line.slice(35));\n      }\n    }\n\n    return callback(null, files);\n  });\n};\n/**\n * @param {String} url\n * @param {Object} options\n *   {Boolean} all\n *   {String} cwd\n * @param {Function(!Error, Object)} callback\n */\n\n\nytdl.getThumbs = function getThumbs(url, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  const args = ['--skip-download'];\n\n  if (options.all) {\n    args.push('--write-all-thumbnails');\n  } else {\n    args.push('--write-thumbnail');\n  }\n\n  if (!options.warrning) {\n    args.push('--no-warnings');\n  }\n\n  call(url, args, [], {\n    cwd: options.cwd\n  }, function (err, data) {\n    if (err) return callback(err);\n    const files = [];\n\n    for (let i = 0, len = data.length; i < len; i++) {\n      const line = data[i];\n      const info = 'Writing thumbnail to: ';\n\n      if (line.indexOf(info) !== -1) {\n        files.push(line.slice(line.indexOf(info) + info.length));\n      }\n    }\n\n    return callback(null, files);\n  });\n};\n/**\n * @param {!Boolean} descriptions\n * @param {!Object} options\n * @param {Function(!Error, Object)} callback\n */\n\n\nytdl.getExtractors = function getExtractors(descriptions, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if (typeof descriptions === 'function') {\n    callback = descriptions;\n    options = {};\n    descriptions = false;\n  }\n\n  const args = descriptions ? ['--extractor-descriptions'] : ['--list-extractors'];\n  return call(null, args, null, options, callback);\n};","map":{"version":3,"sources":["/home/hoss/my App/my-app/node_modules/youtube-dl/lib/youtube-dl.js"],"names":["execFile","require","streamify","request","hms","path","http","url","fs","util","TEN_MEGABYTES","execFileOpts","maxBuffer","detailsPath","join","__dirname","ytdlBinary","existsSync","details","JSON","parse","readFileSync","resolve","exec","console","error","dirname","process","exit","isWin","platform","env","NODE_PLATFORM","isDebug","isWarning","isYouTubeRegex","isNoSubsRegex","videoNotAvailable","RegExp","subsRegex","youtubeDl","args","options","callback","passOver","done","err","stdout","stderr","test","message","nosubs","i","cleanupOpt","args2","length","splice","call","video","args1","indexOf","log","warn","Error","slice","urls","shift","trim","split","processData","data","stream","item","headers","hostname","start","Range","req","on","response","res","size","parseInt","statusCode","emit","end","ytdl","module","exports","videoUrl","superCtor","ClientResponse","readable","writable","getInfo","concat","hasEncoding","push","id","query","v","pathname","replace","unshift","parseInfo","info","Object","defineProperty","get","_filename","format_id","format","_duration_raw","duration","_duration_hms","fromS","formatDuration","setYtdlBinary","getYtdlBinary","defaultArgs","every","a","map","getSubs","auto","all","lang","warrning","cwd","files","len","line","getThumbs","getExtractors","descriptions"],"mappings":"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","sourcesContent":["'use strict';\n\nconst execFile = require('child_process').execFile;\nconst streamify = require('streamify');\nconst request = require('request');\nconst hms = require('hh-mm-ss');\nconst path = require('path');\nconst http = require('http');\nconst url = require('url');\nconst fs = require('fs');\n\nconst util = require('./util');\n\nconst TEN_MEGABYTES = 1000 * 1000 * 10;\n\nconst execFileOpts = { maxBuffer: TEN_MEGABYTES }\n\nconst detailsPath = path.join(__dirname, '..', 'bin/details')\n\nconst ytdlBinary = (() => {\n  if (fs.existsSync(detailsPath)) {\n    const details = JSON.parse(fs.readFileSync(detailsPath));\n    return details.path ? details.path : path.resolve(__dirname, '..', 'bin', details.exec);\n  }\n\n  if (!fs.existsSync(ytdlBinary)) {\n    console.error('ERROR: unable to locate youtube-dl details in ' + path.dirname(ytdlBinary));\n    process.exit(1);\n  }\n})()\n\nconst isWin = (process.platform === 'win32' || process.env.NODE_PLATFORM === 'windows') ? true : false;\n\nconst isDebug = /^\\[debug\\] /;\nconst isWarning = /^WARNING: /;\nconst isYouTubeRegex = /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)\\//;\nconst isNoSubsRegex = /WARNING: video doesn't have subtitles|no closed captions found/;\nconst videoNotAvailable = new RegExp(\n  'This video is not available|' +\n  'This video has been removed by the user|' +\n  'Please sign in to view this video|' +\n  'This video is no longer available|' +\n  'The uploader has not made this video available|' +\n  'This video contains content from'\n);\n\nconst subsRegex = /--write-sub|--write-srt|--srt-lang|--all-subs/;\n\nfunction youtubeDl(args, options, callback) {\n  let passOver = false;\n\n  execFile(ytdlBinary, args, { ...execFileOpts, ...options }, function done(err, stdout, stderr) {\n    if (err) {\n      if (videoNotAvailable.test(err.message)) passOver = true;\n      if (!passOver) return callback(err);\n    }\n\n    if (stderr && !passOver) {\n      // Try once to download video if no subtitles available\n      if (!options.nosubs && isNoSubsRegex.test(stderr)) {\n        let i;\n        let cleanupOpt = args2;\n\n        for (i = cleanupOpt.length - 1; i >= 0; i--) {\n          if (subsRegex.test(cleanupOpt[i])) { cleanupOpt.splice(i, 1); }\n        }\n\n        options.nosubs = true;\n\n        return call(video, args1, cleanupOpt, options, callback);\n      }\n\n      if (isDebug.test(stderr) && args.indexOf('--verbose') > -1) {\n        console.log('\\n' + stderr);\n      } else if (isWarning.test(stderr)) {\n        console.warn(stderr);\n      } else {\n        return callback(new Error(stderr.slice(7)));\n      }\n    }\n\n    if (passOver && stdout === '' && urls.length > 1) {\n      urls.shift();\n      return call(urls, args1, args2, options, callback);\n    }\n\n    return callback(null, stdout.trim().split(/\\r?\\n/));\n  })\n}\n\n\n/**\n * Processes data\n *\n * @param {Object} data\n * @param {Object} options\n * @param {Object} stream\n */\n\nfunction processData(data, options, stream) {\n  const item = !data.length ? data : data.shift();\n\n  // fix for pause/resume downloads\n  const headers = { 'Host': url.parse(item.url).hostname };\n\n  if (options && options.start > 0) headers.Range = 'bytes=' + options.start + '-';\n\n  const req = request({ url: item.url, headers: headers });\n\n  req.on('response', function response(res) {\n\n    const size = parseInt(res.headers['content-length'], 10);\n    if (size) item.size = size;\n\n    if (options && options.start > 0 && res.statusCode === 416) {\n      // the file that is being resumed is complete.\n      return stream.emit('complete', item);\n    }\n\n    if (res.statusCode !== 200 && res.statusCode !== 206) {\n      return stream.emit('error', new Error('status code ' + res.statusCode));\n    }\n\n    stream.emit('info', item);\n\n    stream.on('end', function end() {\n      if (data.length) stream.emit('next', data);\n    });\n\n  });\n\n  return stream.resolve(req);\n}\n\n/**\n * Downloads a video.\n *\n * @param {String} videoUrl\n * @param {!Array.<String>} args\n * @param {!Object} options\n */\nconst ytdl = module.exports = function (videoUrl, args, options) {\n  const stream = streamify({ superCtor: http.ClientResponse, readable: true, writable: false });\n\n  if (typeof videoUrl !== 'string') {\n    processData(videoUrl, options, stream);\n    return stream;\n  }\n\n  ytdl.getInfo(videoUrl, args, options, function getInfo(err, data) {\n    return err ? stream.emit('error', err) : processData(data, options, stream);\n  });\n\n  return stream;\n};\n\n/**\n * Calls youtube-dl with some arguments and the `callback`\n * gets called with the output.\n *\n * @param {String|Array.<String>}\n * @param {Array.<String>} args\n * @param {Array.<String>} args2\n * @param {Object} options\n * @param {Function(!Error, String)} callback\n */\nfunction call(urls, args1, args2, options = {}, callback) {\n  let args = args1;\n  if (args2) args = args.concat(args2);\n\n  // set encoding on windows to support unicode titles\n  if (isWin) {\n    // check if encoding is already set\n    let hasEncoding = false;\n    for (let i = 0; i < args.length; i++) {\n      if (args[i] === '--encoding') {\n        hasEncoding = true;\n        break;\n      }\n    }\n    if (!hasEncoding) {\n      args.push('--encoding');\n      args.push('utf8');\n    }\n  }\n\n\n  if (urls !== null) {\n    if (typeof urls === 'string') {\n      urls = [urls];\n    }\n\n    for (let i = 0; i < urls.length; i++) {\n      const video = urls[i];\n      if (isYouTubeRegex.test(video)) {\n        // Get possible IDs.\n        const details = url.parse(video, true);\n        let id = details.query.v || '';\n        if (id) {\n          args.push('http://www.youtube.com/watch?v=' + id);\n        } else {\n          // Get possible IDs for youtu.be from urladdr.\n          id = details.pathname.slice(1).replace(/^v\\//, '');\n          if (id) {\n            args.push(video);\n            args.unshift('-i');\n          }\n        }\n      } else {\n        if (i === 0)\n          args.push('--');\n        args.push(video);\n      }\n    }\n  }\n\n  return youtubeDl(args, options, callback)\n}\n\n/**\n * Calls youtube-dl with some arguments and the `callback`\n * gets called with the output.\n *\n * @param {String} url\n * @param {Array.<String>} args\n * @param {Object} options\n * @param {Function(!Error, String)} callback\n */\nytdl.exec = function exec(url, args, options, callback) {\n  return call(url, [], args, options, callback);\n};\n\n\n/**\n * @param {Object} data\n * @returns {Object}\n */\nfunction parseInfo(data) {\n  const info = JSON.parse(data);\n\n  // Add and process some entries to keep backwards compatibility\n  Object.defineProperty(info, 'filename', {\n    get: function get() {\n      console.warn('`info.filename` is deprecated, use `info._filename`');\n      return info._filename;\n    }\n  });\n  Object.defineProperty(info, 'itag', {\n    get: function get() {\n      console.warn('`info.itag` is deprecated, use `info.format_id`');\n      return info.format_id;\n    }\n  });\n  Object.defineProperty(info, 'resolution', {\n    get: function get() {\n      console.warn('`info.resolution` is deprecated, use `info.format`');\n      return info.format.split(' - ')[1];\n    }\n  });\n\n  info._duration_raw = info.duration;\n  info._duration_hms = (info.duration) ? hms.fromS(info.duration, 'hh:mm:ss') : info.duration;\n  info.duration = (info.duration) ? util.formatDuration(info.duration) : info.duration;\n\n  return info;\n}\n\n/**\n * Set path from youtube-dl.\n *\n * @param {String} path\n */\nytdl.setYtdlBinary = function setYtdlBinary(path) {\n  ytdlBinary = path;\n};\n\n/**\n * Get path from youtube-dl.\n *\n * @param {String} path\n */\nytdl.getYtdlBinary = function getYtdlBinary() {\n  return ytdlBinary;\n};\n\n\n/**\n * Gets info from a video.\n *\n * @param {String} url\n * @param {Array.<String>} args\n * @param {Object} options\n * @param {Function(!Error, Object)} callback\n */\nytdl.getInfo = function getInfo(url, args, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if (typeof args === 'function') {\n    callback = args;\n    options = {};\n    args = [];\n  }\n  const defaultArgs = ['--dump-json'];\n  if (!args || args.indexOf('-f') < 0 && args.indexOf('--format') < 0 &&\n    args.every(function (a) {\n      return a.indexOf('--format=') !== 0;\n    })) {\n    defaultArgs.push('-f');\n    defaultArgs.push('best');\n  }\n\n  call(url, defaultArgs, args, options, function done(err, data) {\n    if (err) return callback(err);\n    let info;\n\n    try {\n      info = data.map(parseInfo);\n    } catch (err) {\n      return callback(err);\n    }\n\n    return callback(null, info.length === 1 ? info[0] : info);\n  });\n};\n\n/**\n * @param {String} url\n * @param {Object} options\n *   {Boolean} auto\n *   {Boolean} all\n *   {String} lang\n *   {String} cwd\n * @param {Function(!Error, Object)} callback\n */\nytdl.getSubs = function getSubs(url, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  const args = ['--skip-download'];\n  args.push('--write' + (options.auto ? '-auto' : '') + '-sub');\n  if (options.all) {\n    args.push('--all-subs');\n  }\n  if (options.lang) {\n    args.push('--sub-lang=' + options.lang);\n  }\n  if (!options.warrning) {\n    args.push('--no-warnings');\n  }\n\n  call(url, args, [], { cwd: options.cwd }, function (err, data) {\n    if (err) return callback(err);\n\n    const files = [];\n    for (let i = 0, len = data.length; i < len; i++) {\n      const line = data[i];\n      if (line.indexOf('[info] Writing video subtitles to: ') === 0) {\n        files.push(line.slice(35));\n      }\n    }\n\n    return callback(null, files);\n  });\n};\n\n/**\n * @param {String} url\n * @param {Object} options\n *   {Boolean} all\n *   {String} cwd\n * @param {Function(!Error, Object)} callback\n */\nytdl.getThumbs = function getThumbs(url, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  const args = ['--skip-download'];\n\n  if (options.all) {\n    args.push('--write-all-thumbnails');\n  } else {\n    args.push('--write-thumbnail');\n  }\n\n  if (!options.warrning) {\n    args.push('--no-warnings');\n  }\n\n  call(url, args, [], { cwd: options.cwd }, function (err, data) {\n    if (err) return callback(err);\n\n    const files = [];\n    for (let i = 0, len = data.length; i < len; i++) {\n      const line = data[i];\n      const info = 'Writing thumbnail to: ';\n      if (line.indexOf(info) !== -1) {\n        files.push(line.slice(line.indexOf(info) + info.length));\n      }\n    }\n    return callback(null, files);\n  });\n};\n\n/**\n * @param {!Boolean} descriptions\n * @param {!Object} options\n * @param {Function(!Error, Object)} callback\n */\nytdl.getExtractors = function getExtractors(descriptions, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if (typeof descriptions === 'function') {\n    callback = descriptions;\n    options = {};\n    descriptions = false;\n  }\n\n  const args = descriptions ? ['--extractor-descriptions'] : ['--list-extractors'];\n  return call(null, args, null, options, callback);\n};\n"]},"metadata":{},"sourceType":"script"}