{"ast":null,"code":"\"use strict\"; // Adapted from https://developer.mozilla.org/en/docs/ECMAScript_DontEnum_attribute#JScript_DontEnum_Bug\n\nvar hasDontEnumBug = function () {\n  var obj = {\n    constructor: function () {\n      return \"0\";\n    },\n    toString: function () {\n      return \"1\";\n    },\n    valueOf: function () {\n      return \"2\";\n    },\n    toLocaleString: function () {\n      return \"3\";\n    },\n    prototype: function () {\n      return \"4\";\n    },\n    isPrototypeOf: function () {\n      return \"5\";\n    },\n    propertyIsEnumerable: function () {\n      return \"6\";\n    },\n    hasOwnProperty: function () {\n      return \"7\";\n    },\n    length: function () {\n      return \"8\";\n    },\n    unique: function () {\n      return \"9\";\n    }\n  };\n  var result = [];\n\n  for (var prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      result.push(obj[prop]());\n    }\n  }\n\n  return result.join(\"\") !== \"0123456789\";\n}();\n/* Public: Extend target in place with all (own) properties from sources in-order. Thus, last source will\n *         override properties in previous sources.\n *\n * target - The Object to extend\n * sources - Objects to copy properties from.\n *\n * Returns the extended target\n */\n\n\nmodule.exports = function extend(target\n/*, sources */\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  var source, i, prop;\n\n  for (i = 0; i < sources.length; i++) {\n    source = sources[i];\n\n    for (prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        target[prop] = source[prop];\n      }\n    } // Make sure we copy (own) toString method even when in JScript with DontEnum bug\n    // See https://developer.mozilla.org/en/docs/ECMAScript_DontEnum_attribute#JScript_DontEnum_Bug\n\n\n    if (hasDontEnumBug && source.hasOwnProperty(\"toString\") && source.toString !== target.toString) {\n      target.toString = source.toString;\n    }\n  }\n\n  return target;\n};","map":{"version":3,"sources":["/home/hoss/my App/my-app/node_modules/sinon/lib/sinon/util/core/extend.js"],"names":["hasDontEnumBug","obj","constructor","toString","valueOf","toLocaleString","prototype","isPrototypeOf","propertyIsEnumerable","hasOwnProperty","length","unique","result","prop","push","join","module","exports","extend","target","sources","Array","slice","call","arguments","source","i"],"mappings":"AAAA,a,CAEA;;AACA,IAAIA,cAAc,GAAI,YAAY;AAC9B,MAAIC,GAAG,GAAG;AACNC,IAAAA,WAAW,EAAE,YAAY;AACrB,aAAO,GAAP;AACH,KAHK;AAINC,IAAAA,QAAQ,EAAE,YAAY;AAClB,aAAO,GAAP;AACH,KANK;AAONC,IAAAA,OAAO,EAAE,YAAY;AACjB,aAAO,GAAP;AACH,KATK;AAUNC,IAAAA,cAAc,EAAE,YAAY;AACxB,aAAO,GAAP;AACH,KAZK;AAaNC,IAAAA,SAAS,EAAE,YAAY;AACnB,aAAO,GAAP;AACH,KAfK;AAgBNC,IAAAA,aAAa,EAAE,YAAY;AACvB,aAAO,GAAP;AACH,KAlBK;AAmBNC,IAAAA,oBAAoB,EAAE,YAAY;AAC9B,aAAO,GAAP;AACH,KArBK;AAsBNC,IAAAA,cAAc,EAAE,YAAY;AACxB,aAAO,GAAP;AACH,KAxBK;AAyBNC,IAAAA,MAAM,EAAE,YAAY;AAChB,aAAO,GAAP;AACH,KA3BK;AA4BNC,IAAAA,MAAM,EAAE,YAAY;AAChB,aAAO,GAAP;AACH;AA9BK,GAAV;AAiCA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,IAAT,IAAiBZ,GAAjB,EAAsB;AAClB,QAAIA,GAAG,CAACQ,cAAJ,CAAmBI,IAAnB,CAAJ,EAA8B;AAC1BD,MAAAA,MAAM,CAACE,IAAP,CAAYb,GAAG,CAACY,IAAD,CAAH,EAAZ;AACH;AACJ;;AACD,SAAOD,MAAM,CAACG,IAAP,CAAY,EAAZ,MAAoB,YAA3B;AACH,CAzCoB,EAArB;AA2CA;;;;;;;;;;AAQAC,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC;AAAO;AAAvB,EAAuC;AACpD,MAAIC,OAAO,GAAGC,KAAK,CAACf,SAAN,CAAgBgB,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,EAAsC,CAAtC,CAAd;AACA,MAAIC,MAAJ,EAAYC,CAAZ,EAAeb,IAAf;;AAEA,OAAKa,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGN,OAAO,CAACV,MAAxB,EAAgCgB,CAAC,EAAjC,EAAqC;AACjCD,IAAAA,MAAM,GAAGL,OAAO,CAACM,CAAD,CAAhB;;AAEA,SAAKb,IAAL,IAAaY,MAAb,EAAqB;AACjB,UAAIA,MAAM,CAAChB,cAAP,CAAsBI,IAAtB,CAAJ,EAAiC;AAC7BM,QAAAA,MAAM,CAACN,IAAD,CAAN,GAAeY,MAAM,CAACZ,IAAD,CAArB;AACH;AACJ,KAPgC,CASjC;AACA;;;AACA,QAAIb,cAAc,IAAIyB,MAAM,CAAChB,cAAP,CAAsB,UAAtB,CAAlB,IAAuDgB,MAAM,CAACtB,QAAP,KAAoBgB,MAAM,CAAChB,QAAtF,EAAgG;AAC5FgB,MAAAA,MAAM,CAAChB,QAAP,GAAkBsB,MAAM,CAACtB,QAAzB;AACH;AACJ;;AAED,SAAOgB,MAAP;AACH,CArBD","sourcesContent":["\"use strict\";\n\n// Adapted from https://developer.mozilla.org/en/docs/ECMAScript_DontEnum_attribute#JScript_DontEnum_Bug\nvar hasDontEnumBug = (function () {\n    var obj = {\n        constructor: function () {\n            return \"0\";\n        },\n        toString: function () {\n            return \"1\";\n        },\n        valueOf: function () {\n            return \"2\";\n        },\n        toLocaleString: function () {\n            return \"3\";\n        },\n        prototype: function () {\n            return \"4\";\n        },\n        isPrototypeOf: function () {\n            return \"5\";\n        },\n        propertyIsEnumerable: function () {\n            return \"6\";\n        },\n        hasOwnProperty: function () {\n            return \"7\";\n        },\n        length: function () {\n            return \"8\";\n        },\n        unique: function () {\n            return \"9\";\n        }\n    };\n\n    var result = [];\n    for (var prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            result.push(obj[prop]());\n        }\n    }\n    return result.join(\"\") !== \"0123456789\";\n})();\n\n/* Public: Extend target in place with all (own) properties from sources in-order. Thus, last source will\n *         override properties in previous sources.\n *\n * target - The Object to extend\n * sources - Objects to copy properties from.\n *\n * Returns the extended target\n */\nmodule.exports = function extend(target /*, sources */) {\n    var sources = Array.prototype.slice.call(arguments, 1);\n    var source, i, prop;\n\n    for (i = 0; i < sources.length; i++) {\n        source = sources[i];\n\n        for (prop in source) {\n            if (source.hasOwnProperty(prop)) {\n                target[prop] = source[prop];\n            }\n        }\n\n        // Make sure we copy (own) toString method even when in JScript with DontEnum bug\n        // See https://developer.mozilla.org/en/docs/ECMAScript_DontEnum_attribute#JScript_DontEnum_Bug\n        if (hasDontEnumBug && source.hasOwnProperty(\"toString\") && source.toString !== target.toString) {\n            target.toString = source.toString;\n        }\n    }\n\n    return target;\n};\n"]},"metadata":{},"sourceType":"script"}