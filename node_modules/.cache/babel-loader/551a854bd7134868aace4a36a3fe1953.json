{"ast":null,"code":"// Arguments we dont want users to use with youtube-dl\n// because they will break the module.\nvar badArgs = ['-h', '--help', '-v', '--version', '-U', '--update', '-q', '--quiet', '-s', '--simulate', '-g', '--get-url', '-e', '--get-title', '--get-id', '--get-thumbnail', '--get-description', '--get-duration', '--get-filename', '--get-format', '-j', '--dump-json', '--newline', '--no-progress', '--console-title', '-v', '--verbose', '--dump-intermediate-pages', '--write-pages', '--print-traffic'];\n/**\n * Helps parse options used in youtube-dl command.\n *\n * @param {Array.<String>}\n * @return {Array.<String>}\n */\n\nexports.parseOpts = function (args) {\n  var pos;\n\n  for (var i = 0, len = badArgs.length; i < len; i++) {\n    if ((pos = args.indexOf(badArgs[i])) !== -1) {\n      args.splice(pos, 1);\n    }\n  }\n\n  return args;\n};\n/**\n * Converts seconds to format hh:mm:ss\n *\n * @param {Number} seconds\n * @return {String}\n */\n\n\nexports.formatDuration = function (seconds) {\n  var parts = [];\n  parts.push(seconds % 60);\n  var minutes = Math.floor(seconds / 60);\n\n  if (minutes > 0) {\n    parts.push(minutes % 60);\n    var hours = Math.floor(minutes / 60);\n\n    if (hours > 0) {\n      parts.push(hours);\n    }\n  }\n\n  return parts.reverse().join(':');\n};","map":{"version":3,"sources":["/home/hoss/my App/my-app/node_modules/youtube-dl/lib/util.js"],"names":["badArgs","exports","parseOpts","args","pos","i","len","length","indexOf","splice","formatDuration","seconds","parts","push","minutes","Math","floor","hours","reverse","join"],"mappings":"AAAA;AACA;AACA,IAAIA,OAAO,GAAG,CACZ,IADY,EACN,QADM,EAEZ,IAFY,EAEN,WAFM,EAGZ,IAHY,EAGN,UAHM,EAIZ,IAJY,EAIN,SAJM,EAKZ,IALY,EAKN,YALM,EAMZ,IANY,EAMN,WANM,EAOZ,IAPY,EAON,aAPM,EAQZ,UARY,EASZ,iBATY,EAUZ,mBAVY,EAWZ,gBAXY,EAYZ,gBAZY,EAaZ,cAbY,EAcZ,IAdY,EAcN,aAdM,EAeZ,WAfY,EAgBZ,eAhBY,EAiBZ,iBAjBY,EAkBZ,IAlBY,EAkBN,WAlBM,EAmBZ,2BAnBY,EAoBZ,eApBY,EAqBZ,iBArBY,CAAd;AAwBA;;;;;;;AAMAC,OAAO,CAACC,SAAR,GAAoB,UAAUC,IAAV,EAAgB;AAClC,MAAIC,GAAJ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGN,OAAO,CAACO,MAA9B,EAAsCF,CAAC,GAAGC,GAA1C,EAA+CD,CAAC,EAAhD,EAAoD;AAClD,QAAI,CAACD,GAAG,GAAGD,IAAI,CAACK,OAAL,CAAaR,OAAO,CAACK,CAAD,CAApB,CAAP,MAAqC,CAAC,CAA1C,EAA6C;AAC3CF,MAAAA,IAAI,CAACM,MAAL,CAAYL,GAAZ,EAAiB,CAAjB;AACD;AACF;;AACD,SAAOD,IAAP;AACD,CARD;AAWA;;;;;;;;AAMAF,OAAO,CAACS,cAAR,GAAyB,UAAUC,OAAV,EAAmB;AAC1C,MAAIC,KAAK,GAAG,EAAZ;AACAA,EAAAA,KAAK,CAACC,IAAN,CAAWF,OAAO,GAAG,EAArB;AACA,MAAIG,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAO,GAAG,EAArB,CAAd;;AACA,MAAIG,OAAO,GAAG,CAAd,EAAiB;AACfF,IAAAA,KAAK,CAACC,IAAN,CAAWC,OAAO,GAAG,EAArB;AACA,QAAIG,KAAK,GAAGF,IAAI,CAACC,KAAL,CAAWF,OAAO,GAAG,EAArB,CAAZ;;AACA,QAAIG,KAAK,GAAG,CAAZ,EAAe;AACbL,MAAAA,KAAK,CAACC,IAAN,CAAWI,KAAX;AACD;AACF;;AACD,SAAOL,KAAK,CAACM,OAAN,GAAgBC,IAAhB,CAAqB,GAArB,CAAP;AACD,CAZD","sourcesContent":["// Arguments we dont want users to use with youtube-dl\n// because they will break the module.\nvar badArgs = [\n  '-h', '--help',\n  '-v', '--version',\n  '-U', '--update',\n  '-q', '--quiet',\n  '-s', '--simulate',\n  '-g', '--get-url',\n  '-e', '--get-title',\n  '--get-id',\n  '--get-thumbnail',\n  '--get-description',\n  '--get-duration',\n  '--get-filename',\n  '--get-format',\n  '-j', '--dump-json',\n  '--newline',\n  '--no-progress',\n  '--console-title',\n  '-v', '--verbose',\n  '--dump-intermediate-pages',\n  '--write-pages',\n  '--print-traffic',\n];\n\n/**\n * Helps parse options used in youtube-dl command.\n *\n * @param {Array.<String>}\n * @return {Array.<String>}\n */\nexports.parseOpts = function (args) {\n  var pos;\n  for (var i = 0, len = badArgs.length; i < len; i++) {\n    if ((pos = args.indexOf(badArgs[i])) !== -1) {\n      args.splice(pos, 1);\n    }\n  }\n  return args;\n};\n\n\n/**\n * Converts seconds to format hh:mm:ss\n *\n * @param {Number} seconds\n * @return {String}\n */\nexports.formatDuration = function (seconds) {\n  var parts = [];\n  parts.push(seconds % 60);\n  var minutes = Math.floor(seconds / 60);\n  if (minutes > 0) {\n    parts.push(minutes % 60);\n    var hours = Math.floor(minutes / 60);\n    if (hours > 0) {\n      parts.push(hours);\n    }\n  }\n  return parts.reverse().join(':');\n};\n"]},"metadata":{},"sourceType":"script"}