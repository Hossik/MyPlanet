{"ast":null,"code":"var _jsxFileName = \"/home/hoss/my App/my-app/src/components/AboutMe.js\";\nimport React, { Component } from 'react';\nimport Typist from 'react-typist';\nexport class AboutMe extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      blinking: \"|\"\n    };\n\n    this.blink = () => {\n      this.setState({\n        blinking: \"_\"\n      });\n    };\n\n    this.blinkFinish = () => {\n      this.setState({\n        blinking: \"|\"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typist, {\n      className: \"textCard\",\n      stdTypingDelay: \"100\",\n      startDelay: \"1000\",\n      cursor: {\n        show: false\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"headertext\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, \"Its Me Typist will animate any text\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Typist, {\n      className: \"textCardtwo\",\n      stdTypingDelay: \"100\",\n      startDelay: \"2500\",\n      cursor: {\n        show: true,\n        blink: true,\n        element: this.state.blinking,\n        hideWhenDone: true,\n        hideWhenDoneDelay: '1000'\n      },\n      onCharacterTyped: this.blink,\n      onLineTyped: this.blinkFinish,\n      onTypingDone: this.blinkFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"Typist will animate any text present in its descendents. Each text node will be animated\"), /*#__PURE__*/React.createElement(Typist.Delay, {\n      ms: 2500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 113\n      }\n    }), /*#__PURE__*/React.createElement(Typist.Backspace, {\n      count: 8,\n      delay: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 139\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 181\n      }\n    }), /*#__PURE__*/React.createElement(Typist.Delay, {\n      ms: 2500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 186\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 212\n      }\n    }, \"as it is encountered in depth-first traversal of the children tree, one after the other.\")));\n  }\n\n}\nexport default AboutMe;","map":{"version":3,"sources":["/home/hoss/my App/my-app/src/components/AboutMe.js"],"names":["React","Component","Typist","AboutMe","state","blinking","blink","setState","blinkFinish","render","show","element","hideWhenDone","hideWhenDoneDelay"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAO,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;AAAA,SACrCG,KADqC,GAC9B;AACLC,MAAAA,QAAQ,EAAG;AADN,KAD8B;;AAAA,SAIrCC,KAJqC,GAI7B,MAAM;AACZ,WAAKC,QAAL,CAAc;AACZF,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGD,KARoC;;AAAA,SASrCG,WATqC,GASvB,MAAM;AAClB,WAAKD,QAAL,CAAc;AACZF,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGD,KAboC;AAAA;;AAcrCI,EAAAA,MAAM,GAAE;AACR,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,UAAlB;AACE,MAAA,cAAc,EAAC,KADjB;AAEE,MAAA,UAAU,EAAC,MAFb;AAGE,MAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI;AAAI,MAAA,EAAE,EAAC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CANJ,CADF,eAWM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXN,eAYK,oBAAC,MAAD;AACD,MAAA,SAAS,EAAC,aADT;AAED,MAAA,cAAc,EAAC,KAFd;AAGD,MAAA,UAAU,EAAC,MAHV;AAID,MAAA,MAAM,EAAE;AACNA,QAAAA,IAAI,EAAE,IADA;AAENJ,QAAAA,KAAK,EAAE,IAFD;AAGNK,QAAAA,OAAO,EAAE,KAAKP,KAAL,CAAWC,QAHd;AAINO,QAAAA,YAAY,EAAE,IAJR;AAKNC,QAAAA,iBAAiB,EAAE;AALb,OAJP;AAWD,MAAA,gBAAgB,EAAE,KAAKP,KAXtB;AAYD,MAAA,WAAW,EAAE,KAAKE,WAZjB;AAaD,MAAA,YAAY,EAAE,KAAKA,WAblB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAeD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGAfC,eAeqG,oBAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,EAAE,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfrG,eAe+H,oBAAC,MAAD,CAAQ,SAAR;AAAkB,MAAA,KAAK,EAAE,CAAzB;AAA4B,MAAA,KAAK,EAAE,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAf/H,eAeyK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfzK,eAe8K,oBAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,EAAE,EAAE,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAf9K,eAewM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGAfxM,CAZL,CADJ;AAgCC;;AA/CoC;AAiDvC,eAAeL,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport Typist from 'react-typist';\n\nexport class AboutMe extends Component {\n  state ={\n    blinking : \"|\" \n  }\n  blink = () => {\n    this.setState({\n      blinking :\"_\"\n    })\n  } \n  blinkFinish = () => {\n    this.setState({\n      blinking :\"|\"\n    })\n  } \n  render(){\n  return (\n      <div >\n        <Typist className=\"textCard\"\n          stdTypingDelay=\"100\" \n          startDelay=\"1000\"\n          cursor={{\n            show: false\n          }}>\n            <p  id=\"headertext\" >\n            Its Me Typist will animate any text \n            </p>\n        </Typist>\n            <br/>\n          {<Typist  \n          className=\"textCardtwo\"\n          stdTypingDelay=\"100\" \n          startDelay=\"2500\"\n          cursor={{\n            show: true,\n            blink: true,\n            element: this.state.blinking,\n            hideWhenDone: true,\n            hideWhenDoneDelay: '1000',\n          }}\n          onCharacterTyped={this.blink}\n          onLineTyped={this.blinkFinish}\n          onTypingDone={this.blinkFinish}\n          >        \n          <span >Typist will animate any text present in its descendents. Each text node will be animated</span><Typist.Delay ms={2500} /><Typist.Backspace count={8} delay={200} /><br/><Typist.Delay ms={2500} /><span>as it is encountered in depth-first traversal of the children tree, one after the other.</span>\n          </Typist>}\n          </div>\n    )\n  }\n}\nexport default AboutMe;"]},"metadata":{},"sourceType":"module"}