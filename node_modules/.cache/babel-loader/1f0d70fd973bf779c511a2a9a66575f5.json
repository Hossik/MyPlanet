{"ast":null,"code":"\"use strict\";\n\nvar extend = require(\"./util/core/extend\");\n\nvar sinonCollection = require(\"./collection\");\n\nvar sinonMatch = require(\"./match\");\n\nvar sinonAssert = require(\"./assert\");\n\nvar sinonClock = require(\"./util/fake_timers\");\n\nvar fakeServer = require(\"./util/fake_server\");\n\nvar fakeXhr = require(\"./util/fake_xml_http_request\");\n\nvar fakeServerWithClock = require(\"./util/fake_server_with_clock\");\n\nvar push = [].push;\nvar sinonSandbox = Object.create(sinonCollection);\n\nfunction exposeValue(sandbox, config, key, value) {\n  if (!value) {\n    return;\n  }\n\n  if (config.injectInto && !(key in config.injectInto)) {\n    config.injectInto[key] = value;\n    sandbox.injectedKeys.push(key);\n  } else {\n    push.call(sandbox.args, value);\n  }\n}\n\nfunction prepareSandboxFromConfig(config) {\n  var sandbox = Object.create(sinonSandbox);\n\n  if (config.useFakeServer) {\n    if (typeof config.useFakeServer === \"object\") {\n      sandbox.serverPrototype = config.useFakeServer;\n    }\n\n    sandbox.useFakeServer();\n  }\n\n  if (config.useFakeTimers) {\n    if (typeof config.useFakeTimers === \"object\") {\n      sandbox.useFakeTimers.apply(sandbox, config.useFakeTimers);\n    } else {\n      sandbox.useFakeTimers();\n    }\n  }\n\n  return sandbox;\n}\n\nextend(sinonSandbox, {\n  useFakeTimers: function useFakeTimers() {\n    this.clock = sinonClock.useFakeTimers.apply(null, arguments);\n    return this.add(this.clock);\n  },\n  serverPrototype: fakeServerWithClock,\n  useFakeServer: function useFakeServer() {\n    var proto = this.serverPrototype || fakeServer;\n\n    if (!proto || !proto.create) {\n      return null;\n    }\n\n    this.server = proto.create();\n    return this.add(this.server);\n  },\n  useFakeXMLHttpRequest: function useFakeXMLHttpRequest() {\n    var xhr = fakeXhr.useFakeXMLHttpRequest();\n    return this.add(xhr);\n  },\n  inject: function (obj) {\n    sinonCollection.inject.call(this, obj);\n\n    if (this.clock) {\n      obj.clock = this.clock;\n    }\n\n    if (this.server) {\n      obj.server = this.server;\n      obj.requests = this.server.requests;\n    }\n\n    obj.match = sinonMatch;\n    return obj;\n  },\n  usingPromise: function (promiseLibrary) {\n    this.promiseLibrary = promiseLibrary;\n    return this;\n  },\n  restore: function () {\n    if (arguments.length) {\n      throw new Error(\"sandbox.restore() does not take any parameters. Perhaps you meant stub.restore()\");\n    }\n\n    sinonCollection.restore.apply(this, arguments);\n    this.restoreContext();\n  },\n  restoreContext: function () {\n    var injectedKeys = this.injectedKeys;\n    var injectInto = this.injectInto;\n\n    if (!injectedKeys) {\n      return;\n    }\n\n    injectedKeys.forEach(function (injectedKey) {\n      delete injectInto[injectedKey];\n    });\n    injectedKeys = [];\n  },\n  create: function (config) {\n    if (!config) {\n      return Object.create(sinonSandbox);\n    }\n\n    var sandbox = prepareSandboxFromConfig(config);\n    sandbox.args = sandbox.args || [];\n    sandbox.injectedKeys = [];\n    sandbox.injectInto = config.injectInto;\n    var exposed = sandbox.inject({});\n\n    if (config.properties) {\n      config.properties.forEach(function (prop) {\n        var value = exposed[prop] || prop === \"sandbox\" && sandbox;\n        exposeValue(sandbox, config, prop, value);\n      });\n    } else {\n      exposeValue(sandbox, config, \"sandbox\");\n    }\n\n    return sandbox;\n  },\n  match: sinonMatch,\n  assert: sinonAssert\n});\nmodule.exports = sinonSandbox;","map":{"version":3,"sources":["/home/hoss/my App/my-app/node_modules/sinon/lib/sinon/sandbox.js"],"names":["extend","require","sinonCollection","sinonMatch","sinonAssert","sinonClock","fakeServer","fakeXhr","fakeServerWithClock","push","sinonSandbox","Object","create","exposeValue","sandbox","config","key","value","injectInto","injectedKeys","call","args","prepareSandboxFromConfig","useFakeServer","serverPrototype","useFakeTimers","apply","clock","arguments","add","proto","server","useFakeXMLHttpRequest","xhr","inject","obj","requests","match","usingPromise","promiseLibrary","restore","length","Error","restoreContext","forEach","injectedKey","exposed","properties","prop","assert","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar extend = require(\"./util/core/extend\");\nvar sinonCollection = require(\"./collection\");\nvar sinonMatch = require(\"./match\");\nvar sinonAssert = require(\"./assert\");\nvar sinonClock = require(\"./util/fake_timers\");\nvar fakeServer = require(\"./util/fake_server\");\nvar fakeXhr = require(\"./util/fake_xml_http_request\");\nvar fakeServerWithClock = require(\"./util/fake_server_with_clock\");\n\nvar push = [].push;\n\nvar sinonSandbox = Object.create(sinonCollection);\n\nfunction exposeValue(sandbox, config, key, value) {\n    if (!value) {\n        return;\n    }\n\n    if (config.injectInto && !(key in config.injectInto)) {\n        config.injectInto[key] = value;\n        sandbox.injectedKeys.push(key);\n    } else {\n        push.call(sandbox.args, value);\n    }\n}\n\nfunction prepareSandboxFromConfig(config) {\n    var sandbox = Object.create(sinonSandbox);\n\n    if (config.useFakeServer) {\n        if (typeof config.useFakeServer === \"object\") {\n            sandbox.serverPrototype = config.useFakeServer;\n        }\n\n        sandbox.useFakeServer();\n    }\n\n    if (config.useFakeTimers) {\n        if (typeof config.useFakeTimers === \"object\") {\n            sandbox.useFakeTimers.apply(sandbox, config.useFakeTimers);\n        } else {\n            sandbox.useFakeTimers();\n        }\n    }\n\n    return sandbox;\n}\n\nextend(sinonSandbox, {\n    useFakeTimers: function useFakeTimers() {\n        this.clock = sinonClock.useFakeTimers.apply(null, arguments);\n\n        return this.add(this.clock);\n    },\n\n    serverPrototype: fakeServerWithClock,\n\n    useFakeServer: function useFakeServer() {\n        var proto = this.serverPrototype || fakeServer;\n\n        if (!proto || !proto.create) {\n            return null;\n        }\n\n        this.server = proto.create();\n        return this.add(this.server);\n    },\n\n    useFakeXMLHttpRequest: function useFakeXMLHttpRequest() {\n        var xhr = fakeXhr.useFakeXMLHttpRequest();\n        return this.add(xhr);\n    },\n\n    inject: function (obj) {\n        sinonCollection.inject.call(this, obj);\n\n        if (this.clock) {\n            obj.clock = this.clock;\n        }\n\n        if (this.server) {\n            obj.server = this.server;\n            obj.requests = this.server.requests;\n        }\n\n        obj.match = sinonMatch;\n\n        return obj;\n    },\n\n    usingPromise: function (promiseLibrary) {\n\n        this.promiseLibrary = promiseLibrary;\n\n        return this;\n    },\n\n    restore: function () {\n        if (arguments.length) {\n            throw new Error(\"sandbox.restore() does not take any parameters. Perhaps you meant stub.restore()\");\n        }\n\n        sinonCollection.restore.apply(this, arguments);\n        this.restoreContext();\n    },\n\n    restoreContext: function () {\n        var injectedKeys = this.injectedKeys;\n        var injectInto = this.injectInto;\n\n        if (!injectedKeys) {\n            return;\n        }\n\n        injectedKeys.forEach(function (injectedKey) {\n            delete injectInto[injectedKey];\n        });\n\n        injectedKeys = [];\n    },\n\n    create: function (config) {\n        if (!config) {\n            return Object.create(sinonSandbox);\n        }\n\n        var sandbox = prepareSandboxFromConfig(config);\n        sandbox.args = sandbox.args || [];\n        sandbox.injectedKeys = [];\n        sandbox.injectInto = config.injectInto;\n        var exposed = sandbox.inject({});\n\n        if (config.properties) {\n            config.properties.forEach(function (prop) {\n                var value = exposed[prop] || prop === \"sandbox\" && sandbox;\n                exposeValue(sandbox, config, prop, value);\n            });\n        } else {\n            exposeValue(sandbox, config, \"sandbox\");\n        }\n\n        return sandbox;\n    },\n\n    match: sinonMatch,\n\n    assert: sinonAssert\n});\n\nmodule.exports = sinonSandbox;\n"]},"metadata":{},"sourceType":"script"}