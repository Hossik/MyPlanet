{"ast":null,"code":"\"use strict\";\n\nvar createBehavior = require(\"./behavior\").create;\n\nvar extend = require(\"./util/core/extend\");\n\nvar functionName = require(\"./util/core/function-name\");\n\nvar functionToString = require(\"./util/core/function-to-string\");\n\nvar getPropertyDescriptor = require(\"./util/core/get-property-descriptor\");\n\nvar sinonMatch = require(\"./match\");\n\nvar deepEqual = require(\"./util/core/deep-equal\").use(sinonMatch);\n\nvar spyCall = require(\"./call\");\n\nvar wrapMethod = require(\"./util/core/wrap-method\");\n\nvar sinonFormat = require(\"./util/core/format\");\n\nvar valueToString = require(\"./util/core/value-to-string\");\n\nvar push = Array.prototype.push;\nvar slice = Array.prototype.slice;\nvar callId = 0;\nvar ErrorConstructor = Error.prototype.constructor;\n\nfunction spy(object, property, types) {\n  var descriptor, methodDesc;\n\n  if (!property && typeof object === \"function\") {\n    return spy.create(object);\n  }\n\n  if (!object && !property) {\n    return spy.create(function () {});\n  }\n\n  if (!types) {\n    return wrapMethod(object, property, spy.create(object[property]));\n  }\n\n  descriptor = {};\n  methodDesc = getPropertyDescriptor(object, property);\n  types.forEach(function (type) {\n    descriptor[type] = spy.create(methodDesc[type]);\n  });\n  return wrapMethod(object, property, descriptor);\n}\n\nfunction incrementCallCount() {\n  this.called = true;\n  this.callCount += 1;\n  this.notCalled = false;\n  this.calledOnce = this.callCount === 1;\n  this.calledTwice = this.callCount === 2;\n  this.calledThrice = this.callCount === 3;\n}\n\nfunction createCallProperties() {\n  this.firstCall = this.getCall(0);\n  this.secondCall = this.getCall(1);\n  this.thirdCall = this.getCall(2);\n  this.lastCall = this.getCall(this.callCount - 1);\n}\n\nfunction createProxy(func, proxyLength) {\n  // Retain the function length:\n  var p;\n\n  if (proxyLength) {\n    // Do not change this to use an eval. Projects that depend on sinon block the use of eval.\n    // ref: https://github.com/sinonjs/sinon/issues/710\n    switch (proxyLength) {\n      /*eslint-disable no-unused-vars, max-len*/\n      case 1:\n        p = function proxy(a) {\n          return p.invoke(func, this, slice.call(arguments));\n        };\n\n        break;\n\n      case 2:\n        p = function proxy(a, b) {\n          return p.invoke(func, this, slice.call(arguments));\n        };\n\n        break;\n\n      case 3:\n        p = function proxy(a, b, c) {\n          return p.invoke(func, this, slice.call(arguments));\n        };\n\n        break;\n\n      case 4:\n        p = function proxy(a, b, c, d) {\n          return p.invoke(func, this, slice.call(arguments));\n        };\n\n        break;\n\n      case 5:\n        p = function proxy(a, b, c, d, e) {\n          return p.invoke(func, this, slice.call(arguments));\n        };\n\n        break;\n\n      case 6:\n        p = function proxy(a, b, c, d, e, f) {\n          return p.invoke(func, this, slice.call(arguments));\n        };\n\n        break;\n\n      case 7:\n        p = function proxy(a, b, c, d, e, f, g) {\n          return p.invoke(func, this, slice.call(arguments));\n        };\n\n        break;\n\n      case 8:\n        p = function proxy(a, b, c, d, e, f, g, h) {\n          return p.invoke(func, this, slice.call(arguments));\n        };\n\n        break;\n\n      case 9:\n        p = function proxy(a, b, c, d, e, f, g, h, i) {\n          return p.invoke(func, this, slice.call(arguments));\n        };\n\n        break;\n\n      case 10:\n        p = function proxy(a, b, c, d, e, f, g, h, i, j) {\n          return p.invoke(func, this, slice.call(arguments));\n        };\n\n        break;\n\n      case 11:\n        p = function proxy(a, b, c, d, e, f, g, h, i, j, k) {\n          return p.invoke(func, this, slice.call(arguments));\n        };\n\n        break;\n\n      case 12:\n        p = function proxy(a, b, c, d, e, f, g, h, i, j, k, l) {\n          return p.invoke(func, this, slice.call(arguments));\n        };\n\n        break;\n\n      default:\n        p = function proxy() {\n          return p.invoke(func, this, slice.call(arguments));\n        };\n\n        break;\n\n      /*eslint-enable*/\n    }\n  } else {\n    p = function proxy() {\n      return p.invoke(func, this, slice.call(arguments));\n    };\n  }\n\n  p.isSinonProxy = true;\n  return p;\n}\n\nvar uuid = 0; // Public API\n\nvar spyApi = {\n  formatters: require(\"./spy-formatters\"),\n  reset: function () {\n    if (this.invoking) {\n      var err = new Error(\"Cannot reset Sinon function while invoking it. \" + \"Move the call to .reset outside of the callback.\");\n      err.name = \"InvalidResetException\";\n      throw err;\n    }\n\n    this.called = false;\n    this.notCalled = true;\n    this.calledOnce = false;\n    this.calledTwice = false;\n    this.calledThrice = false;\n    this.callCount = 0;\n    this.firstCall = null;\n    this.secondCall = null;\n    this.thirdCall = null;\n    this.lastCall = null;\n    this.args = [];\n    this.returnValues = [];\n    this.thisValues = [];\n    this.exceptions = [];\n    this.callIds = [];\n    this.errorsWithCallStack = [];\n\n    if (this.fakes) {\n      this.fakes.forEach(function (fake) {\n        if (fake.resetHistory) {\n          fake.resetHistory();\n        } else {\n          fake.reset();\n        }\n      });\n    }\n\n    return this;\n  },\n  create: function create(func, spyLength) {\n    var name;\n\n    if (typeof func !== \"function\") {\n      func = function () {};\n    } else {\n      name = functionName(func);\n    }\n\n    if (!spyLength) {\n      spyLength = func.length;\n    }\n\n    var proxy = createProxy(func, spyLength);\n    extend(proxy, spy);\n    delete proxy.create;\n    extend(proxy, func);\n    proxy.reset();\n    proxy.prototype = func.prototype;\n    proxy.displayName = name || \"spy\";\n    proxy.toString = functionToString;\n    proxy.instantiateFake = spy.create;\n    proxy.id = \"spy#\" + uuid++;\n    return proxy;\n  },\n  invoke: function invoke(func, thisValue, args) {\n    var matchings = this.matchingFakes(args);\n    var currentCallId = callId++;\n    var exception, returnValue;\n    incrementCallCount.call(this);\n    push.call(this.thisValues, thisValue);\n    push.call(this.args, args);\n    push.call(this.callIds, currentCallId);\n    matchings.forEach(function (matching) {\n      incrementCallCount.call(matching);\n      push.call(matching.thisValues, thisValue);\n      push.call(matching.args, args);\n      push.call(matching.callIds, currentCallId);\n    }); // Make call properties available from within the spied function:\n\n    createCallProperties.call(this);\n    matchings.forEach(function (matching) {\n      createCallProperties.call(matching);\n    });\n\n    try {\n      this.invoking = true;\n      returnValue = (this.func || func).apply(thisValue, args);\n      var thisCall = this.getCall(this.callCount - 1);\n\n      if (thisCall.calledWithNew() && typeof returnValue !== \"object\") {\n        returnValue = thisValue;\n      }\n    } catch (e) {\n      exception = e;\n    } finally {\n      delete this.invoking;\n    }\n\n    push.call(this.exceptions, exception);\n    push.call(this.returnValues, returnValue);\n    matchings.forEach(function (matching) {\n      push.call(matching.exceptions, exception);\n      push.call(matching.returnValues, returnValue);\n    });\n    var err = new ErrorConstructor(); // 1. Please do not get stack at this point. It may be so very slow, and not actually used\n    // 2. PhantomJS does not serialize the stack trace until the error has been thrown:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/Stack\n\n    try {\n      throw err;\n    } catch (e) {\n      /* empty */\n    }\n\n    push.call(this.errorsWithCallStack, err);\n    matchings.forEach(function (matching) {\n      push.call(matching.errorsWithCallStack, err);\n    }); // Make return value and exception available in the calls:\n\n    createCallProperties.call(this);\n\n    if (exception !== undefined) {\n      throw exception;\n    }\n\n    return returnValue;\n  },\n  named: function named(name) {\n    this.displayName = name;\n    return this;\n  },\n  getCall: function getCall(i) {\n    if (i < 0 || i >= this.callCount) {\n      return null;\n    }\n\n    return spyCall(this, this.thisValues[i], this.args[i], this.returnValues[i], this.exceptions[i], this.callIds[i], this.errorsWithCallStack[i]);\n  },\n  getCalls: function () {\n    var calls = [];\n    var i;\n\n    for (i = 0; i < this.callCount; i++) {\n      calls.push(this.getCall(i));\n    }\n\n    return calls;\n  },\n  calledBefore: function calledBefore(spyFn) {\n    if (!this.called) {\n      return false;\n    }\n\n    if (!spyFn.called) {\n      return true;\n    }\n\n    return this.callIds[0] < spyFn.callIds[spyFn.callIds.length - 1];\n  },\n  calledAfter: function calledAfter(spyFn) {\n    if (!this.called || !spyFn.called) {\n      return false;\n    }\n\n    return this.callIds[this.callCount - 1] > spyFn.callIds[0];\n  },\n  calledImmediatelyBefore: function calledImmediatelyBefore(spyFn) {\n    if (!this.called || !spyFn.called) {\n      return false;\n    }\n\n    return this.callIds[this.callCount - 1] === spyFn.callIds[spyFn.callCount - 1] - 1;\n  },\n  calledImmediatelyAfter: function calledImmediatelyAfter(spyFn) {\n    if (!this.called || !spyFn.called) {\n      return false;\n    }\n\n    return this.callIds[this.callCount - 1] === spyFn.callIds[spyFn.callCount - 1] + 1;\n  },\n  withArgs: function () {\n    var args = slice.call(arguments);\n\n    if (this.fakes) {\n      var matching = this.matchingFakes(args, true).pop();\n\n      if (matching) {\n        return matching;\n      }\n    } else {\n      this.fakes = [];\n    }\n\n    var original = this;\n    var fake = this.instantiateFake();\n    fake.matchingArguments = args;\n    fake.parent = this;\n    push.call(this.fakes, fake);\n\n    if (original.defaultBehavior && original.defaultBehavior.promiseLibrary) {\n      fake.defaultBehavior = fake.defaultBehavior || createBehavior(fake);\n      fake.defaultBehavior.promiseLibrary = original.defaultBehavior.promiseLibrary;\n    }\n\n    fake.withArgs = function () {\n      return original.withArgs.apply(original, arguments);\n    };\n\n    original.args.forEach(function (arg, i) {\n      if (!fake.matches(arg)) {\n        return;\n      }\n\n      incrementCallCount.call(fake);\n      push.call(fake.thisValues, original.thisValues[i]);\n      push.call(fake.args, arg);\n      push.call(fake.returnValues, original.returnValues[i]);\n      push.call(fake.exceptions, original.exceptions[i]);\n      push.call(fake.callIds, original.callIds[i]);\n    });\n    createCallProperties.call(fake);\n    return fake;\n  },\n  matchingFakes: function (args, strict) {\n    return (this.fakes || []).filter(function (fake) {\n      return fake.matches(args, strict);\n    });\n  },\n  matches: function (args, strict) {\n    var margs = this.matchingArguments;\n\n    if (margs.length <= args.length && deepEqual(margs, args.slice(0, margs.length))) {\n      return !strict || margs.length === args.length;\n    }\n\n    return undefined;\n  },\n  printf: function (format) {\n    var spyInstance = this;\n    var args = slice.call(arguments, 1);\n    var formatter;\n    return (format || \"\").replace(/%(.)/g, function (match, specifyer) {\n      formatter = spyApi.formatters[specifyer];\n\n      if (typeof formatter === \"function\") {\n        return formatter.call(null, spyInstance, args);\n      } else if (!isNaN(parseInt(specifyer, 10))) {\n        return sinonFormat(args[specifyer - 1]);\n      }\n\n      return \"%\" + specifyer;\n    });\n  }\n};\n\nfunction delegateToCalls(method, matchAny, actual, notCalled) {\n  spyApi[method] = function () {\n    if (!this.called) {\n      if (notCalled) {\n        return notCalled.apply(this, arguments);\n      }\n\n      return false;\n    }\n\n    var currentCall;\n    var matches = 0;\n\n    for (var i = 0, l = this.callCount; i < l; i += 1) {\n      currentCall = this.getCall(i);\n\n      if (currentCall[actual || method].apply(currentCall, arguments)) {\n        matches += 1;\n\n        if (matchAny) {\n          return true;\n        }\n      }\n    }\n\n    return matches === this.callCount;\n  };\n}\n\ndelegateToCalls(\"calledOn\", true);\ndelegateToCalls(\"alwaysCalledOn\", false, \"calledOn\");\ndelegateToCalls(\"calledWith\", true);\ndelegateToCalls(\"calledWithMatch\", true);\ndelegateToCalls(\"alwaysCalledWith\", false, \"calledWith\");\ndelegateToCalls(\"alwaysCalledWithMatch\", false, \"calledWithMatch\");\ndelegateToCalls(\"calledWithExactly\", true);\ndelegateToCalls(\"alwaysCalledWithExactly\", false, \"calledWithExactly\");\ndelegateToCalls(\"neverCalledWith\", false, \"notCalledWith\", function () {\n  return true;\n});\ndelegateToCalls(\"neverCalledWithMatch\", false, \"notCalledWithMatch\", function () {\n  return true;\n});\ndelegateToCalls(\"threw\", true);\ndelegateToCalls(\"alwaysThrew\", false, \"threw\");\ndelegateToCalls(\"returned\", true);\ndelegateToCalls(\"alwaysReturned\", false, \"returned\");\ndelegateToCalls(\"calledWithNew\", true);\ndelegateToCalls(\"alwaysCalledWithNew\", false, \"calledWithNew\");\ndelegateToCalls(\"callArg\", false, \"callArgWith\", function () {\n  throw new Error(this.toString() + \" cannot call arg since it was not yet invoked.\");\n});\nspyApi.callArgWith = spyApi.callArg;\ndelegateToCalls(\"callArgOn\", false, \"callArgOnWith\", function () {\n  throw new Error(this.toString() + \" cannot call arg since it was not yet invoked.\");\n});\nspyApi.callArgOnWith = spyApi.callArgOn;\ndelegateToCalls(\"throwArg\", false, \"throwArg\", function () {\n  throw new Error(this.toString() + \" cannot throw arg since it was not yet invoked.\");\n});\ndelegateToCalls(\"yield\", false, \"yield\", function () {\n  throw new Error(this.toString() + \" cannot yield since it was not yet invoked.\");\n}); // \"invokeCallback\" is an alias for \"yield\" since \"yield\" is invalid in strict mode.\n\nspyApi.invokeCallback = spyApi.yield;\ndelegateToCalls(\"yieldOn\", false, \"yieldOn\", function () {\n  throw new Error(this.toString() + \" cannot yield since it was not yet invoked.\");\n});\ndelegateToCalls(\"yieldTo\", false, \"yieldTo\", function (property) {\n  throw new Error(this.toString() + \" cannot yield to '\" + valueToString(property) + \"' since it was not yet invoked.\");\n});\ndelegateToCalls(\"yieldToOn\", false, \"yieldToOn\", function (property) {\n  throw new Error(this.toString() + \" cannot yield to '\" + valueToString(property) + \"' since it was not yet invoked.\");\n});\nextend(spy, spyApi);\nspy.spyCall = spyCall;\nmodule.exports = spy;","map":{"version":3,"sources":["/home/hoss/my App/my-app/node_modules/sinon/lib/sinon/spy.js"],"names":["createBehavior","require","create","extend","functionName","functionToString","getPropertyDescriptor","sinonMatch","deepEqual","use","spyCall","wrapMethod","sinonFormat","valueToString","push","Array","prototype","slice","callId","ErrorConstructor","Error","constructor","spy","object","property","types","descriptor","methodDesc","forEach","type","incrementCallCount","called","callCount","notCalled","calledOnce","calledTwice","calledThrice","createCallProperties","firstCall","getCall","secondCall","thirdCall","lastCall","createProxy","func","proxyLength","p","proxy","a","invoke","call","arguments","b","c","d","e","f","g","h","i","j","k","l","isSinonProxy","uuid","spyApi","formatters","reset","invoking","err","name","args","returnValues","thisValues","exceptions","callIds","errorsWithCallStack","fakes","fake","resetHistory","spyLength","length","displayName","toString","instantiateFake","id","thisValue","matchings","matchingFakes","currentCallId","exception","returnValue","matching","apply","thisCall","calledWithNew","undefined","named","getCalls","calls","calledBefore","spyFn","calledAfter","calledImmediatelyBefore","calledImmediatelyAfter","withArgs","pop","original","matchingArguments","parent","defaultBehavior","promiseLibrary","arg","matches","strict","filter","margs","printf","format","spyInstance","formatter","replace","match","specifyer","isNaN","parseInt","delegateToCalls","method","matchAny","actual","currentCall","callArgWith","callArg","callArgOnWith","callArgOn","invokeCallback","yield","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar createBehavior = require(\"./behavior\").create;\nvar extend = require(\"./util/core/extend\");\nvar functionName = require(\"./util/core/function-name\");\nvar functionToString = require(\"./util/core/function-to-string\");\nvar getPropertyDescriptor = require(\"./util/core/get-property-descriptor\");\nvar sinonMatch = require(\"./match\");\nvar deepEqual = require(\"./util/core/deep-equal\").use(sinonMatch);\nvar spyCall = require(\"./call\");\nvar wrapMethod = require(\"./util/core/wrap-method\");\nvar sinonFormat = require(\"./util/core/format\");\nvar valueToString = require(\"./util/core/value-to-string\");\n\nvar push = Array.prototype.push;\nvar slice = Array.prototype.slice;\nvar callId = 0;\nvar ErrorConstructor = Error.prototype.constructor;\n\nfunction spy(object, property, types) {\n    var descriptor, methodDesc;\n\n    if (!property && typeof object === \"function\") {\n        return spy.create(object);\n    }\n\n    if (!object && !property) {\n        return spy.create(function () { });\n    }\n\n    if (!types) {\n        return wrapMethod(object, property, spy.create(object[property]));\n    }\n\n    descriptor = {};\n    methodDesc = getPropertyDescriptor(object, property);\n\n    types.forEach(function (type) {\n        descriptor[type] = spy.create(methodDesc[type]);\n    });\n\n    return wrapMethod(object, property, descriptor);\n}\n\nfunction incrementCallCount() {\n    this.called = true;\n    this.callCount += 1;\n    this.notCalled = false;\n    this.calledOnce = this.callCount === 1;\n    this.calledTwice = this.callCount === 2;\n    this.calledThrice = this.callCount === 3;\n}\n\nfunction createCallProperties() {\n    this.firstCall = this.getCall(0);\n    this.secondCall = this.getCall(1);\n    this.thirdCall = this.getCall(2);\n    this.lastCall = this.getCall(this.callCount - 1);\n}\n\nfunction createProxy(func, proxyLength) {\n    // Retain the function length:\n    var p;\n    if (proxyLength) {\n        // Do not change this to use an eval. Projects that depend on sinon block the use of eval.\n        // ref: https://github.com/sinonjs/sinon/issues/710\n        switch (proxyLength) {\n            /*eslint-disable no-unused-vars, max-len*/\n            case 1: p = function proxy(a) { return p.invoke(func, this, slice.call(arguments)); }; break;\n            case 2: p = function proxy(a, b) { return p.invoke(func, this, slice.call(arguments)); }; break;\n            case 3: p = function proxy(a, b, c) { return p.invoke(func, this, slice.call(arguments)); }; break;\n            case 4: p = function proxy(a, b, c, d) { return p.invoke(func, this, slice.call(arguments)); }; break;\n            case 5: p = function proxy(a, b, c, d, e) { return p.invoke(func, this, slice.call(arguments)); }; break;\n            case 6: p = function proxy(a, b, c, d, e, f) { return p.invoke(func, this, slice.call(arguments)); }; break;\n            case 7: p = function proxy(a, b, c, d, e, f, g) { return p.invoke(func, this, slice.call(arguments)); }; break;\n            case 8: p = function proxy(a, b, c, d, e, f, g, h) { return p.invoke(func, this, slice.call(arguments)); }; break;\n            case 9: p = function proxy(a, b, c, d, e, f, g, h, i) { return p.invoke(func, this, slice.call(arguments)); }; break;\n            case 10: p = function proxy(a, b, c, d, e, f, g, h, i, j) { return p.invoke(func, this, slice.call(arguments)); }; break;\n            case 11: p = function proxy(a, b, c, d, e, f, g, h, i, j, k) { return p.invoke(func, this, slice.call(arguments)); }; break;\n            case 12: p = function proxy(a, b, c, d, e, f, g, h, i, j, k, l) { return p.invoke(func, this, slice.call(arguments)); }; break;\n            default: p = function proxy() { return p.invoke(func, this, slice.call(arguments)); }; break;\n            /*eslint-enable*/\n        }\n    } else {\n        p = function proxy() {\n            return p.invoke(func, this, slice.call(arguments));\n        };\n    }\n    p.isSinonProxy = true;\n    return p;\n}\n\nvar uuid = 0;\n\n// Public API\nvar spyApi = {\n    formatters: require(\"./spy-formatters\"),\n\n    reset: function () {\n        if (this.invoking) {\n            var err = new Error(\"Cannot reset Sinon function while invoking it. \" +\n                                \"Move the call to .reset outside of the callback.\");\n            err.name = \"InvalidResetException\";\n            throw err;\n        }\n\n        this.called = false;\n        this.notCalled = true;\n        this.calledOnce = false;\n        this.calledTwice = false;\n        this.calledThrice = false;\n        this.callCount = 0;\n        this.firstCall = null;\n        this.secondCall = null;\n        this.thirdCall = null;\n        this.lastCall = null;\n        this.args = [];\n        this.returnValues = [];\n        this.thisValues = [];\n        this.exceptions = [];\n        this.callIds = [];\n        this.errorsWithCallStack = [];\n        if (this.fakes) {\n            this.fakes.forEach(function (fake) {\n                if (fake.resetHistory) {\n                    fake.resetHistory();\n                } else {\n                    fake.reset();\n                }\n            });\n        }\n\n        return this;\n    },\n\n    create: function create(func, spyLength) {\n        var name;\n\n        if (typeof func !== \"function\") {\n            func = function () { };\n        } else {\n            name = functionName(func);\n        }\n\n        if (!spyLength) {\n            spyLength = func.length;\n        }\n\n        var proxy = createProxy(func, spyLength);\n\n        extend(proxy, spy);\n        delete proxy.create;\n        extend(proxy, func);\n\n        proxy.reset();\n        proxy.prototype = func.prototype;\n        proxy.displayName = name || \"spy\";\n        proxy.toString = functionToString;\n        proxy.instantiateFake = spy.create;\n        proxy.id = \"spy#\" + uuid++;\n\n        return proxy;\n    },\n\n    invoke: function invoke(func, thisValue, args) {\n        var matchings = this.matchingFakes(args);\n        var currentCallId = callId++;\n        var exception, returnValue;\n\n        incrementCallCount.call(this);\n        push.call(this.thisValues, thisValue);\n        push.call(this.args, args);\n        push.call(this.callIds, currentCallId);\n        matchings.forEach(function (matching) {\n            incrementCallCount.call(matching);\n            push.call(matching.thisValues, thisValue);\n            push.call(matching.args, args);\n            push.call(matching.callIds, currentCallId);\n        });\n\n        // Make call properties available from within the spied function:\n        createCallProperties.call(this);\n        matchings.forEach(function (matching) {\n            createCallProperties.call(matching);\n        });\n\n        try {\n            this.invoking = true;\n\n            returnValue = (this.func || func).apply(thisValue, args);\n\n            var thisCall = this.getCall(this.callCount - 1);\n            if (thisCall.calledWithNew() && typeof returnValue !== \"object\") {\n                returnValue = thisValue;\n            }\n        } catch (e) {\n            exception = e;\n        } finally {\n            delete this.invoking;\n        }\n\n        push.call(this.exceptions, exception);\n        push.call(this.returnValues, returnValue);\n        matchings.forEach(function (matching) {\n            push.call(matching.exceptions, exception);\n            push.call(matching.returnValues, returnValue);\n        });\n\n        var err = new ErrorConstructor();\n        // 1. Please do not get stack at this point. It may be so very slow, and not actually used\n        // 2. PhantomJS does not serialize the stack trace until the error has been thrown:\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/Stack\n        try {\n            throw err;\n        } catch (e) {/* empty */}\n        push.call(this.errorsWithCallStack, err);\n        matchings.forEach(function (matching) {\n            push.call(matching.errorsWithCallStack, err);\n        });\n\n        // Make return value and exception available in the calls:\n        createCallProperties.call(this);\n\n        if (exception !== undefined) {\n            throw exception;\n        }\n\n        return returnValue;\n    },\n\n    named: function named(name) {\n        this.displayName = name;\n        return this;\n    },\n\n    getCall: function getCall(i) {\n        if (i < 0 || i >= this.callCount) {\n            return null;\n        }\n\n        return spyCall(this, this.thisValues[i], this.args[i],\n                                this.returnValues[i], this.exceptions[i],\n                                this.callIds[i], this.errorsWithCallStack[i]);\n    },\n\n    getCalls: function () {\n        var calls = [];\n        var i;\n\n        for (i = 0; i < this.callCount; i++) {\n            calls.push(this.getCall(i));\n        }\n\n        return calls;\n    },\n\n    calledBefore: function calledBefore(spyFn) {\n        if (!this.called) {\n            return false;\n        }\n\n        if (!spyFn.called) {\n            return true;\n        }\n\n        return this.callIds[0] < spyFn.callIds[spyFn.callIds.length - 1];\n    },\n\n    calledAfter: function calledAfter(spyFn) {\n        if (!this.called || !spyFn.called) {\n            return false;\n        }\n\n        return this.callIds[this.callCount - 1] > spyFn.callIds[0];\n    },\n\n    calledImmediatelyBefore: function calledImmediatelyBefore(spyFn) {\n        if (!this.called || !spyFn.called) {\n            return false;\n        }\n\n        return this.callIds[this.callCount - 1] === spyFn.callIds[spyFn.callCount - 1] - 1;\n    },\n\n    calledImmediatelyAfter: function calledImmediatelyAfter(spyFn) {\n        if (!this.called || !spyFn.called) {\n            return false;\n        }\n\n        return this.callIds[this.callCount - 1] === spyFn.callIds[spyFn.callCount - 1] + 1;\n    },\n\n    withArgs: function () {\n        var args = slice.call(arguments);\n\n        if (this.fakes) {\n            var matching = this.matchingFakes(args, true).pop();\n\n            if (matching) {\n                return matching;\n            }\n        } else {\n            this.fakes = [];\n        }\n\n        var original = this;\n        var fake = this.instantiateFake();\n        fake.matchingArguments = args;\n        fake.parent = this;\n        push.call(this.fakes, fake);\n\n        if (original.defaultBehavior && original.defaultBehavior.promiseLibrary) {\n            fake.defaultBehavior = fake.defaultBehavior || createBehavior(fake);\n            fake.defaultBehavior.promiseLibrary = original.defaultBehavior.promiseLibrary;\n        }\n\n        fake.withArgs = function () {\n            return original.withArgs.apply(original, arguments);\n        };\n\n        original.args.forEach(function (arg, i) {\n            if (!fake.matches(arg)) {\n                return;\n            }\n\n            incrementCallCount.call(fake);\n            push.call(fake.thisValues, original.thisValues[i]);\n            push.call(fake.args, arg);\n            push.call(fake.returnValues, original.returnValues[i]);\n            push.call(fake.exceptions, original.exceptions[i]);\n            push.call(fake.callIds, original.callIds[i]);\n        });\n\n        createCallProperties.call(fake);\n\n        return fake;\n    },\n\n    matchingFakes: function (args, strict) {\n        return (this.fakes || []).filter(function (fake) {\n            return fake.matches(args, strict);\n        });\n    },\n\n    matches: function (args, strict) {\n        var margs = this.matchingArguments;\n\n        if (margs.length <= args.length &&\n            deepEqual(margs, args.slice(0, margs.length))) {\n            return !strict || margs.length === args.length;\n        }\n\n        return undefined;\n    },\n\n    printf: function (format) {\n        var spyInstance = this;\n        var args = slice.call(arguments, 1);\n        var formatter;\n\n        return (format || \"\").replace(/%(.)/g, function (match, specifyer) {\n            formatter = spyApi.formatters[specifyer];\n\n            if (typeof formatter === \"function\") {\n                return formatter.call(null, spyInstance, args);\n            } else if (!isNaN(parseInt(specifyer, 10))) {\n                return sinonFormat(args[specifyer - 1]);\n            }\n\n            return \"%\" + specifyer;\n        });\n    }\n};\n\nfunction delegateToCalls(method, matchAny, actual, notCalled) {\n    spyApi[method] = function () {\n        if (!this.called) {\n            if (notCalled) {\n                return notCalled.apply(this, arguments);\n            }\n            return false;\n        }\n\n        var currentCall;\n        var matches = 0;\n\n        for (var i = 0, l = this.callCount; i < l; i += 1) {\n            currentCall = this.getCall(i);\n\n            if (currentCall[actual || method].apply(currentCall, arguments)) {\n                matches += 1;\n\n                if (matchAny) {\n                    return true;\n                }\n            }\n        }\n\n        return matches === this.callCount;\n    };\n}\n\ndelegateToCalls(\"calledOn\", true);\ndelegateToCalls(\"alwaysCalledOn\", false, \"calledOn\");\ndelegateToCalls(\"calledWith\", true);\ndelegateToCalls(\"calledWithMatch\", true);\ndelegateToCalls(\"alwaysCalledWith\", false, \"calledWith\");\ndelegateToCalls(\"alwaysCalledWithMatch\", false, \"calledWithMatch\");\ndelegateToCalls(\"calledWithExactly\", true);\ndelegateToCalls(\"alwaysCalledWithExactly\", false, \"calledWithExactly\");\ndelegateToCalls(\"neverCalledWith\", false, \"notCalledWith\", function () {\n    return true;\n});\ndelegateToCalls(\"neverCalledWithMatch\", false, \"notCalledWithMatch\", function () {\n    return true;\n});\ndelegateToCalls(\"threw\", true);\ndelegateToCalls(\"alwaysThrew\", false, \"threw\");\ndelegateToCalls(\"returned\", true);\ndelegateToCalls(\"alwaysReturned\", false, \"returned\");\ndelegateToCalls(\"calledWithNew\", true);\ndelegateToCalls(\"alwaysCalledWithNew\", false, \"calledWithNew\");\ndelegateToCalls(\"callArg\", false, \"callArgWith\", function () {\n    throw new Error(this.toString() + \" cannot call arg since it was not yet invoked.\");\n});\nspyApi.callArgWith = spyApi.callArg;\ndelegateToCalls(\"callArgOn\", false, \"callArgOnWith\", function () {\n    throw new Error(this.toString() + \" cannot call arg since it was not yet invoked.\");\n});\nspyApi.callArgOnWith = spyApi.callArgOn;\ndelegateToCalls(\"throwArg\", false, \"throwArg\", function () {\n    throw new Error(this.toString() + \" cannot throw arg since it was not yet invoked.\");\n});\ndelegateToCalls(\"yield\", false, \"yield\", function () {\n    throw new Error(this.toString() + \" cannot yield since it was not yet invoked.\");\n});\n// \"invokeCallback\" is an alias for \"yield\" since \"yield\" is invalid in strict mode.\nspyApi.invokeCallback = spyApi.yield;\ndelegateToCalls(\"yieldOn\", false, \"yieldOn\", function () {\n    throw new Error(this.toString() + \" cannot yield since it was not yet invoked.\");\n});\ndelegateToCalls(\"yieldTo\", false, \"yieldTo\", function (property) {\n    throw new Error(this.toString() + \" cannot yield to '\" + valueToString(property) +\n        \"' since it was not yet invoked.\");\n});\ndelegateToCalls(\"yieldToOn\", false, \"yieldToOn\", function (property) {\n    throw new Error(this.toString() + \" cannot yield to '\" + valueToString(property) +\n        \"' since it was not yet invoked.\");\n});\n\nextend(spy, spyApi);\nspy.spyCall = spyCall;\nmodule.exports = spy;\n"]},"metadata":{},"sourceType":"script"}