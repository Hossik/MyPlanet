{"ast":null,"code":"var _jsxFileName = \"/home/hoss/my App/my-app/src/components/TestComponent.js\";\nimport React, { Component } from 'react';\nimport ReactTextTransition, { presets } from \"react-text-transition\";\nconst texts = [\"Click\", \"or\", \"Die\"];\nconst secondtexts = [\"Click\", \"to\", \"Close\"];\nexport class Test extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      textIndex: 0,\n      textFastIndex: 0\n    };\n  }\n\n  componentDidUpdate() {\n    setInterval(() => {\n      this.setState({\n        textIndex: this.state.textIndex + 1,\n        paragraphIndex: this.state.paragraphIndex + 1\n      });\n    }, 4000);\n    setInterval(() => {\n      this.setState({\n        textFastIndex: this.state.textFastIndex + 1\n      });\n    }, 150);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      id: this.props.isOpen ? \"nohossik\" : \"hossik\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactTextTransition, {\n      text: this.props.isOpen ? secondtexts[this.state.textIndex % secondtexts.length] : texts[this.state.textIndex % texts.length],\n      spring: presets.gentle,\n      className: \"big\",\n      delay: 300,\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\nexport default Test;","map":{"version":3,"sources":["/home/hoss/my App/my-app/src/components/TestComponent.js"],"names":["React","Component","ReactTextTransition","presets","texts","secondtexts","Test","state","textIndex","textFastIndex","componentDidUpdate","setInterval","setState","paragraphIndex","render","props","isOpen","length","gentle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,IAA8BC,OAA9B,QAA6C,uBAA7C;AAEA,MAAMC,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,KAAhB,CAAd;AACA,MAAMC,WAAW,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,OAAhB,CAApB;AACA,OAAO,MAAMC,IAAN,SAAmBL,SAAnB,CAA8B;AAAA;AAAA;AAAA,SACjCM,KADiC,GACzB;AACJC,MAAAA,SAAS,EAAE,CADP;AAEJC,MAAAA,aAAa,EAAE;AAFX,KADyB;AAAA;;AAK7BC,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKC,QAAL,CAAc;AACZJ,QAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,SAAX,GAAuB,CADtB;AAEZK,QAAAA,cAAc,EAAE,KAAKN,KAAL,CAAWM,cAAX,GAA4B;AAFhC,OAAd;AAID,KALU,EAKR,IALQ,CAAX;AAMAF,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKC,QAAL,CAAc;AACZH,QAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWE,aAAX,GAA2B;AAD9B,OAAd;AAGD,KAJU,EAIR,GAJQ,CAAX;AAKD;;AACPK,EAAAA,MAAM,GAAG;AACL,wBACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAS,MAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC,MAAX,GAAoB,UAApB,GAAiC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,mBAAD;AACI,MAAA,IAAI,EAAG,KAAKD,KAAL,CAAWC,MAAX,GAAoBX,WAAW,CAAC,KAAKE,KAAL,CAAWC,SAAX,GAAuBH,WAAW,CAACY,MAApC,CAA/B,GAA6Eb,KAAK,CAAC,KAAKG,KAAL,CAAWC,SAAX,GAAuBJ,KAAK,CAACa,MAA9B,CAD7F;AAEI,MAAA,MAAM,EAAEd,OAAO,CAACe,MAFpB;AAGI,MAAA,SAAS,EAAC,KAHd;AAII,MAAA,KAAK,EAAE,GAJX;AAKI,MAAA,MAAM,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,CADA;AAaH;;AAhCgC;AAmCrC,eAAeZ,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport ReactTextTransition, { presets } from \"react-text-transition\";\n\nconst texts = [\"Click\", \"or\", \"Die\"]\nconst secondtexts = [\"Click\", \"to\", \"Close\"]\nexport class Test extends Component  {\n    state = {\n        textIndex: 0,\n        textFastIndex: 0\n        };\n        componentDidUpdate() {\n            setInterval(() => {\n              this.setState({\n                textIndex: this.state.textIndex + 1,\n                paragraphIndex: this.state.paragraphIndex + 1\n              });\n            }, 4000);\n            setInterval(() => {\n              this.setState({\n                textFastIndex: this.state.textFastIndex + 1\n              });\n            }, 150);\n          }\n    render() {\n        return (\n        <React.Fragment>\n            <section id={this.props.isOpen ? \"nohossik\" : \"hossik\" }>\n            <ReactTextTransition\n                text= {this.props.isOpen ? secondtexts[this.state.textIndex % secondtexts.length] : texts[this.state.textIndex % texts.length] }\n                spring={presets.gentle}\n                className=\"big\"\n                delay={300}\n                inline\n            />   \n            </section>\n        </React.Fragment>\n        )\n    }\n}\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}