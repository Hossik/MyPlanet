{"ast":null,"code":"\"use strict\";\n\nvar sinonSpy = require(\"./spy\");\n\nvar sinonStub = require(\"./stub\");\n\nvar sinonMock = require(\"./mock\");\n\nvar sandboxStub = require(\"./sandbox-stub\");\n\nvar collectOwnMethods = require(\"./collect-own-methods\");\n\nvar push = [].push;\n\nfunction getFakes(fakeCollection) {\n  if (!fakeCollection.fakes) {\n    fakeCollection.fakes = [];\n  }\n\n  return fakeCollection.fakes;\n}\n\nfunction each(fakeCollection, method) {\n  var fakes = getFakes(fakeCollection);\n  var matchingFakes = fakes.filter(function (fake) {\n    return typeof fake[method] === \"function\";\n  });\n  matchingFakes.forEach(function (fake) {\n    fake[method]();\n  });\n}\n\nvar collection = {\n  verify: function verify() {\n    each(this, \"verify\");\n  },\n  restore: function restore() {\n    each(this, \"restore\");\n    this.fakes = [];\n  },\n  reset: function reset() {\n    each(this, \"reset\");\n  },\n  resetBehavior: function resetBehavior() {\n    each(this, \"resetBehavior\");\n  },\n  resetHistory: function resetHistory() {\n    getFakes(this).forEach(function (fake) {\n      var method = fake.resetHistory || fake.reset;\n\n      if (method) {\n        method.call(fake);\n      }\n    });\n  },\n  verifyAndRestore: function verifyAndRestore() {\n    var exception;\n\n    try {\n      this.verify();\n    } catch (e) {\n      exception = e;\n    }\n\n    this.restore();\n\n    if (exception) {\n      throw exception;\n    }\n  },\n  add: function add(fake) {\n    push.call(getFakes(this), fake);\n    return fake;\n  },\n  addUsingPromise: function (fake) {\n    fake.usingPromise(this.promiseLibrary);\n    return fake;\n  },\n  spy: function spy() {\n    return this.add(sinonSpy.apply(sinonSpy, arguments));\n  },\n  stub: function stub(object, property\n  /*, value*/\n  ) {\n    if (arguments.length > 2) {\n      return sandboxStub.apply(this, arguments);\n    }\n\n    var stubbed = sinonStub.apply(null, arguments);\n    var isStubbingEntireObject = typeof property === \"undefined\" && typeof object === \"object\";\n\n    if (isStubbingEntireObject) {\n      var ownMethods = collectOwnMethods(stubbed);\n      ownMethods.forEach(this.add.bind(this));\n\n      if (this.promiseLibrary) {\n        ownMethods.forEach(this.addUsingPromise.bind(this));\n      }\n    } else {\n      this.add(stubbed);\n\n      if (this.promiseLibrary) {\n        stubbed.usingPromise(this.promiseLibrary);\n      }\n    }\n\n    return stubbed;\n  },\n  mock: function mock() {\n    return this.add(sinonMock.apply(null, arguments));\n  },\n  inject: function inject(obj) {\n    var col = this;\n\n    obj.spy = function () {\n      return col.spy.apply(col, arguments);\n    };\n\n    obj.stub = function () {\n      return col.stub.apply(col, arguments);\n    };\n\n    obj.mock = function () {\n      return col.mock.apply(col, arguments);\n    };\n\n    return obj;\n  }\n};\nmodule.exports = collection;","map":{"version":3,"sources":["/home/hoss/my App/my-app/node_modules/sinon/lib/sinon/collection.js"],"names":["sinonSpy","require","sinonStub","sinonMock","sandboxStub","collectOwnMethods","push","getFakes","fakeCollection","fakes","each","method","matchingFakes","filter","fake","forEach","collection","verify","restore","reset","resetBehavior","resetHistory","call","verifyAndRestore","exception","e","add","addUsingPromise","usingPromise","promiseLibrary","spy","apply","arguments","stub","object","property","length","stubbed","isStubbingEntireObject","ownMethods","bind","mock","inject","obj","col","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar sinonSpy = require(\"./spy\");\nvar sinonStub = require(\"./stub\");\nvar sinonMock = require(\"./mock\");\nvar sandboxStub = require(\"./sandbox-stub\");\nvar collectOwnMethods = require(\"./collect-own-methods\");\n\nvar push = [].push;\n\nfunction getFakes(fakeCollection) {\n    if (!fakeCollection.fakes) {\n        fakeCollection.fakes = [];\n    }\n\n    return fakeCollection.fakes;\n}\n\nfunction each(fakeCollection, method) {\n    var fakes = getFakes(fakeCollection);\n    var matchingFakes = fakes.filter(function (fake) {\n        return typeof fake[method] === \"function\";\n    });\n\n    matchingFakes.forEach(function (fake) {\n        fake[method]();\n    });\n}\n\nvar collection = {\n    verify: function verify() {\n        each(this, \"verify\");\n    },\n\n    restore: function restore() {\n        each(this, \"restore\");\n        this.fakes = [];\n    },\n\n    reset: function reset() {\n        each(this, \"reset\");\n    },\n\n    resetBehavior: function resetBehavior() {\n        each(this, \"resetBehavior\");\n    },\n\n    resetHistory: function resetHistory() {\n        getFakes(this).forEach(function (fake) {\n            var method = fake.resetHistory || fake.reset;\n\n            if (method) {\n                method.call(fake);\n            }\n        });\n    },\n\n    verifyAndRestore: function verifyAndRestore() {\n        var exception;\n\n        try {\n            this.verify();\n        } catch (e) {\n            exception = e;\n        }\n\n        this.restore();\n\n        if (exception) {\n            throw exception;\n        }\n    },\n\n    add: function add(fake) {\n        push.call(getFakes(this), fake);\n        return fake;\n    },\n\n    addUsingPromise: function (fake) {\n        fake.usingPromise(this.promiseLibrary);\n        return fake;\n    },\n\n    spy: function spy() {\n        return this.add(sinonSpy.apply(sinonSpy, arguments));\n    },\n\n    stub: function stub(object, property/*, value*/) {\n        if (arguments.length > 2) {\n            return sandboxStub.apply(this, arguments);\n        }\n\n        var stubbed = sinonStub.apply(null, arguments);\n        var isStubbingEntireObject = typeof property === \"undefined\" && typeof object === \"object\";\n\n        if (isStubbingEntireObject) {\n            var ownMethods = collectOwnMethods(stubbed);\n            ownMethods.forEach(this.add.bind(this));\n            if (this.promiseLibrary) {\n                ownMethods.forEach(this.addUsingPromise.bind(this));\n            }\n        } else {\n            this.add(stubbed);\n            if (this.promiseLibrary) {\n                stubbed.usingPromise(this.promiseLibrary);\n            }\n        }\n\n        return stubbed;\n    },\n\n    mock: function mock() {\n        return this.add(sinonMock.apply(null, arguments));\n    },\n\n    inject: function inject(obj) {\n        var col = this;\n\n        obj.spy = function () {\n            return col.spy.apply(col, arguments);\n        };\n\n        obj.stub = function () {\n            return col.stub.apply(col, arguments);\n        };\n\n        obj.mock = function () {\n            return col.mock.apply(col, arguments);\n        };\n\n        return obj;\n    }\n};\n\nmodule.exports = collection;\n"]},"metadata":{},"sourceType":"script"}