{"ast":null,"code":"\"use strict\";\n\nvar sinonMatch = require(\"./match\");\n\nvar deepEqual = require(\"./util/core/deep-equal\").use(sinonMatch);\n\nvar functionName = require(\"./util/core/function-name\");\n\nvar sinonFormat = require(\"./util/core/format\");\n\nvar valueToString = require(\"./util/core/value-to-string\");\n\nvar slice = Array.prototype.slice;\n\nfunction throwYieldError(proxy, text, args) {\n  var msg = functionName(proxy) + text;\n\n  if (args.length) {\n    msg += \" Received [\" + slice.call(args).join(\", \") + \"]\";\n  }\n\n  throw new Error(msg);\n}\n\nvar callProto = {\n  calledOn: function calledOn(thisValue) {\n    if (sinonMatch && sinonMatch.isMatcher(thisValue)) {\n      return thisValue.test(this.thisValue);\n    }\n\n    return this.thisValue === thisValue;\n  },\n  calledWith: function calledWith() {\n    var self = this;\n    var calledWithArgs = slice.call(arguments);\n\n    if (calledWithArgs.length > self.args.length) {\n      return false;\n    }\n\n    return calledWithArgs.reduce(function (prev, arg, i) {\n      return prev && deepEqual(arg, self.args[i]);\n    }, true);\n  },\n  calledWithMatch: function calledWithMatch() {\n    var self = this;\n    var calledWithMatchArgs = slice.call(arguments);\n\n    if (calledWithMatchArgs.length > self.args.length) {\n      return false;\n    }\n\n    return calledWithMatchArgs.reduce(function (prev, expectation, i) {\n      var actual = self.args[i];\n      return prev && sinonMatch && sinonMatch(expectation).test(actual);\n    }, true);\n  },\n  calledWithExactly: function calledWithExactly() {\n    return arguments.length === this.args.length && this.calledWith.apply(this, arguments);\n  },\n  notCalledWith: function notCalledWith() {\n    return !this.calledWith.apply(this, arguments);\n  },\n  notCalledWithMatch: function notCalledWithMatch() {\n    return !this.calledWithMatch.apply(this, arguments);\n  },\n  returned: function returned(value) {\n    return deepEqual(value, this.returnValue);\n  },\n  threw: function threw(error) {\n    if (typeof error === \"undefined\" || !this.exception) {\n      return !!this.exception;\n    }\n\n    return this.exception === error || this.exception.name === error;\n  },\n  calledWithNew: function calledWithNew() {\n    return this.proxy.prototype && this.thisValue instanceof this.proxy;\n  },\n  calledBefore: function (other) {\n    return this.callId < other.callId;\n  },\n  calledAfter: function (other) {\n    return this.callId > other.callId;\n  },\n  calledImmediatelyBefore: function (other) {\n    return this.callId === other.callId - 1;\n  },\n  calledImmediatelyAfter: function (other) {\n    return this.callId === other.callId + 1;\n  },\n  callArg: function (pos) {\n    this.args[pos]();\n  },\n  callArgOn: function (pos, thisValue) {\n    this.args[pos].apply(thisValue);\n  },\n  callArgWith: function (pos) {\n    this.callArgOnWith.apply(this, [pos, null].concat(slice.call(arguments, 1)));\n  },\n  callArgOnWith: function (pos, thisValue) {\n    var args = slice.call(arguments, 2);\n    this.args[pos].apply(thisValue, args);\n  },\n  throwArg: function (pos) {\n    if (pos > this.args.length) {\n      throw new TypeError(\"Not enough arguments: \" + pos + \" required but only \" + this.args.length + \" present\");\n    }\n\n    throw this.args[pos];\n  },\n  \"yield\": function () {\n    this.yieldOn.apply(this, [null].concat(slice.call(arguments, 0)));\n  },\n  yieldOn: function (thisValue) {\n    var args = slice.call(this.args);\n    var yieldFn = args.filter(function (arg) {\n      return typeof arg === \"function\";\n    })[0];\n\n    if (!yieldFn) {\n      throwYieldError(this.proxy, \" cannot yield since no callback was passed.\", args);\n    }\n\n    yieldFn.apply(thisValue, slice.call(arguments, 1));\n  },\n  yieldTo: function (prop) {\n    this.yieldToOn.apply(this, [prop, null].concat(slice.call(arguments, 1)));\n  },\n  yieldToOn: function (prop, thisValue) {\n    var args = slice.call(this.args);\n    var yieldArg = args.filter(function (arg) {\n      return arg && typeof arg[prop] === \"function\";\n    })[0];\n    var yieldFn = yieldArg && yieldArg[prop];\n\n    if (!yieldFn) {\n      throwYieldError(this.proxy, \" cannot yield to '\" + valueToString(prop) + \"' since no callback was passed.\", args);\n    }\n\n    yieldFn.apply(thisValue, slice.call(arguments, 2));\n  },\n  toString: function () {\n    var callStr = this.proxy ? this.proxy.toString() + \"(\" : \"\";\n    var formattedArgs;\n\n    if (!this.args) {\n      return \":(\";\n    }\n\n    formattedArgs = slice.call(this.args).map(function (arg) {\n      return sinonFormat(arg);\n    });\n    callStr = callStr + formattedArgs.join(\", \") + \")\";\n\n    if (typeof this.returnValue !== \"undefined\") {\n      callStr += \" => \" + sinonFormat(this.returnValue);\n    }\n\n    if (this.exception) {\n      callStr += \" !\" + this.exception.name;\n\n      if (this.exception.message) {\n        callStr += \"(\" + this.exception.message + \")\";\n      }\n    }\n\n    if (this.stack) {\n      // Omit the error message and the two top stack frames in sinon itself:\n      callStr += (this.stack.split(\"\\n\")[3] || \"unknown\").replace(/^\\s*(?:at\\s+|@)?/, \" at \");\n    }\n\n    return callStr;\n  }\n};\nObject.defineProperty(callProto, \"stack\", {\n  enumerable: true,\n  configurable: true,\n  get: function () {\n    return this.errorWithCallStack && this.errorWithCallStack.stack || \"\";\n  }\n});\ncallProto.invokeCallback = callProto.yield;\n\nfunction createSpyCall(spy, thisValue, args, returnValue, exception, id, errorWithCallStack) {\n  if (typeof id !== \"number\") {\n    throw new TypeError(\"Call id is not a number\");\n  }\n\n  var proxyCall = Object.create(callProto);\n  proxyCall.proxy = spy;\n  proxyCall.thisValue = thisValue;\n  proxyCall.args = args;\n  proxyCall.returnValue = returnValue;\n  proxyCall.exception = exception;\n  proxyCall.callId = id;\n  proxyCall.errorWithCallStack = errorWithCallStack;\n  return proxyCall;\n}\n\ncreateSpyCall.toString = callProto.toString; // used by mocks\n\nmodule.exports = createSpyCall;","map":{"version":3,"sources":["/home/hoss/my App/my-app/node_modules/sinon/lib/sinon/call.js"],"names":["sinonMatch","require","deepEqual","use","functionName","sinonFormat","valueToString","slice","Array","prototype","throwYieldError","proxy","text","args","msg","length","call","join","Error","callProto","calledOn","thisValue","isMatcher","test","calledWith","self","calledWithArgs","arguments","reduce","prev","arg","i","calledWithMatch","calledWithMatchArgs","expectation","actual","calledWithExactly","apply","notCalledWith","notCalledWithMatch","returned","value","returnValue","threw","error","exception","name","calledWithNew","calledBefore","other","callId","calledAfter","calledImmediatelyBefore","calledImmediatelyAfter","callArg","pos","callArgOn","callArgWith","callArgOnWith","concat","throwArg","TypeError","yieldOn","yieldFn","filter","yieldTo","prop","yieldToOn","yieldArg","toString","callStr","formattedArgs","map","message","stack","split","replace","Object","defineProperty","enumerable","configurable","get","errorWithCallStack","invokeCallback","yield","createSpyCall","spy","id","proxyCall","create","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar sinonMatch = require(\"./match\");\nvar deepEqual = require(\"./util/core/deep-equal\").use(sinonMatch);\nvar functionName = require(\"./util/core/function-name\");\nvar sinonFormat = require(\"./util/core/format\");\nvar valueToString = require(\"./util/core/value-to-string\");\nvar slice = Array.prototype.slice;\n\nfunction throwYieldError(proxy, text, args) {\n    var msg = functionName(proxy) + text;\n    if (args.length) {\n        msg += \" Received [\" + slice.call(args).join(\", \") + \"]\";\n    }\n    throw new Error(msg);\n}\n\nvar callProto = {\n    calledOn: function calledOn(thisValue) {\n        if (sinonMatch && sinonMatch.isMatcher(thisValue)) {\n            return thisValue.test(this.thisValue);\n        }\n        return this.thisValue === thisValue;\n    },\n\n    calledWith: function calledWith() {\n        var self = this;\n        var calledWithArgs = slice.call(arguments);\n\n        if (calledWithArgs.length > self.args.length) {\n            return false;\n        }\n\n        return calledWithArgs.reduce(function (prev, arg, i) {\n            return prev && deepEqual(arg, self.args[i]);\n        }, true);\n    },\n\n    calledWithMatch: function calledWithMatch() {\n        var self = this;\n        var calledWithMatchArgs = slice.call(arguments);\n\n        if (calledWithMatchArgs.length > self.args.length) {\n            return false;\n        }\n\n        return calledWithMatchArgs.reduce(function (prev, expectation, i) {\n            var actual = self.args[i];\n\n            return prev && (sinonMatch && sinonMatch(expectation).test(actual));\n        }, true);\n    },\n\n    calledWithExactly: function calledWithExactly() {\n        return arguments.length === this.args.length &&\n            this.calledWith.apply(this, arguments);\n    },\n\n    notCalledWith: function notCalledWith() {\n        return !this.calledWith.apply(this, arguments);\n    },\n\n    notCalledWithMatch: function notCalledWithMatch() {\n        return !this.calledWithMatch.apply(this, arguments);\n    },\n\n    returned: function returned(value) {\n        return deepEqual(value, this.returnValue);\n    },\n\n    threw: function threw(error) {\n        if (typeof error === \"undefined\" || !this.exception) {\n            return !!this.exception;\n        }\n\n        return this.exception === error || this.exception.name === error;\n    },\n\n    calledWithNew: function calledWithNew() {\n        return this.proxy.prototype && this.thisValue instanceof this.proxy;\n    },\n\n    calledBefore: function (other) {\n        return this.callId < other.callId;\n    },\n\n    calledAfter: function (other) {\n        return this.callId > other.callId;\n    },\n\n    calledImmediatelyBefore: function (other) {\n        return this.callId === other.callId - 1;\n    },\n\n    calledImmediatelyAfter: function (other) {\n        return this.callId === other.callId + 1;\n    },\n\n    callArg: function (pos) {\n        this.args[pos]();\n    },\n\n    callArgOn: function (pos, thisValue) {\n        this.args[pos].apply(thisValue);\n    },\n\n    callArgWith: function (pos) {\n        this.callArgOnWith.apply(this, [pos, null].concat(slice.call(arguments, 1)));\n    },\n\n    callArgOnWith: function (pos, thisValue) {\n        var args = slice.call(arguments, 2);\n        this.args[pos].apply(thisValue, args);\n    },\n\n    throwArg: function (pos) {\n        if (pos > this.args.length) {\n            throw new TypeError(\n                \"Not enough arguments: \" + pos\n                + \" required but only \" + this.args.length\n                + \" present\"\n            );\n        }\n\n        throw this.args[pos];\n    },\n\n    \"yield\": function () {\n        this.yieldOn.apply(this, [null].concat(slice.call(arguments, 0)));\n    },\n\n    yieldOn: function (thisValue) {\n        var args = slice.call(this.args);\n        var yieldFn = args.filter(function (arg) {\n            return typeof arg === \"function\";\n        })[0];\n\n        if (!yieldFn) {\n            throwYieldError(this.proxy, \" cannot yield since no callback was passed.\", args);\n        }\n\n        yieldFn.apply(thisValue, slice.call(arguments, 1));\n    },\n\n    yieldTo: function (prop) {\n        this.yieldToOn.apply(this, [prop, null].concat(slice.call(arguments, 1)));\n    },\n\n    yieldToOn: function (prop, thisValue) {\n        var args = slice.call(this.args);\n        var yieldArg = args.filter(function (arg) {\n            return arg && typeof arg[prop] === \"function\";\n        })[0];\n        var yieldFn = yieldArg && yieldArg[prop];\n\n        if (!yieldFn) {\n            throwYieldError(this.proxy, \" cannot yield to '\" + valueToString(prop) +\n                \"' since no callback was passed.\", args);\n        }\n\n        yieldFn.apply(thisValue, slice.call(arguments, 2));\n    },\n\n    toString: function () {\n        var callStr = this.proxy ? this.proxy.toString() + \"(\" : \"\";\n        var formattedArgs;\n\n        if (!this.args) {\n            return \":(\";\n        }\n\n        formattedArgs = slice.call(this.args).map(function (arg) {\n            return sinonFormat(arg);\n        });\n\n        callStr = callStr + formattedArgs.join(\", \") + \")\";\n\n        if (typeof this.returnValue !== \"undefined\") {\n            callStr += \" => \" + sinonFormat(this.returnValue);\n        }\n\n        if (this.exception) {\n            callStr += \" !\" + this.exception.name;\n\n            if (this.exception.message) {\n                callStr += \"(\" + this.exception.message + \")\";\n            }\n        }\n        if (this.stack) {\n            // Omit the error message and the two top stack frames in sinon itself:\n            callStr += ( this.stack.split(\"\\n\")[3] || \"unknown\" ).replace(/^\\s*(?:at\\s+|@)?/, \" at \");\n        }\n\n        return callStr;\n    }\n};\nObject.defineProperty(callProto, \"stack\", {\n    enumerable: true,\n    configurable: true,\n    get: function () {\n        return this.errorWithCallStack && this.errorWithCallStack.stack || \"\";\n    }\n});\n\ncallProto.invokeCallback = callProto.yield;\n\nfunction createSpyCall(spy, thisValue, args, returnValue, exception, id, errorWithCallStack) {\n    if (typeof id !== \"number\") {\n        throw new TypeError(\"Call id is not a number\");\n    }\n    var proxyCall = Object.create(callProto);\n    proxyCall.proxy = spy;\n    proxyCall.thisValue = thisValue;\n    proxyCall.args = args;\n    proxyCall.returnValue = returnValue;\n    proxyCall.exception = exception;\n    proxyCall.callId = id;\n    proxyCall.errorWithCallStack = errorWithCallStack;\n\n    return proxyCall;\n}\ncreateSpyCall.toString = callProto.toString; // used by mocks\n\nmodule.exports = createSpyCall;\n"]},"metadata":{},"sourceType":"script"}