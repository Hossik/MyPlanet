{"ast":null,"code":"\"use strict\";\n\nvar collectOwnMethods = require(\"./collect-own-methods\");\n\nvar deprecated = require(\"./util/core/deprecated\");\n\nvar getPropertyDescriptor = require(\"./util/core/get-property-descriptor\");\n\nvar stubNonFunctionProperty = require(\"./stub-non-function-property\");\n\nvar sinonStub = require(\"./stub\");\n\nvar throwOnFalsyObject = require(\"./throw-on-falsy-object\"); // This is deprecated and will be removed in a future version of sinon.\n// We will only consider pull requests that fix serious bugs in the implementation\n\n\nfunction sandboxStub(object, property\n/*, value*/\n) {\n  deprecated.printWarning(\"sandbox.stub(obj, 'meth', val) is deprecated and will be removed from \" + \"the public API in a future version of sinon.\" + \"\\n Use sandbox.stub(obj, 'meth').callsFake(fn) instead in order to stub a function.\" + \"\\n Use sandbox.stub(obj, 'meth').value(fn) instead in order to stub a non-function value.\");\n  throwOnFalsyObject.apply(null, arguments);\n  var actualDescriptor = getPropertyDescriptor(object, property);\n  var isStubbingEntireObject = typeof property === \"undefined\" && typeof object === \"object\";\n  var isStubbingNonFuncProperty = typeof object === \"object\" && typeof property !== \"undefined\" && (typeof actualDescriptor === \"undefined\" || typeof actualDescriptor.value !== \"function\"); // When passing a value as third argument it will be applied to stubNonFunctionProperty\n\n  var stubbed = isStubbingNonFuncProperty ? stubNonFunctionProperty.apply(null, arguments) : sinonStub.apply(null, arguments);\n\n  if (isStubbingEntireObject) {\n    var ownMethods = collectOwnMethods(stubbed);\n    ownMethods.forEach(this.add.bind(this));\n\n    if (this.promiseLibrary) {\n      ownMethods.forEach(this.addUsingPromise.bind(this));\n    }\n  } else {\n    this.add(stubbed);\n\n    if (this.promiseLibrary) {\n      stubbed.usingPromise(this.promiseLibrary);\n    }\n  }\n\n  return stubbed;\n}\n\nmodule.exports = sandboxStub;","map":{"version":3,"sources":["/home/hoss/my App/my-app/node_modules/sinon/lib/sinon/sandbox-stub.js"],"names":["collectOwnMethods","require","deprecated","getPropertyDescriptor","stubNonFunctionProperty","sinonStub","throwOnFalsyObject","sandboxStub","object","property","printWarning","apply","arguments","actualDescriptor","isStubbingEntireObject","isStubbingNonFuncProperty","value","stubbed","ownMethods","forEach","add","bind","promiseLibrary","addUsingPromise","usingPromise","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,uBAAD,CAA/B;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,wBAAD,CAAxB;;AACA,IAAIE,qBAAqB,GAAGF,OAAO,CAAC,qCAAD,CAAnC;;AACA,IAAIG,uBAAuB,GAAGH,OAAO,CAAC,8BAAD,CAArC;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,QAAD,CAAvB;;AACA,IAAIK,kBAAkB,GAAGL,OAAO,CAAC,yBAAD,CAAhC,C,CAEA;AACA;;;AACA,SAASM,WAAT,CAAqBC,MAArB,EAA6BC;AAAQ;AAArC,EAAkD;AAC9CP,EAAAA,UAAU,CAACQ,YAAX,CACE,2EACA,8CADA,GAEA,qFAFA,GAGA,2FAJF;AAOAJ,EAAAA,kBAAkB,CAACK,KAAnB,CAAyB,IAAzB,EAA+BC,SAA/B;AAEA,MAAIC,gBAAgB,GAAGV,qBAAqB,CAACK,MAAD,EAASC,QAAT,CAA5C;AACA,MAAIK,sBAAsB,GAAG,OAAOL,QAAP,KAAoB,WAApB,IAAmC,OAAOD,MAAP,KAAkB,QAAlF;AACA,MAAIO,yBAAyB,GAAG,OAAOP,MAAP,KAAkB,QAAlB,IACG,OAAOC,QAAP,KAAoB,WADvB,KAEI,OAAOI,gBAAP,KAA4B,WAA5B,IACD,OAAOA,gBAAgB,CAACG,KAAxB,KAAkC,UAHrC,CAAhC,CAZ8C,CAkB9C;;AACA,MAAIC,OAAO,GAAGF,yBAAyB,GACvBX,uBAAuB,CAACO,KAAxB,CAA8B,IAA9B,EAAoCC,SAApC,CADuB,GAEvBP,SAAS,CAACM,KAAV,CAAgB,IAAhB,EAAsBC,SAAtB,CAFhB;;AAIA,MAAIE,sBAAJ,EAA4B;AACxB,QAAII,UAAU,GAAGlB,iBAAiB,CAACiB,OAAD,CAAlC;AACAC,IAAAA,UAAU,CAACC,OAAX,CAAmB,KAAKC,GAAL,CAASC,IAAT,CAAc,IAAd,CAAnB;;AACA,QAAI,KAAKC,cAAT,EAAyB;AACrBJ,MAAAA,UAAU,CAACC,OAAX,CAAmB,KAAKI,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAnB;AACH;AACJ,GAND,MAMO;AACH,SAAKD,GAAL,CAASH,OAAT;;AACA,QAAI,KAAKK,cAAT,EAAyB;AACrBL,MAAAA,OAAO,CAACO,YAAR,CAAqB,KAAKF,cAA1B;AACH;AACJ;;AAED,SAAOL,OAAP;AACH;;AAEDQ,MAAM,CAACC,OAAP,GAAiBnB,WAAjB","sourcesContent":["\"use strict\";\n\nvar collectOwnMethods = require(\"./collect-own-methods\");\nvar deprecated = require(\"./util/core/deprecated\");\nvar getPropertyDescriptor = require(\"./util/core/get-property-descriptor\");\nvar stubNonFunctionProperty = require(\"./stub-non-function-property\");\nvar sinonStub = require(\"./stub\");\nvar throwOnFalsyObject = require(\"./throw-on-falsy-object\");\n\n// This is deprecated and will be removed in a future version of sinon.\n// We will only consider pull requests that fix serious bugs in the implementation\nfunction sandboxStub(object, property/*, value*/) {\n    deprecated.printWarning(\n      \"sandbox.stub(obj, 'meth', val) is deprecated and will be removed from \" +\n      \"the public API in a future version of sinon.\" +\n      \"\\n Use sandbox.stub(obj, 'meth').callsFake(fn) instead in order to stub a function.\" +\n      \"\\n Use sandbox.stub(obj, 'meth').value(fn) instead in order to stub a non-function value.\"\n    );\n\n    throwOnFalsyObject.apply(null, arguments);\n\n    var actualDescriptor = getPropertyDescriptor(object, property);\n    var isStubbingEntireObject = typeof property === \"undefined\" && typeof object === \"object\";\n    var isStubbingNonFuncProperty = typeof object === \"object\"\n                                    && typeof property !== \"undefined\"\n                                    && (typeof actualDescriptor === \"undefined\"\n                                    || typeof actualDescriptor.value !== \"function\");\n\n\n    // When passing a value as third argument it will be applied to stubNonFunctionProperty\n    var stubbed = isStubbingNonFuncProperty ?\n                    stubNonFunctionProperty.apply(null, arguments) :\n                    sinonStub.apply(null, arguments);\n\n    if (isStubbingEntireObject) {\n        var ownMethods = collectOwnMethods(stubbed);\n        ownMethods.forEach(this.add.bind(this));\n        if (this.promiseLibrary) {\n            ownMethods.forEach(this.addUsingPromise.bind(this));\n        }\n    } else {\n        this.add(stubbed);\n        if (this.promiseLibrary) {\n            stubbed.usingPromise(this.promiseLibrary);\n        }\n    }\n\n    return stubbed;\n}\n\nmodule.exports = sandboxStub;\n"]},"metadata":{},"sourceType":"script"}